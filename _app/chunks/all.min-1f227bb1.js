var I3=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},U3={exports:{}},d3={exports:{}};(function(W2){var A2=function(A){var r="1.1.13",F=new I1,_1=A.bigInt,N1=A.bigDec;N1.set({precision:250});var T0={},X1=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],N0={},$={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["\u03C0"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{\u03C0:"pi","\u221E":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};(function(){$.CACHE.roots={};for(var t=40,p=40,M=2;M<=t;M++)for(var I=2;I<=p;I++){var D=_1(M).pow(I);$.CACHE.roots[D+"-"+I]=M}})();var e0=T0.N=1,x1=T0.P=2,A0=T0.S=3,f1=T0.EX=4,X0=T0.FN=5,o1=T0.PL=6,$0=T0.CB=7,z0=T0.CP=8,p0=$.CONST_HASH="#",q1=$.PARENTHESIS,F1=$.SQRT,c1=$.ABS,b1=$.FACTORIAL,Z0=$.DOUBLEFACTORIAL,Z=[],i={},h=[],l=[],f=function(t,p){if(!$.suppress_errors)throw p?new p(t):new Error(t)},d=function(t){var p=function(M){this.name=t,this.message=M!==void 0?M:"";var I=new Error(this.message);I.name=this.name,this.stack=I.stack};return p.prototype=Object.create(Error.prototype),p},E=function(t){return h.indexOf(t)!==-1},L=function(t){for(var p=t[0],M=1,I=t.length;M<I;M++)if(!t[M].equals(p))return!1;return!0},x=function(t){l.push(t),$.SHOW_WARNINGS&&console&&console.warn&&console.warn(t)},H=function(t,p){if(p=p||"variable",$.ALLOW_CHARS.indexOf(t)===-1){var M=$.VALIDATION_REGEX;if(!M.test(t))throw new e(t+" is not a valid "+p+" name")}},u0=function(t){var p=Math.sign(t);if(t=Math.abs(t),/\d+\.?\d*e[\+\-]*\d+/i.test(t)){var M="0",I=String(t).toLowerCase().split("e"),D=I.pop(),t0=Math.abs(D),j=D/t0,C0=I[0].split(".");if(j===-1)t0=t0-C0[0].length,t0<0?t=C0[0].slice(0,t0)+"."+C0[0].slice(t0)+(C0.length===2?C0[1]:""):t=M+"."+new Array(t0+1).join(M)+C0.join("");else{var j0=C0[1];j0&&(t0=t0-j0.length),t0<0?t=C0[0]+j0.slice(0,t0)+"."+j0.slice(t0):t=C0.join("")+new Array(t0+1).join(M)}}return p<0?"-"+t:t},q0=function(t){for(var p=Math.floor(Math.sqrt(t)),M=2;M<=p;M++)if(t%M===0)return!1;return!0},d0=function(t,p){var M={};return M[t]=p,M},Q0=function(t){return/^\d+\.?\d*$/.test(t)},t1=function(t){for(var p=0;p<t.length;p++)if(!Q0(t[p]))return!1;return!0},l1=function(t){return r0(t)?l1(t.multiplier.toDecimal()):t%1!==0},r0=function(t){return t instanceof G},w0=function(t){return t instanceof K0},I0=function(t,p,M){if(M=M||{c:[],add:function(C0){this.c.indexOf(C0)===-1&&isNaN(C0)&&this.c.push(C0)}},r0(t)){var I=t.group,D=t.previousGroup;if(I===f1&&I0(t.power,p,M),I===z0||I===$0||D===z0||D===$0)for(var t0 in t.symbols)I0(t.symbols[t0],p,M);else if(I===A0||D===A0)t.value==="e"||t.value==="pi"||t.value===$.IMAGINARY||M.add(t.value);else if(I===o1||D===o1)I0(k(t.symbols),p,M);else if(I===f1)isNaN(t.value)||M.add(t.value),I0(t.power,p,M);else if(I===X0&&!p)for(var j=0;j<t.args.length;j++)I0(t.args[j],p,M)}return M.c.sort()},i0=function(t,p){for(var M=new G(0),I=0;I<t.length;I++){var D=t[I];M=F.add(M,r0(D)?D:F.parse(D))}return p?Number(M):M},k0=function(t,p){t=F.expand(t),p=p||{};var M=function(I,D){p[I]||(p[I]=new G(0)),p[I]=F.add(p[I],D.clone())};return t.each(function(I){if(I.isConstant("all"))M("constants",I);else if(I.group===A0)M(I.value,I);else if(I.group===X0&&(I.fname===c1||I.fname===""))k0(I.args[0]);else{if(I.group===f1||I.group===X0)throw new Error("Unable to separate. Term cannot be a function!");M(I0(I).join(" "),I)}}),p},d1=function(t,p){p=p||t.length;for(var M=0;M<p;M++){var I=t[M];I||(t[M]=new G(0))}return t},H0=function(t){return t instanceof z1},s0=function(t){return t instanceof w1},M0=function(t){return t instanceof L1},n1=function(t){return t.group===e0||t.group===x1},m1=function(t){return t.group===A0&&t.multiplier.equals(1)&&t.power.equals(1)},_=function(t){return Array.isArray(t)},S=function(t){return/^[-+]?\d+e?\+?\d*$/gim.test(t.toString())},O=function(t){return r0(t)&&(t=t.multiplier),t.lessThan(0)},W=function(t){return t&&String(t)},X=function(t){return"("+t+")"},f0=function(t,p,M,I){return t.substr(0,p)+I+t.substr(M,t.length)},c0=function(t){return t!==void 0&&t.custom},O0=function(t,p){return t<0==p<0},Y=function(){var t=[].slice.call(arguments),p=t.shift(),M=p.replace(/{(\d+)}/g,function(I,D){var t0=t[D];return typeof t0=="function"?t0():t0});return M},q=function(t,p,M){var I=[];M=M||1;for(var D=t;D<=p;D++)I.push(D*M);return I},J=Object.keys,k=function(t,p,M){for(var I in t)break;return p?I:M?{key:I,obj:t[I]}:t[I]},S0=function(t,p,M){for(var I=5,D={},t0,j=0;j<M.length;j++)D[M[j]]=new G(Math.floor(Math.random()*I)+1);return J1("PARSE2NUMBER",function(){t0=F.parse(t,D).equals(F.parse(p,D))}),t0},E0=function(t,p,M){return H(t),E(t)?null:(p=p||I0(F.parse(M)),F.functions[t]=[F.mapped_function,p.length,{name:t,params:p,body:M}],M)},U0=function(t){return Math.max.apply(void 0,t)},h0=function(t){return Math.min.apply(void 0,t)},l0=function(t,p){if(t.sort(),p.sort(),t.length===p.length){for(var M=0;M<t.length;M++)if(t[M]!==p[M])return!1;return!0}return!1},F0=function(t){for(var p=[],M=t.length,I=0;I<M;I++)p[I]=t[I].clone();return p},L0=function(t,p){p=p||20;var M=[],I,D,t0;M.push(t[0]);for(var j=0;j<t.length-1;j++){I=t[j],D=t[j+1]-I,t0=D/p;for(var C0=0;C0<p;C0++)I+=t0,M.push(I)}return M},_0=function(t){var p,M;if(t.group===X0&&t.fname===""?(p=G.unwrapPARENS(F.parse(t).toLinear()),M=F.parse(t.power)):t.group===x1&&(p=F.parse(t.value),M=F.parse(t.power)),p&&M&&p.group===e0&&M.group===e0&&p.multiplier.isNegative()){for(var I=[],D=G.toPolarFormArray(v1(t)),t0=D[0],j=F.arg(p),C0=M.multiplier.den.toString(),j0=M.multiplier.num.toString(),J0="(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",e1=0;e1<C0;e1++){var s=v1(F.parse(Y("(({0})+2*pi*({1}))/({2})",j,e1,C0))).multiplier.toDecimal();I.push(v1(F.parse(Y(J0,t0,C0,$.IMAGINARY,s,j0))))}return z1.fromArray(I)}else if(t.isConstant(!0,!0)){var c=t.sign(),j=v1(t.abs()),P=F.sqrt(j),I=[P.clone(),P.negate()];c<0&&(I=I.map(function(P0){return F.multiply(P0,G.imaginary())}))}else I=[F.parse(t)];return z1.fromArray(I)},y0=function(t,p){for(var M=t.length,I=[],D=0;D<t.length;D++)I.push([t[D],p[D]]);I.sort(function(C0,j0){return C0[0]-j0[0]});var t0=[],j=[];for(D=0;D<M;D++)t0.push(I[D][0]),j.push(I[D][1]);return[t0,j]},G0=function(t,p,M){p=String(p);var I,D,t0,j;if(t.group===z0){var C0=F.expand(t.clone()).stripVar(p);I=F.subtract(t.clone(),C0.clone()),j=C0}else I=t.clone();return D=I.stripVar(p),t0=F.divide(I.clone(),D.clone()),j=j||new G(0),M?{a:D,x:t0,ax:I,b:j}:[D,t0,I,j]},b0=function(t,p){return S(t)?t>=Number.MAX_VALUE?t.toString():Number(t):(p=typeof p=="undefined"?14:p,Math.round(t*Math.pow(10,p))/Math.pow(10,p))},R0=function(t){for(var p="u",M=p,I=0,D=I0(t);!(h.indexOf(M)===-1&&D.indexOf(M)===-1);)M=p+I++;for(var t0=0,j=h.length;t0<=j;t0++)if(!h[t0]){h[t0]=M;break}return M},i1=function(t){var p=h.indexOf(t);p!==-1&&(h[p]=void 0)},A1=function(t,p){if(_(t))for(var M=t.length,I=0;I<M;I++)p.call(t,I);else for(var D in t)t.hasOwnProperty(D)&&p.call(t,D)},a1=function(t){return t%2===0},U1=function(t){return 1/(t%1)%2===0},D1=function(t){for(var p=t.length,M=[],I=0;I<p;I++){var D=t[I];M.indexOf(D)===-1&&M.push(D)}return M},P1=function(t){for(var p=I0(t[0],null,null),M=1,I=t.length;M<I;M++)p=p.concat(I0(t[M]));return p=D1(p).sort(),p},Y1=function(t,p){var M=typeof p;(M!=="function"||M==="undefined")&&(p=function(j0,J0){return j0===J0});for(var I=[];t.length;){var D=t[0];if(t.length===1){I.push(D);break}var t0=[];I.push(D);for(var j=1;j<t.length;j++){var C0=t[j];p(D,C0)||t0.push(C0)}t=t0}return I},$1=function(t){var p=function(M){h.indexOf(M)===-1&&h.push(M)};typeof t=="string"?p(t):A1(t,function(M){p(M)})},T1=function(t,p){var M;return _(t)?M=t.splice(p,1)[0]:(M=t[p],delete t[p]),M},J1=function(t,p,M,I){var D=$[t];$[t]=M===void 0?!0:!!M;var t0=p.call(I);return $[t]=D,t0},v2=function(){var t={};for(var p in F.functions)t[p]=F.functions[p][0];return t},H1=function(t){return[].slice.call(t)},R1=function(t,p,M){var I=[];t.each(function(t0){if(t0.contains(p))var j=t0.stripVar(p),C0=F.divide(t0.clone(),j.clone()),j0=C0.power.toDecimal();else j=t0,j0=0;var J0=I[j0];I[j0]=J0?F.add(J0,j):j},!0);for(var D=0;D<I.length;D++)I[D]||(I[D]=new G(0));return I},v1=function(t,p){return J1("PARSE2NUMBER",function(){return F.parse(t,p)},!0)},e2=function(t){if(_(t)){for(var p=new z1([]),M=0;M<t.length;M++)p.elements.push(e2(t[M]));return p}return r0(t)?t:F.parse(t)},t2=function(t){for(var p=X1[X1.length-1]||2,M=p;M<t;M++)q0(M)&&X1.push(M)},C=function(t){for(var p=0;p<t.length;p++)if(t[p].group!==e0)return!1;return!0},T=function(t){for(var p=0;p<t.length;p++)if(!(t[p].isPi()||t[p].isE())&&!t[p].isConstant(!0))return!1;return!0},a=function(t,p,M){(p.isComposite()&&!t.isComposite()||p.isLinear()&&!t.isLinear())&&([t,p]=[p,t]);var I=new G(0);return t.isLinear()?t.each(function(D){if(p.isComposite())p.isLinear()?p.each(function(j){var C0=F.multiply(F.parse(D),F.parse(j)),j0=F.expand(F.parse(C0),M);I=F.add(I,j0)},!0):I=F.add(I,F.multiply(D,F.parse(p)));else{var t0=F.multiply(F.parse(D),F.parse(p));I=F.add(I,F.expand(t0,M))}},!0):I=F.multiply(t,p),I},w=d("DivisionByZero"),y=d("ParseError"),v=d("UndefinedError"),U=d("OutOfFunctionDomainError"),b=d("MaximumIterationsReached"),R=d("NerdamerTypeError"),z=d("ParityError"),Q=d("OperatorError"),a0=d("OutOfRangeError"),g0=d("DimensionError"),e=d("InvalidVariableNameError"),u=d("ValueLimitExceededError"),m=d("NerdamerValueError"),N=d("SolveError"),B=d("InfiniteLoopError"),o0=d("UnexpectedTokenError"),x0={DivisionByZero:w,ParseError:y,OutOfFunctionDomainError:U,UndefinedError:v,MaximumIterationsReached:b,NerdamerTypeError:R,ParityError:z,OperatorError:Q,OutOfRangeError:a0,DimensionError:g0,InvalidVariableNameError:e,ValueLimitExceededError:u,NerdamerValueError:m,SolveError:N,InfiniteLoopError:B,UnexpectedTokenError:o0},n0={csc:function(t){return 1/Math.sin(t)},sec:function(t){return 1/Math.cos(t)},cot:function(t){return 1/Math.tan(t)},acsc:function(t){return Math.asin(1/t)},asec:function(t){return Math.acos(1/t)},acot:function(t){return Math.PI/2-Math.atan(t)},erf:function(t){var p=1/(1+.5*Math.abs(t)),M=1-p*Math.exp(-t*t-1.26551223+p*(1.00002368+p*(.37409196+p*(.09678418+p*(-.18628806+p*(.27886807+p*(-1.13520398+p*(1.48851587+p*(-.82215223+p*.17087277)))))))));return t>=0?M:-M},diff:function(t){var p=.001,M=function(I){return(t(I+p)-t(I-p))/(2*p)};return M},median:function(...t){t.sort(function(M,I){return M-I});var p=Math.floor(t.length/2);return t.length%2?t[p]:(t[p-1]+t[p])/2},fromContinued:function(t){for(var p=t.fractions.slice(),M=1/p.pop(),I=0,D=p.length;I<D;I++)M=1/(p.pop()+M);return t.sign*(t.whole+M)},continuedFraction:function(t,p){p=p||20;for(var M=Math.sign(t),I=Math.abs(t),D=Math.floor(I),t0=I-D,j=0,C0=!1,j0=1e-14,J0=1e7,e1,s,c={whole:D,sign:M,fractions:[]};!C0&&t0!==0;){if(e1=1/t0,s=Math.floor(e1),s>J0){var P=n0.fromContinued(c)-t;if(P<=Number.EPSILON)break}c.fractions.push(s),t0=e1-s,(t0<=j0||j>=p-1)&&(C0=!0),j++}var V=c.fractions.length-1;return c.fractions[V]===1&&(c.fractions.pop(),c.fractions[--V]++),c},bigpow:function(t,p){t instanceof D0||(t=D0.create(t)),p instanceof D0||(p=D0.create(p));var M=new D0(0);if(p.isInteger())M.num=t.num.pow(p.toString()),M.den=t.den.pow(p.toString());else{var I=D0.create(Math.pow(t.num,p.num)),D=D0.create(Math.pow(t.den,p.num));M.num=n0.nthroot(I,p.den.toString()),M.den=n0.nthroot(D,p.den)}return M},gamma:function(t){var p=7,M=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(t<.5)return Math.PI/(Math.sin(Math.PI*t)*n0.gamma(1-t));t-=1;for(var I=M[0],D=1;D<p+2;D++)I+=M[D]/(t+D);var t0=t+p+.5;return Math.sqrt(2*Math.PI)*Math.pow(t0,t+.5)*Math.exp(-t0)*I},bigfactorial:function(t){for(var p=new _1(1),M=2;M<=t;M++)p=p.times(M);return new D0(p)},bigLog:function(t){var p=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(p[t])return D0.quick.apply(null,p[t].split("/"));t=new D0(t);for(var M=80,I=new D0(0),D=t.subtract(new D0(1)),t0=t.add(new D0(1)),j=0;j<M;j++){var C0=new D0(2*j+1),j0=n0.bigpow(D.divide(t0),C0),J0=C0.clone().invert().multiply(j0);I=I.add(J0)}return I.multiply(new D0(2))},factorial:function(t){var p=t%1===0;if(p&&t<0)return NaN;if(!p)return n0.gamma(t+1);for(var M=1,I=2;I<=t;I++)M=M*I;return M},dfactorial:function(t){if(S(t)){var p=t%2===0,M=p?t/2:(t+1)/2,I=new D0(1);if(p)for(var D=1;D<=M;D++)I=I.multiply(new D0(2).multiply(new D0(D)));else for(var D=1;D<=M;D++)I=I.multiply(new D0(2).multiply(new D0(D)).subtract(new D0(1)))}else I=Math.pow(2,(1+2*t-Math.cos(Math.PI*t))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*t)-1)/4)*n0.gamma(1+t/2);return I},GCD:function(){for(var t=D1([].slice.call(arguments).map(function(D){return Math.abs(D)})).sort(),p=Math.abs(t.shift()),M=t.length;M-- >0;)for(var I=Math.abs(t.shift());;){if(p%=I,p===0){p=I;break}if(I%=p,I===0)break}return p},QGCD:function(){for(var t=[].slice.call(arguments),p=t[0],M=1;M<t.length;M++){var I=t[M],D=p.isNegative()&&I.isNegative()?-1:1;p=I.gcd(p),D<0&&p.negate()}return p},LCM:function(t,p){return t*p/n0.GCD(t,p)},pow:function(t,p){return t<0&&Math.abs(p)<1?1/p%2===0?NaN:-Math.pow(Math.abs(t),p):Math.pow(t,p)},factor:function(t){t=Number(t);var p=Math.sign(t);t=Math.abs(t);var M=n0.ifactor(t),I=new G;I.symbols={},I.group=$0;for(var D in M){var t0=new G(1);t0.group=x1,t0.value=D,t0.power=new G(M[D]),I.symbols[D]=t0}return I.updateHash(),t===1&&(I=new G(t)),p<0&&I.negate(),I},sfactor:function(t,p){p=p||{};var M=Math.floor(Math.sqrt(t)),I=X1[X1.length-1];M>I&&t<1e6&&t2(M);for(var D=X1.length,t0=0;t0<D;t0++)for(var j=X1[t0];t%j===0;)t=t/j,p[j]=(p[j]||0)+1;return t>1&&(p[t]=1),p},ifactor:function(t){var p=new _1(t);if(t=String(t),t==="0")return{0:1};t=new _1(t);var M=t.sign?-1:1;t=t.abs();var I={};if(t.lt("65536"))I=n0.sfactor(t,I);else{var D=function(J0){J0.isPrime()?I[J0]=(I[J0]||0)+1:I=n0.sfactor(J0,I)};try{for(var t0=1e3,j=0;!t.abs().equals(1);)if(t.isPrime()){D(t);break}else{let J0=function(e1){for(var s=new _1(e1),c=2,P=new _1(e1),V=new _1(1);V.equals(1);){for(var m0=0;m0<=c&&V.equals(1);m0++){if(j++>t0)throw new Error("stopping");P=P.pow(2).add(1).mod(t),V=_1.gcd(P.minus(s).abs(),t)}c=c*2,s=P}return V.equals(t)?J0(e1+1):V};var C0=J0(2);D(C0),t=t.divide(C0)}}catch{I={},D(p)}}if(M===-1){var j0=h0(J(I));I["-"+j0]=I[j0],delete I[j0]}return I},boxfactor:function(t,p){p=p||200;for(var M,I,D=Math.floor(5/12*t),t0=0,j=!1;M=Math.floor(t/D),I=t%D,I!==0;){if(j)return[t,1];D=Math.max(I,D-I),t0++,j=t0>p}return[M,D,t0]},fib:function(t){var p=Math.sign(t);t=Math.abs(t),p=a1(t)?p:Math.abs(p);for(var M=0,I=1,D=1,t0=2;t0<=t;t0++)D=M+I,M=I,I=D;return D*p},mod:function(t,p){return t%p},integer_part:function(t){var p=Math.sign(t);return p*Math.floor(Math.abs(t))},simpson:function(t,p,M,I){var D=function(P,V,m0){var P0=P(V),r1=1e-12;return isNaN(P0)&&(P0=P(m0===1?V+r1:V-r1)),P0};I=I||1e-4;var t0=Math.abs(Math.floor((M-p)/I));t0%2!==0&&t0++;for(var j=(M-p)/t0,C0=D(t,p,1),j0=!1,J0=p+j,e1,s,c=1;c<t0;c++)e1=j0?2:4,s=e1*D(t,J0,1),C0+=s,j0=!j0,J0+=j;return(C0+D(t,J0,2))*(j/3)},num_integrate:function(t,p,M,I,D){if(D<0)throw new Error("max depth cannot be negative");function t0(j0,J0,e1,s,c,P,V,m0,P0,r1,y1){if(y1.nanEncountered)return NaN;var u1,s1,C1,g1,f2,k1,h1,Q1,p2,a2;if(u1=e1-J0,s1=j0(J0+u1*.25),C1=j0(e1-u1*.25),isNaN(s1)){y1.nanEncountered=!0;return}if(isNaN(C1)){y1.nanEncountered=!0;return}if(g1=u1*(s+4*s1+c)/12,f2=u1*(c+4*C1+P)/12,k1=g1+f2,a2=(k1-V)/15,!(y1.maxDepthCount>1e3*P0))return r1>P0?(y1.maxDepthCount++,k1+a2):Math.abs(a2)<m0?k1+a2:(h1=J0+u1*.5,Q1=t0(j0,J0,h1,s,s1,c,g1,m0*.5,P0,r1+1,y1),isNaN(Q1)?(y1.nanEncountered=!0,NaN):(p2=t0(j0,h1,e1,c,C1,P,f2,m0*.5,P0,r1+1,y1),isNaN(p2)?(y1.nanEncountered=!0,NaN):Q1+p2))}function j(j0,J0,e1,s,c){var P={maxDepthCount:0,nanEncountered:!1};s===void 0&&(s=1e-9),c===void 0&&(c=45);var V=j0(J0),m0=j0(.5*(J0+e1)),P0=j0(e1),r1=(V+4*m0+P0)*(e1-J0)/6,y1=t0(j0,J0,e1,V,m0,P0,r1,s,c,1,P);if(P.maxDepthCount>0&&x("integrate-adaptive-simpson: Warning: maximum recursion depth ("+c+") reached "+P.maxDepthCount+" times"),P.nanEncountered)throw new Error("Function does not converge over interval!");return y1}var C0;try{C0=j(t,p,M,I,D)}catch{return n0.simpson(t,p,M)}return b0(C0,12)},Ci:function(t){for(var p=20,M=.5772156649015329,I=0,D=1;D<p;D++){var t0=2*D;I+=Math.pow(-1,D)*Math.pow(t,t0)/(t0*n0.factorial(t0))}return Math.log(t)+M+I},Si:function(t){for(var p=20,M=0,I=0;I<p;I++){var D=2*I;M+=Math.pow(-1,I)*Math.pow(t,D+1)/((D+1)*n0.factorial(D+1))}return M},Ei:function(t){if(Number(t)===0)return-1/0;for(var p=30,M=.5772156649015329,I=0,D=1;D<p;D++)I+=Math.pow(t,D)/(D*n0.factorial(D));return M+Math.abs(Math.log(t))+I},Shi:function(t){for(var p=30,M=0,I,D,t0=0;t0<p;t0++)I=2*t0,D=I+1,M+=Math.pow(t,D)/(D*D*n0.factorial(I));return M},Chi:function(t){var p,M,I;return p=.001,M=.5772156649015329,I=function(D){return(Math.cosh(D)-1)/D},Math.log(t)+M+n0.num_integrate(I,.002,t,p)},Li:function(t){return n0.Ei(n0.bigLog(t))},gamma_incomplete:function(t,D){for(var M=t-1,I=0,D=D||0,t0=0;t0<M;t0++)I+=Math.pow(D,t0)/n0.factorial(t0);return n0.factorial(M)*Math.exp(-D)*I},step:function(t){return t>0?1:t<0?0:.5},rect:function(p){var p=Math.abs(p);return p===.5?p:p>.5?0:1},sinc:function(t){return t.equals(0)?1:Math.sin(t)/t},tri:function(t){return t=Math.abs(t),t>=1?0:1-t},nthroot:function(t,p){if(t instanceof D0||(t=new D0(t.toString())),p instanceof D0||(p=new D0(p.toString())),p.equals(1))return t;var M=t.divide(new D0(2)),I=new D0(1e-15),D,t0,j,C0=p.clone().invert(),j0=p.subtract(new D0(1));do{var J0=n0.bigpow(M,j0),e1=C0.multiply(t.divide(J0).subtract(M)).toDecimal(25);if(D=D0.create(e1),j)break;M=M.add(D);var e1=D.toDecimal();j=t0?t0===e1:!1,t0=e1}while(D.abs().gte(I));return M},sqrt:function(t){t instanceof D0||(t=new D0(t));var p,M,I,D,t0=0,j=!1,C0=new D0(1e-20);p=t.divide(new D0(2));var j0=1e3;do{if(t0>j0)throw new Error("Unable to calculate square root for "+t);p=p.add(t.divide(p)).divide(new D0(2)),p=new D0(p.decimal(30)),M=t.subtract(p.multiply(p)),D=I?I.equals(M):!1,(M.clone().abs().lessThan(C0)||D)&&(j=!0),I=M,t0++}while(!j);return p}};$.FUNCTION_MODULES.push(n0),$1(n0),Math.sign=Math.sign||function(t){return t=+t,t===0||isNaN(t)?t:t>0?1:-1},Math.cosh=Math.cosh||function(t){var p=Math.exp(t);return(p+1/p)/2},Math.sech=Math.sech||function(t){return 1/Math.cosh(t)},Math.csch=Math.csch||function(t){return 1/Math.sinh(t)},Math.coth=Math.coth||function(t){return 1/Math.tanh(t)},Math.sinh=Math.sinh||function(t){var p=Math.exp(t);return(p-1/p)/2},Math.tanh=Math.tanh||function(t){if(t===1/0)return 1;if(t===-1/0)return-1;var p=Math.exp(2*t);return(p-1)/(p+1)},Math.asinh=Math.asinh||function(t){return t===-1/0?t:Math.log(t+Math.sqrt(t*t+1))},Math.acosh=Math.acosh||function(t){return Math.log(t+Math.sqrt(t*t-1))},Math.atanh=Math.atanh||function(t){return Math.log((1+t)/(1-t))/2},Math.log10=Math.log10||function(t){return Math.log(t)*Math.LOG10E},Math.trunc=Math.trunc||function(t){return isNaN(t)?NaN:t>0?Math.floor(t):Math.ceil(t)};function W0(t,p,M,I){var D=p==="hash",t0=void 0,j=D?void 0:p,C0=j==="decimal"||j==="decimals";C0&&typeof I=="undefined"&&(I=$.DEFAULT_DECP);function j0(h1){switch(p){case"decimals":case"decimal":return t0=t0||function(Q2){return!1},h1.valueOf();case"recurring":t0=t0||function(Q2){return Q2.indexOf("'")!==-1};var N2=h1.toString(),M2=/^-?\d+(?:\/\d+)?$/.exec(N2);if(M2.length===0)return N2;var C2=M2[0].split("/"),Q1=!1,p2=Number(C2[0]);p2<0&&(p2=-p2,Q1=!0);var a2=Number(C2[1]);a2||(a2=1);var e3=Math.floor(p2/a2),W1=10*(p2-e3*a2);for(e3=e3.toString()+".";W1&&W1<a2;)W1*=10,e3+="0";for(var r2="",o2=[],h2=0;;){if(typeof o2[W1]!="undefined"){var M1=r2.slice(0,o2[W1]),u2=r2.slice(o2[W1]),s2=e3+M1+"'"+u2+"'";return(Q1?"-":"")+s2.replace("'0'","").replace(/\.$/,"")}var l2=Math.floor(W1/a2),S2=W1-l2*a2;o2[W1]=h2,r2+=l2.toString(),h2+=1,W1=10*S2}case"mixed":t0=t0||function(Q2){return Q2.indexOf("/")!==-1};var N2=h1.toString(),M2=/^-?\d+(?:\/\d+)?$/.exec(N2);if(M2.length===0)return N2;var C2=M2[0].split("/"),k2=new _1(C2[0]),j2=new _1(C2[1]);j2.equals(0)&&(j2=new _1(1));var Y2=k2.divmod(j2),e3=Y2.quotient,c3=Y2.remainder,G2=C2[0][0]==="-"||e3.equals(0)||c3.equals(0)?"":"+";return(e3.equals(0)?"":e3.toString())+G2+(c3.equals(0)?"":c3.toString()+"/"+C2[1]);case"scientific":return t0=t0||function(Q2){return!1},new O1(h1.valueOf()).toString($.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return t0=t0||function(Q2){return Q2.indexOf("/")!==-1},h1.toString()}}if(r0(t)){var J0="",e1="",s="",c=t.group||M,P=t.value;if(!D){var V=j0(t.multiplier);V=="-1"&&String(t.multiplier)==="-1"&&(s="-",V="1"),V!="1"&&(J0=V);var m0=t.power?j0(t.power):"";m0!="1"&&(r0(m0)?e1=W0(m0,j):e1=m0)}switch(c){case e0:J0="";var P0=I&&C0?t.multiplier.toDecimal(I):j0(t.multiplier);P=String(t.multiplier)=="-1"?"1":P0,e1="";break;case o1:P=t.collectSymbols().map(function(h1){var Q1=W0(h1,j,M,I);return Q1=="0"&&(Q1=""),Q1}).sort().join("+").replace(/\+\-/g,"-");break;case z0:P=t.collectSymbols().map(function(h1){var Q1=W0(h1,j,M,I);return Q1=="0"&&(Q1=""),Q1}).sort().join("+").replace(/\+\-/g,"-");break;case $0:P=t.collectSymbols(function(h1){var Q1=h1.group;return(Q1===o1||Q1===z0)&&h1.power.equals(1)&&h1.multiplier.equals(1)?X(W0(h1,j)):W0(h1,j)}).join("*");break;case f1:var r1=t.previousGroup,y1=t.power.group;r1===o1&&(P=t.collectSymbols(W0,j).join("+").replace("+-","-")),!(r1===e0||r1===A0||r1===X0)&&!D&&(P=X(P)),(y1===z0||y1===$0||y1===o1||t.power.multiplier.toString()!="1")&&e1&&(e1=X(e1));break}if(c===X0&&(P=t.fname+X(t.args.map(function(h1){return W0(h1,j)}).join(","))),c===X0&&t.fname in N0){var u1=W0(t.args[0]),s1=W0(t.args[1]);t.args[0].isComposite()&&(u1=X(u1)),t.args[1].isComposite()&&(s1=X(s1)),P=u1+N0[t.fname]+s1}e1&&c!==f1&&t0(e1)&&(e1=X(e1)),((c===z0||c===o1)&&(J0&&J0!="1"||s==="-")||(c===$0||c===z0||c===o1)&&e1&&e1!="1"||!D&&c===x1&&P==-1||t.fname===q1)&&(P=X(P)),I&&(p==="decimal"||p==="decimals"&&J0)&&(J0=b0(J0,I));var C1=s+J0;if(J0&&t0(J0)&&(C1=X(C1)),e1<0&&(e1=X(e1)),J0&&(C1=C1+"*"),e1){if(P==="e"&&$.E_TO_EXP)return C1+"exp"+X(e1);e1=$.POWER_OPERATOR+e1}c===f1&&P.charAt(0)==="-"&&(P=X(P));var g1=C1+P;return t.parens&&(g1=X(g1)),g1+e1}else if(H0(t)){for(var f2=t.elements.length,C1=[],k1=0;k1<f2;k1++)C1.push(t.elements[k1].text(p));return"["+C1.join(",")+"]"}else try{return t.toString()}catch{return""}}function V0(t){if(q0(t))return[t];for(var p=t,M=1,I=[],D=2220446049250313e-31;M<p;){var t0=t/M,j=Math.floor(t0),C0=t0-j;if(C0<=D&&M>1){if(q0(M)&&(X1.indexOf(M)===-1&&X1.push(M),I.push(M)),q0(j)){I.push(j);break}p=j}M++}return I.sort(function(j0,J0){return j0-J0})}V0(314146179365);function K0(t){this.symbol=t}K0.getExpression=function(t,p){(t==="last"||!t)&&(t=Z.length),t==="first"&&(t=1);var M=t-1,I=Z[M],D=I&&new K0(I);return D},K0.prototype={text:function(t,p){return p=p||$.EXPRESSION_DECP,t=t||"decimals",this.symbol.text_?this.symbol.text_(t):W0(this.symbol,t,void 0,p)},latex:function(t){return this.symbol.latex?this.symbol.latex(t):B1.latex(this.symbol,t)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(H0(this.symbol)&&this.symbol.dimensions()===0)return this;var t=arguments[0],p,M=1;typeof t=="string"?p=t.charAt(0)==="%"?K0.getExpression(t.substr(1)).text():t:t instanceof K0||r0(t)?p=t.text():(p=this.symbol.text(),M--);var I=arguments[M]||{},D=new K0(J1("PARSE2NUMBER",function(){return F.parse(p,I)},!0));return D},buildFunction:function(t){return c2.build(this.symbol,t)},isNumber:function(){return n1(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return v1(F.parse(this.symbol)).isImaginary()},variables:function(){return I0(this.symbol)},toString:function(){try{return _(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch{return""}},toDecimal:function(t){$.precision=t;var p=W0(this.symbol,"decimals");return $.precision=void 0,p},isFraction:function(){return l1(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(t,p){return new K0(this.symbol.sub(F.parse(t),F.parse(p)))},operation:function(t,p){return w0(p)?p=p.symbol:r0(p)||(p=F.parse(p)),new K0(F[t](this.symbol.clone(),p.clone()))},add:function(t){return this.operation("add",t)},subtract:function(t){return this.operation("subtract",t)},multiply:function(t){return this.operation("multiply",t)},divide:function(t){return this.operation("divide",t)},pow:function(t){return this.operation("pow",t)},expand:function(){return new K0(F.expand(this.symbol))},each:function(t,p){if(this.symbol.each)this.symbol.each(t,p);else if(_(this.symbol))for(var p=0;p<this.symbol.length;p++)t.call(this.symbol,this.symbol[p],p);else t.call(this.symbol)},eq:function(t){r0(t)||(t=F.parse(t));try{var p=F.subtract(this.symbol.clone(),t);return p.equals(0)}catch{return!1}},lt:function(t){r0(t)||(t=F.parse(t));try{var p=v1(F.subtract(this.symbol.clone(),t));return p.lessThan(0)}catch{return!1}},gt:function(t){r0(t)||(t=F.parse(t));try{var p=v1(F.subtract(this.symbol.clone(),t));return p.greaterThan(0)}catch{return!1}},gte:function(t){return this.gt(t)||this.eq(t)},lte:function(t){return this.lt(t)||this.eq(t)},numerator:function(){return new K0(this.symbol.getNum())},denominator:function(){return new K0(this.symbol.getDenom())},hasFunction:function(t){return this.symbol.containsFunction(t)},contains:function(t){return this.symbol.contains(t)}},K0.prototype.toTeX=K0.prototype.latex;function O1(t){return this instanceof O1?(t=String(typeof t=="undefined"?0:t),t.startsWith("-")?(this.sign=-1,t=t.substr(1,t.length)):this.sign=1,O1.isScientific(t)?this.fromScientific(t):this.convert(t),this):new O1(t)}O1.prototype={fromScientific:function(t){var p=String(t).toLowerCase().split("e");return this.coeff=p[0],this.exponent=p[1],this},convert:function(t){var p=t.split("."),M=p[0]||"",I=p[1]||"";M=O1.removeLeadingZeroes(M),I=O1.removeTrailingZeroes(I);var D=M.length,t0=M+I,j=O1.leadingZeroes(t0).length;this.exponent=D-(j+1);var C0=O1.removeLeadingZeroes(t0);this.coeff=C0.charAt(0)+"."+(C0.substr(1,C0.length)||"0");var j0=this.coeff.split(".")[1]||"";return this.decp=j0==="0"?0:j0.length,this.dec=I,this.wholes=M,this},round:function(t){var p=this.copy();if(t=Number(t),t===0)p.coeff=p.coeff.charAt(0);else{var M=this.coeff.substring(0,t+1),I=this.coeff.substring(t+1,t+3),D=I.charAt(0);I.charAt(1)>4&&D++,p.coeff=M+D}return p},copy:function(){var t=new O1(0);return t.coeff=this.coeff,t.exponent=this.exponent,t.sign=this.sign,t},toString:function(t){var p;if($.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&this.exponent===0&&this.decp<t)this.decp===0?p=this.wholes:p=this.coeff;else{var M=typeof t=="undefined"?this.coeff:O1.round(this.coeff,Math.min(t,this.decp||1));p=this.exponent===0?M:M+"e"+this.exponent}return(this.sign===-1?"-":"")+p}},O1.isScientific=function(t){return/\d+\.?\d*e[\+\-]*\d+/i.test(t)},O1.leadingZeroes=function(t){var p=t.match(/^(0*).*$/);return p?p[1]:""},O1.removeLeadingZeroes=function(t){var p=t.match(/^0*(.*)$/);return p?p[1]:""},O1.removeTrailingZeroes=function(t){var p=t.match(/0*$/);return p?t.substring(0,t.length-p[0].length):""},O1.round=function(t,p){var M=b0(t,p),I=String(M).split(".").pop(),D=p-I.length;return D>0&&(M=M+new Array(D+1).join(0)),M};function D0(t){if(t instanceof D0)return t;if(t===void 0)return this;try{if(S(t))try{this.num=_1(t),this.den=_1(1)}catch{return D0.simple(t)}else{var p=t instanceof N1?Z1.quickConversion(t):Z1.convert(t);this.num=new _1(p[0]),this.den=new _1(p[1])}}catch{return D0.simple(t)}}D0.create=function(t){if(t instanceof D0)return t;t=t.toString();var p=t.charAt(0)==="-";p&&(t=t.substr(1,t.length-1));var M=new D0(t);return p&&M.negate(),M},D0.isFrac=function(t){return t instanceof D0},D0.quick=function(t,p){var M=new D0;return M.num=new _1(t),M.den=new _1(p),M},D0.simple=function(t){for(var p=String(u0(t)),M=p.split("."),I=M.join(""),D=1,t0=(M[1]||"").length,j=0;j<t0;j++)D+="0";var C0=D0.quick(I,D);return C0.simplify()},D0.prototype={multiply:function(t){if(this.isOne())return t.clone();if(t.isOne())return this.clone();var p=this.clone();return p.num=p.num.multiply(t.num),p.den=p.den.multiply(t.den),p.simplify()},divide:function(t){if(t.equals(0))throw new w("Division by zero not allowed!");return this.clone().multiply(t.clone().invert()).simplify()},subtract:function(t){return this.clone().add(t.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(t){var p=this.den,M=t.den,I=this.clone(),D=I.num,t0=t.num;return p.equals(M)?I.num=D.add(t0):(I.num=D.multiply(M).add(t0.multiply(p)),I.den=p.multiply(M)),I.simplify()},mod:function(t){var p=this.clone(),M=t.clone();return p.num=p.num.multiply(M.den),p.den=p.den.multiply(M.den),M.num=M.num.multiply(this.den),M.den=M.den.multiply(this.den),p.num=p.num.mod(M.num),p.simplify()},simplify:function(){var t=_1.gcd(this.num,this.den);return this.num=this.num.divide(t),this.den=this.den.divide(t),this},clone:function(){var t=new D0;return t.num=new _1(this.num),t.den=new _1(this.den),t},decimal:function(t){var p=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";t=t||$.PRECISION,t++;for(var M=[],I=this.num.abs(),D=this.den,t0=0;t0<t;t0++){var j=I.divide(D),C0=I.subtract(j.multiply(D));if(M.push(j),C0.equals(0))break;I=C0.times(10)}var j0=M.shift();if(M.length===0)return p+j0.toString();if(t0===t){for(var J0=[],t0=0;t0<2;t0++)J0.unshift(M.pop());M.push(Math.round(J0.join(".")))}var e1=j0.toString()+"."+M.join("");return p+e1},toDecimal:function(t){return t=t||$.PRECISION,t?this.decimal(t):this.num/this.den},qcompare:function(t){return[this.num.multiply(t.den),t.num.multiply(this.den)]},equals:function(t){isNaN(t)||(t=new D0(t));var p=this.qcompare(t);return p[0].equals(p[1])},absEquals:function(t){isNaN(t)||(t=new D0(t));var p=this.qcompare(t);return p[0].abs().equals(p[1])},greaterThan:function(t){isNaN(t)||(t=new D0(t));var p=this.qcompare(t);return p[0].gt(p[1])},gte:function(t){return this.greaterThan(t)||this.equals(t)},lte:function(t){return this.lessThan(t)||this.equals(t)},lessThan:function(t){isNaN(t)||(t=new D0(t));var p=this.qcompare(t);return p[0].lt(p[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var t=this.den;if(!this.num.equals(0)){var p=this.num.isNegative();this.den=this.num.abs(),this.num=t,p&&(this.num=this.num.multiply(-1))}return this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(t){return D0.quick(_1.gcd(t.num,this.num),_1.lcm(t.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){if($.USE_BIG)return new N1(this.num.toString()).div(new N1(this.den.toString()));var t=this.num/this.den;return t},isNegative:function(){return this.toDecimal()<0}};function G(t){var p=t==="Infinity";return this instanceof G?(t instanceof N1&&(t=t.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(t)||t instanceof N1?(this.group=e0,this.value=p0,this.multiplier=new D0(t)):(this.group=A0,H(t),this.value=t,this.multiplier=new D0(1),this.imaginary=t===$.IMAGINARY,this.isInfinity=p),this.power=new D0(1),this):new G(t)}G.imaginary=function(){var t=new G($.IMAGINARY);return t.imaginary=!0,t},G.infinity=function(t){var p=new G("Infinity");return t===-1&&p.negate(),p},G.shell=function(t,p){var M=new G(p);return M.group=t,M.symbols={},M.length=0,M},G.unwrapSQRT=function(t,p){var M=t.power;if(t.fname===F1&&(t.isLinear()||p)){var I=t.args[0].clone();I.power=I.power.multiply(new D0(.5)),I.multiplier=I.multiplier.multiply(t.multiplier),t=I,p&&(t.power=M.multiply(new D0(.5)))}return t},G.hyp=function(t,p){return t=t||new G(0),p=p||new G(0),F.sqrt(F.add(F.pow(t.clone(),new G(2)),F.pow(p.clone(),new G(2))))},G.toPolarFormArray=function(t){var p,M,I,D;return p=t.realpart(),M=t.imagpart(),I=G.hyp(p,M),D=p.equals(0)?F.parse("pi/2"):F.trig.atan(F.divide(M,p)),[I,D]},G.unwrapPARENS=function(t){if(t.fname===""){var p=t.args[0];return p.power=p.power.multiply(t.power),p.multiplier=p.multiplier.multiply(t.multiplier),t.fname===""?G.unwrapPARENS(p):p}return t},G.create=function(t,p){return p=p===void 0?1:p,F.parse("("+t+")^("+p+")")},G.prototype={getNth:function(t){var p=v1(F.pow(F.parse(this.multiplier),F.parse(t).invert())),M=F.parse(b0(p)),I=v1(F.pow(M,F.parse(t)));return I.equals(F.parse(this.multiplier))?M:p},isToNth:function(t){var p=this.getNth(t),M=S(p),I;return this.group===$0?(I=!0,this.each(function(D){var t0=D.isToNth(t);t0||(I=!1)})):I=this.group===e0?!0:S(F.divide(F.parse(this.power),F.parse(t))),M&&I},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group===$0){var t=[],M=this.multiplier.sign();this.each(function(s){var c=s.power;if(r0(c)||c.equals(1))return this.clone();t.push(c)});var p=new D0(h0(t)),M=this.multiplier.sign(),I=this.multiplier.clone().abs(),D=n0.ifactor(I),t0=new D0(1),j=new D0(1);for(var C0 in D){var j0=new D0(D[C0]);j0.lessThan(p)||(j0=j0.divide(p).subtract(new D0(1)),j=j.multiply(new D0(C0))),t0=t0.multiply(F.parse(X(C0)+"^"+X(j0)).multiplier)}var J0=new G(j);this.each(function(s){s=s.clone(),s.power=s.power.divide(p),J0=F.multiply(J0,s)});var e1=F.symfunction(q1,[J0]);return e1.power=p,e1.multiplier=M<0?t0.negate():t0,e1}return this.clone()},equals:function(t){return r0(t)||(t=new G(t)),this.value===t.value&&this.power.equals(t.power)&&this.multiplier.equals(t.multiplier)&&this.group===t.group},abs:function(){var t=this.clone();return t.multiplier.abs(),t},gt:function(t){return r0(t)||(t=new G(t)),this.isConstant()&&t.isConstant()&&this.multiplier.greaterThan(t.multiplier)},gte:function(t){return r0(t)||(t=new G(t)),this.equals(t)||this.isConstant()&&t.isConstant()&&this.multiplier.greaterThan(t.multiplier)},lt:function(t){return r0(t)||(t=new G(t)),this.isConstant()&&t.isConstant()&&this.multiplier.lessThan(t.multiplier)},lte:function(t){return r0(t)||(t=new G(t)),this.equals(t)||this.isConstant()&&t.isConstant()&&this.multiplier.lessThan(t.multiplier)},isPoly:function(t){var p=this.group,M=this.power;if(!S(M)||M<0)return!1;if(p===e0||p===A0||this.isConstant(!0))return!0;var I=I0(this);if(p===$0&&I.length===1){var D=I[0];if(!D)return!0;for(var t0 in this.symbols){var j=this.symbols[t0];if(j.group===X0&&!j.args[0].isConstant()||!j.contains(D)&&!j.isConstant(!0))return!1}return!0}if(this.isComposite()||p===$0&&t){if(!t&&I.length>1)return!1;for(var t0 in this.symbols)if(!this.symbols[t0].isPoly(t))return!1;return!0}else return!1},stripVar:function(t,p){var M;return(this.group===o1||this.group===A0)&&this.value===t?M=new G(p?0:this.multiplier):this.group===$0&&this.isLinear()?(M=new G(1),this.each(function(I){I.contains(t,!0)||(M=F.multiply(M,I.clone()))}),M.multiplier=M.multiplier.multiply(this.multiplier)):this.group===z0&&!this.isLinear()?M=new G(this.multiplier):this.group===z0&&this.isLinear()?(M=new G(0),this.each(function(I){if(!I.contains(t)){var D=I.clone();D.multiplier=D.multiplier.multiply(this.multiplier),M=F.add(M,D)}}),M.equals(0)&&(M=new G(this.multiplier))):this.group===f1&&this.power.contains(t,!0)?M=new G(this.multiplier):this.group===X0&&this.contains(t)?M=new G(this.multiplier):M=this.clone(),M},toArray:function(t,p){p=p||{arr:[],add:function(C0,j0){var J0=this.arr[j0];this.arr[j0]=J0?F.add(J0,C0):C0}};var M=this.group;if(M===A0&&this.contains(t))p.add(new G(this.multiplier),this.power);else if(M===$0){var I=this.stripVar(t),D=F.divide(this.clone(),I.clone()),t0=D.isConstant()?0:D.power;p.add(I,t0)}else if(M===o1&&this.value===t)this.each(function(C0,j0){p.add(C0.stripVar(t),j0)});else if(M===z0)this.each(function(C0){C0.toArray(t,p)});else{if(this.contains(t))throw new R("Cannot convert to array! Exiting");p.add(this.clone(),0)}p=p.arr;for(var j=0;j<p.length;j++)p[j]||(p[j]=new G(0));return p},hasFunc:function(t){var p=this.group===X0||this.group===f1;if(p&&!t||p&&this.contains(t))return!0;if(this.symbols){for(var M in this.symbols)if(this.symbols[M].hasFunc(t))return!0}return!1},sub:function(t,p){t=r0(t)?t.clone():F.parse(t),p=r0(p)?p.clone():F.parse(p),(t.group===e0||t.group===x1)&&f("Cannot substitute a number. Must be a variable");var M=!1,I=t.multiplier.equals(1),D=this.multiplier.clone(),t0;if(this.value===t.value&&(this.group!==o1&&t.group!==o1||this.group===o1&&t.group===o1))(I||t.multiplier.equals(this.multiplier))&&(t.isLinear()?t0=p:t.power.equals(this.power)&&(t0=p,M=!0),t.multiplier.equals(this.multiplier)&&(D=new D0(1)));else if(this.group===$0||this.previousGroup===$0)t0=new G(1),this.each(function(P){var V=F.parse(P.sub(t,p));t0=F.multiply(t0,V)});else if(this.isComposite()){var j=this.clone();if(t.isComposite()&&j.isComposite()&&j.isLinear()&&t.isLinear()){var C0=function(P,V){for(var m0 in P.symbols){var P0=P.symbols[m0];if(P0.isComposite()&&C0(P0,V)||P0.equals(V))return!0}return!1};for(var j0 in t.symbols)if(!C0(j,t.symbols[j0]))return j.clone();t0=F.add(F.subtract(j.clone(),t),p)}else t0=new G(0),j.each(function(P){t0=F.add(t0,P.sub(t,p))})}else if(this.group===f1)t0=F.parse(this.value).sub(t,p);else if(this.group===X0){for(var J0=[],e1=0;e1<this.args.length;e1++){var s=this.args[e1];r0(s)||(s=F.parse(s)),J0.push(s.sub(t,p))}t0=F.symfunction(this.fname,J0)}if(t0){if(!M){var c=this.group===f1?this.power.sub(t,p):F.parse(this.power);t0=F.pow(t0,c)}return t0.multiplier=t0.multiplier.multiply(D),t0}return this.clone()},isMonomial:function(){if(this.group===A0)return!0;if(this.group===$0){for(var t in this.symbols)if(this.symbols[t].group!==A0)return!1}else return!1;return!0},isPi:function(){return this.group===A0&&this.value==="pi"},sign:function(){return this.multiplier.sign()},isE:function(){return this.value==="e"},isSQRT:function(){return this.fname===F1},isConstant:function(t,p){if(p&&this.group===$0){for(var M in this.symbols)if(this.symbols[M].isConstant(!0))return!0}if(t==="functions"&&this.isComposite()){var I=!0;return this.each(function(t0){t0.isConstant(t,p)||(I=!1)},!0),I}if(t==="all"&&(this.isPi()||this.isE()))return!0;if(t&&this.group===X0){for(var D=0;D<this.args.length;D++)if(!this.args[D].isConstant(t))return!1;return!0}return t?n1(this):this.value===p0},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols){for(var t in this.symbols)if(this.symbols[t].isImaginary())return!0}return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new G(0);if(this.isComposite()){var t=new G(0);return this.each(function(p){t=F.add(t,p.realpart())}),t}else if(this.isImaginary())return new G(0);return this.clone()},imagpart:function(){if(this.group===A0&&this.isImaginary())return new G(this.multiplier);if(this.isComposite()){var t=new G(0);return this.each(function(p){t=F.add(t,p.imagpart())}),t}return this.group===$0?this.stripVar($.IMAGINARY):new G(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(t){if(t){if(this.isConstant())return!0;if(this.group===A0)return this.value===t?this.power.equals(1):!0;if(this.isComposite()&&this.power.equals(1)){for(var p in this.symbols)if(!this.symbols[p].isLinear(t))return!1;return!0}return this.group===$0&&this.symbols[t]?this.symbols[t].isLinear(t):!1}else return this.power.equals(1)},containsFunction:function(t){if(typeof t=="string"&&(t=[t]),this.group===X0&&t.indexOf(this.fname)!==-1)return!0;if(this.symbols){for(var p in this.symbols)if(this.symbols[p].containsFunction(t))return!0}return!1},multiplyPower:function(t){if(this.group===e0&&this.multiplier.equals(1))return this;var p=this.power;if(this.group!==f1&&t.group===e0){var M=t.multiplier;this.group===e0&&!M.isInteger()&&this.convert(x1),this.power=p.equals(1)?M.clone():p.multiply(M),this.group===x1&&S(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(e0))}else this.group!==f1&&(p=new G(p),this.convert(f1)),this.power=F.multiply(p,t);return this},setPower:function(t,p){if(this.group===e0&&this.multiplier.equals(1))return this;if(this.group===f1&&!r0(t))this.group=this.previousGroup,delete this.previousGroup,this.group===e0?(this.multiplier=new D0(this.value),this.value=p0):this.power=t;else{var M=!1;r0(t)&&(t.group===e0?t=t.multiplier:M=!0);var I=M?f1:x1;this.power=t,this.group===e0&&I&&this.convert(I,p)}return this},isInverse:function(){return this.group===f1?this.power.multiplier.lessThan(0):this.power<0},clone:function(t){var p=t||new G(0),M=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],I=M.length,D;if(this.symbols){p.symbols={};for(var t0 in this.symbols)p.symbols[t0]=this.symbols[t0].clone()}for(D=0;D<I;D++)this[M[D]]!==void 0&&(p[M[D]]=this[M[D]]);return p.power=this.power.clone(),p.multiplier=this.multiplier.clone(),this.isConversion&&(p.isConversion=this.isConversion),this.isUnit&&(p.isUnit=this.isUnit),p},toUnitMultiplier:function(t){return this.multiplier.num=new _1(this.multiplier.num.isNegative()&&t?-1:1),this.multiplier.den=new _1(1),this},toLinear:function(){return this.power.equals(1)?this:(this.setPower(new D0(1)),this)},each:function(t,p){if(!this.symbols)t.call(this,this,this.value);else for(var M in this.symbols){var I=this.symbols[M];if(I.group===o1&&p)for(var D in I.symbols)t.call(M,I.symbols[D],D);else t.call(this,I,M)}},valueOf:function(){return this.group===e0?this.multiplier.valueOf():this.power===0?1:this.multiplier===0?0:W0(this,"decimals")},contains:function(t,p){t=String(t);var M=this.group;if(this.value===t)return!0;if(this.symbols){for(var I in this.symbols)if(this.symbols[I].contains(t,p))return!0}if(M===X0||this.previousGroup===X0){for(var D=0;D<this.args.length;D++)if(this.args[D].contains(t,p))return!0}return M===f1&&(p&&this.power.contains(t,p)||this.value===t)?!0:this.value===t},negate:function(){return this.multiplier.negate(),(this.group===z0||this.group===o1)&&this.distributeMultiplier(),this},invert:function(t,p){return t||(this.multiplier=this.multiplier.invert()),r0(this.power)?this.power.negate():this.group===$0&&p?this.each(function(M){return M.invert()}):this.power&&this.group!==e0&&this.power.negate(),this},distributeMultiplier:function(t){var p=t?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&p&&this.group!==$0&&!this.multiplier.equals(1)){for(var M in this.symbols){var I=this.symbols[M];I.multiplier=I.multiplier.multiply(this.multiplier),I.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var t=this.power;for(var p in this.symbols){var M=this.symbols[p];M.group===f1?M.power=F.multiply(M.power,new G(t)):this.symbols[p].power=this.symbols[p].power.multiply(t)}this.toLinear()}return this},convert:function(t,p){if(t>X0){var M=this.clone();this.symbols={},t===$0?M.toUnitMultiplier():this.toUnitMultiplier(),this.group===X0&&(M.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[M.keyForGroup(t)]=M,this.group=t,this.length=1}else if(t===f1)this.group===e0&&this.multiplier.equals(1)||(this.group!==f1&&(this.previousGroup=this.group),this.group===e0?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=W0(this,"hash"),this.group=f1);else if(t===e0){var I=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new G(this.group===x1?I*Math.pow(this.value,this.power):I).clone(this)}else t===x1&&this.group===e0&&(this.value=p?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!p),this.group=x1);return this},insert:function(t,p){if(r0(t)||f("Object "+t+" is not of type Symbol!"),this.symbols){var M=this.group;if(M>X0){var I=t.keyForGroup(M),D=I in this.symbols?this.symbols[I]:!1;if(p==="add"){var t0=I;D?(this.symbols[t0]=F.add(D,t),this.symbols[t0].multiplier.equals(0)&&(delete this.symbols[t0],this.length--,this.length===0&&(this.convert(e0),this.multiplier=new D0(0)))):(this.symbols[I]=t,this.length++)}else t.group===x1&&S(t.power)&&t.convert(e0),t.group!==f1?(this.multiplier=this.multiplier.multiply(t.multiplier),t.toUnitMultiplier()):(t.parens=t.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(t.multiplier.clone().abs()),t.toUnitMultiplier(!0)),D&&(t=F.multiply(T1(this.symbols,I),t),t.isConstant()&&(this.multiplier=this.multiplier.multiply(t.multiplier),t=new G(1)),this.length--),t.isOne(!0)?t.multiplier.lessThan(0)&&this.negate():(this.symbols[I]=t,this.length++);this.length===0&&this.convert(e0),(this.group===z0||this.group===$0)&&this.updateHash()}}return this},attach:function(t){if(_(t)){for(var p=0;p<t.length;p++)this.insert(t[p],"add");return this}return this.insert(t,"add")},combine:function(t){if(_(t)){for(var p=0;p<t.length;p++)this.insert(t[p],"multiply");return this}return this.insert(t,"multiply")},updateHash:function(){if(this.group!==e0)if(this.group===X0){for(var t="",p=this.args,M=this.fname===q1,I=0;I<p.length;I++)t+=(I===0?"":",")+W0(p[I]);var D=M?"":this.fname;this.value=D+(M?t:X(t))}else this.group===A0||this.group===o1||(this.value=W0(this,"hash"))},keyForGroup:function(t){var p=this.group,M;if(p===e0)M=this.value;else if(p===A0||p===x1)t===o1?M=this.power.toDecimal():M=this.value;else if(p===X0)t===o1?M=this.power.toDecimal():M=W0(this,"hash");else{if(p===o1)return t===$0?M=W0(this,"hash"):t===z0?this.power.equals(1)?M=this.value:M=X(W0(this,"hash"))+$.POWER_OPERATOR+this.power.toDecimal():t===o1?M=this.power.toString():M=this.value,M;p===z0?(t===z0&&(M=W0(this,"hash")),t===o1?M=this.power.toDecimal():M=this.value):p===$0?t===o1?M=this.power.toDecimal():M=W0(this,"hash"):p===f1&&(t===o1?M=W0(this.power):M=W0(this,"hash"))}return M},collectSymbols:function(t,p,M,I){var D=[];if(!this.symbols)D.push(this);else for(var t0 in this.symbols){var j=this.symbols[t0];I&&(j.group===o1||j.group===z0)?D=D.concat(j.collectSymbols()):D.push(t?t(j,p):j)}return M===null&&(M=void 0),D.sort(M)},latex:function(t){return B1.latex(this,t)},text:function(t){return W0(this,t)},isOne:function(t){var p=t?"absEquals":"equals";return this.group===e0?this.multiplier[p](1):this.power.equals(0)},isComposite:function(){var t=this.group,p=this.previousGroup;return t===z0||t===o1||p===o1||p===z0},isCombination:function(){var t=this.group,p=this.previousGroup;return t===$0||p===$0},lessThan:function(t){return this.multiplier.lessThan(t)},greaterThan:function(t){return r0(t)||(t=new G(t)),!this.isConstant(!0)||!t.isConstant(!0)?!1:this.multiplier.greaterThan(t.multiplier)},getDenom:function(){var t,p;if(p=this.clone(),this.group===$0&&this.power.lessThan(0)&&(p=F.expand(p)),p.power.lessThan(0)||p.group===f1&&p.power.multiplier.lessThan(0)){var M=F.parse(p.multiplier.den);t=p.toUnitMultiplier(),t.power.negate(),t=F.multiply(M,t)}else if(p.group===$0){t=F.parse(p.multiplier.den);for(var I in p.symbols){var D=p.symbols[I];(D.power<0||D.group===f1&&D.power.multiplier.lessThan(0))&&(t=F.multiply(t,p.symbols[I].clone().invert()))}}else t=F.parse(p.multiplier.den);return t},getNum:function(){var t,p;return p=this.clone(),p.group===$0&&p.power.lessThan(0)&&(p=F.expand(p)),p.power.greaterThan(0)&&p.group!==$0||p.group===f1&&p.power.multiplier.greaterThan(0)?t=F.multiply(F.parse(p.multiplier.num),p.toUnitMultiplier()):p.group===$0?(t=F.parse(p.multiplier.num),p.each(function(M){(M.power>0||M.group===f1&&M.power.multiplier>0)&&(t=F.multiply(t,M.clone()))})):t=F.parse(p.multiplier.num),t},toString:function(){return this.text()}};function I1(){var t=this,p={},M={names:[],actions:[]};function I(o,g){this.start=o,this.end=g}I.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},I.prototype.text=function(){return W0(this.start)+":"+W0(this.end)};function D(){this.elements=[]}D.prototype.append=function(o){this.elements.push(o)},D.prototype.getItems=function(){return this.elements},D.prototype.toString=function(){return t.pretty_print(this.elements)},D.create=function(o){var g=new D;return o&&g.append(o),g};function t0(o,g,K){if(this.type=g,this.value=o,K!==void 0&&(this.column=K+1),g===t0.OPERATOR){var v0=J0[o];for(var B0 in v0)this[B0]=v0[B0]}else g===t0.FUNCTION&&(this.precedence=t0.MAX_PRECEDENCE,this.leftAssoc=!1)}t0.prototype.toString=function(){return this.value},t0.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},t0.OPERATOR="OPERATOR",t0.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",t0.FUNCTION="FUNCTION",t0.UNIT="UNIT",t0.KEYWORD="KEYWORD",t0.MAX_PRECEDENCE=999,this.classes={Collection:D,Slice:I,Token:t0};var j={prec:void 0,cos:function(o,g){var K,v0;return K=t.parse(Math.cos(o)*Math.cosh(g)),v0=t.parse(Math.sin(o)*Math.sinh(g)),t.subtract(K,t.multiply(v0,G.imaginary()))},sin:function(o,g){var K,v0;return K=t.parse(Math.sin(o)*Math.cosh(g)),v0=t.parse(Math.cos(o)*Math.sinh(g)),t.subtract(K,t.multiply(v0,G.imaginary()))},tan:function(o,g){var K,v0;return K=t.parse(Math.sin(2*o)/(Math.cos(2*o)+Math.cosh(2*g))),v0=t.parse(Math.sinh(2*g)/(Math.cos(2*o)+Math.cosh(2*g))),t.add(K,t.multiply(v0,G.imaginary()))},sec:function(o,g){var K=this.removeDen(this.cos(o,g));return t.subtract(K[0],t.multiply(K[1],G.imaginary()))},csc:function(o,g){var K=this.removeDen(this.sin(o,g));return t.add(K[0],t.multiply(K[1],G.imaginary()))},cot:function(o,g){var K=this.removeDen(this.tan(o,g));return t.subtract(K[0],t.multiply(K[1],G.imaginary()))},acos:function(o,g){var K,v0,B0,Y0,p1,S1;return K=this.fromArray([o,g]),S1=t.pow(K.clone(),new G(2)),v0=t.expand(S1),B0=t.multiply(r2(t.subtract(new G(1),v0)),G.imaginary()),Y0=t.expand(t.add(K.clone(),B0)),p1=G2(Y0),t.expand(t.multiply(G.imaginary().negate(),p1))},asin:function(o,g){return t.subtract(t.parse("pi/2"),this.acos(o,g))},atan:function(o,g){if(o.equals(0)&&(g.equals(1)||g.equals(-1)))return t.parse(`${G.infinity()}*${$.IMAGINARY}*${g}`);var K,v0,B0,Y0;return Y0=j.fromArray([o,g]),K=t.expand(t.multiply(G.imaginary(),Y0.clone())),v0=G2(t.expand(t.subtract(new G(1),K.clone()))),B0=G2(t.expand(t.add(new G(1),K.clone()))),t.expand(t.multiply(t.divide(G.imaginary(),new G(2)),t.subtract(v0,B0)))},asec:function(o,g){var K=this.removeDen([o,g]);return K[1].negate(),this.acos.apply(this,K)},acsc:function(o,g){var K=this.removeDen([o,g]);return K[1].negate(),this.asin.apply(this,K)},acot:function(o,g){var K=this.removeDen([o,g]);return K[1].negate(),this.atan.apply(this,K)},cosh:function(o,g){var K,v0;return K=t.parse(Math.cosh(o)*Math.cos(g)),v0=t.parse(Math.sinh(o)*Math.sin(g)),t.add(K,t.multiply(v0,G.imaginary()))},sinh:function(o,g){var K,v0;return K=t.parse(Math.sinh(o)*Math.cos(g)),v0=t.parse(Math.cosh(o)*Math.sin(g)),t.add(K,t.multiply(v0,G.imaginary()))},tanh:function(o,g){var K,v0;return K=t.parse(Math.sinh(2*o)/(Math.cos(2*g)+Math.cosh(2*o))),v0=t.parse(Math.sin(2*g)/(Math.cos(2*g)+Math.cosh(2*o))),t.subtract(K,t.multiply(v0,G.imaginary()))},sech:function(o,g){var K=this.removeDen(this.cosh(o,g));return t.subtract(K[0],t.multiply(K[1],G.imaginary()))},csch:function(o,g){var K=this.removeDen(this.sinh(o,g));return t.subtract(K[0],t.multiply(K[1],G.imaginary()))},coth:function(o,g){var K=this.removeDen(this.tanh(o,g));return t.add(K[0],t.multiply(K[1],G.imaginary()))},acosh:function(o,g){var K,v0,B0;return B0=this.fromArray([o,g]),K=r2(t.add(B0.clone(),new G(1))),v0=r2(t.subtract(B0.clone(),new G(1))),t.expand(G2(t.add(B0,t.expand(t.multiply(K,v0)))))},asinh:function(o,g){var K,v0;return v0=this.fromArray([o,g]),K=r2(t.add(new G(1),t.expand(t.pow(v0.clone(),new G(2))))),t.expand(G2(t.add(v0,K)))},atanh:function(o,g){var K,v0,B0;return B0=this.fromArray([o,g]),K=G2(t.add(B0.clone(),new G(1))),v0=G2(t.subtract(new G(1),B0)),t.expand(t.divide(t.subtract(K,v0),new G(2)))},asech:function(o,g){var K=this.removeDen([o,g]);return K[1].negate(),this.acosh.apply(this,K)},acsch:function(o,g){var K=this.removeDen([o,g]);return K[1].negate(),this.asinh.apply(this,K)},acoth:function(o,g){var K=this.removeDen([o,g]);return K[1].negate(),this.atanh.apply(this,K)},sqrt:function(o){var g,K,v0,B0,Y0;return g=o.realpart(),K=o.imagpart(),v0=G.hyp(g,K),B0=t.add(g.clone(),v0),Y0=r2(t.multiply(new G(2),B0.clone())),t.add(t.divide(B0.clone(),Y0.clone()),t.multiply(t.divide(K,Y0),G.imaginary()))},log:function(o,g){var K,v0,B0;return K=G2(G.hyp(o,g)),B0=$.USE_BIG?G(N1.atan2(g.multiplier.toDecimal(),o.multiplier.toDecimal())):Math.atan2(g,o),v0=t.parse(B0),t.add(K,t.multiply(G.imaginary(),v0))},erf(o,g){return t.symfunction("erf",[o])},removeDen:function(o){var g,K,v0,B0,Y0;return _(o)?(K=o[0],v0=o[1]):(K=o.realpart(),v0=o.imagpart()),g=Math.pow(K,2)+Math.pow(v0,2),B0=t.parse(K/g),Y0=t.parse(v0/g),[B0,Y0]},fromArray:function(o){return t.add(o[0],t.multiply(G.imaginary(),o[1]))},evaluate:function(o,g){var K,v0,B0;if(B0=o.power.sign(),o.power=o.power.abs(),o.power.greaterThan(1)&&(o=t.expand(o)),B0<0){var Y0=this.removeDen(o);K=Y0[0],v0=Y0[1]}else K=o.realpart(),v0=o.imagpart();return K.isConstant("all")&&v0.isConstant("all")?this[g].call(this,K,v0):t.symfunction(g,[o])}},C0=this.trig={cos:function(o){if(o.equals("pi")&&o.multiplier.den.equals(2))return new G(0);if($.PARSE2NUMBER){if(o.equals(new G($.PI/2)))return new G(0);if(o.isConstant())return $.USE_BIG?new G(N1.cos(o.multiplier.toDecimal())):new G(Math.cos(o.valueOf()));if(o.isImaginary())return j.evaluate(o,"cos")}if(o.equals(0))return new G(1);var g,K=!1,v0=a3(o.multiplier.toDecimal()),B0=o.multiplier.abs();if(o.multiplier=B0,o.isPi()&&o.isLinear())if(S(B0))g=new G(a1(B0)?1:-1);else{Number(B0.num);var Y0=Number(B0.den);Y0===2?g=new G(0):Y0===3?(g=t.parse("1/2"),K=!0):Y0===4?(g=t.parse("1/sqrt(2)"),K=!0):Y0===6?(g=t.parse("sqrt(3)/2"),K=!0):g=t.symfunction("cos",[o])}return K&&(v0===2||v0===3)&&g.negate(),g||(g=t.symfunction("cos",[o])),g},sin:function(o){if($.PARSE2NUMBER){if(o.isConstant())return o%Math.PI===0?new G(0):$.USE_BIG?new G(N1.sin(o.multiplier.toDecimal())):new G(Math.sin(o.valueOf()));if(o.isImaginary())return j.evaluate(o,"sin")}if(o.equals(0))return new G(0);var g,K=!1,v0=a3(o.multiplier.toDecimal()),B0=o.multiplier.sign(),Y0=o.multiplier.abs();if(o.multiplier=Y0,o.equals("pi"))g=new G(0);else if(o.isPi()&&o.isLinear())if(S(Y0))g=new G(0);else{Y0.num;var p1=Y0.den;p1==2?(g=new G(1),K=!0):p1==3?(g=t.parse("sqrt(3)/2"),K=!0):p1==4?(g=t.parse("1/sqrt(2)"),K=!0):p1==6?(g=t.parse("1/2"),K=!0):g=t.multiply(new G(B0),t.symfunction("sin",[o]))}return g||(g=t.multiply(new G(B0),t.symfunction("sin",[o]))),K&&(v0===3||v0===4)&&g.negate(),g},tan:function(o){if($.PARSE2NUMBER){if(o%Math.PI===0&&o.isLinear())return new G(0);if(o.isConstant())return $.USE_BIG?new G(N1.tan(o.multiplier.toDecimal())):new G(Math.tan(o.valueOf()));if(o.isImaginary())return j.evaluate(o,"tan")}var g,K=!1,v0=a3(o.multiplier.toDecimal()),B0=o.multiplier;if(o.multiplier=B0,o.isPi()&&o.isLinear())if(S(B0))g=new G(0);else{B0.num;var Y0=B0.den;if(Y0==2)throw new v("tan is undefined for "+o.toString());Y0==3?(g=t.parse("sqrt(3)"),K=!0):Y0==4?(g=new G(1),K=!0):Y0==6?(g=t.parse("1/sqrt(3)"),K=!0):g=t.symfunction("tan",[o])}return g||(g=t.symfunction("tan",[o])),K&&(v0===2||v0===4)&&g.negate(),g},sec:function(o){if($.PARSE2NUMBER)return o.isConstant()?$.USE_BIG?new G(new N1(1).dividedBy(N1.cos(o.multiplier.toDecimal()))):new G(n0.sec(o.valueOf())):o.isImaginary()?j.evaluate(o,"sec"):t.parse(Y("1/cos({0})",o));var g,K=!1,v0=a3(o.multiplier.toDecimal()),B0=o.multiplier.abs();if(o.multiplier=B0,o.isPi()&&o.isLinear())if(S(B0))g=new G(a1(B0)?1:-1);else{B0.num;var Y0=B0.den;if(Y0==2)throw new v("sec is undefined for "+o.toString());Y0==3?(g=new G(2),K=!0):Y0==4?(g=t.parse("sqrt(2)"),K=!0):Y0==6?(g=t.parse("2/sqrt(3)"),K=!0):g=t.symfunction("sec",[o])}return K&&(v0===2||v0===3)&&g.negate(),g||(g=t.symfunction("sec",[o])),g},csc:function(o){if($.PARSE2NUMBER)return o.isConstant()?$.USE_BIG?new G(new N1(1).dividedBy(N1.sin(o.multiplier.toDecimal()))):new G(n0.csc(o.valueOf())):o.isImaginary()?j.evaluate(o,"csc"):t.parse(Y("1/sin({0})",o));var g,K=!1,v0=a3(o.multiplier.toDecimal()),B0=o.multiplier.sign(),Y0=o.multiplier.abs();if(o.multiplier=Y0,o.isPi()&&o.isLinear()){if(S(Y0))throw new v("csc is undefined for "+o.toString());Y0.num;var p1=Y0.den;p1==2?(g=new G(1),K=!0):p1==3?(g=t.parse("2/sqrt(3)"),K=!0):p1==4?(g=t.parse("sqrt(2)"),K=!0):p1==6?(g=new G(2),K=!0):g=t.multiply(new G(B0),t.symfunction("csc",[o]))}return g||(g=t.multiply(new G(B0),t.symfunction("csc",[o]))),K&&(v0===3||v0===4)&&g.negate(),g},cot:function(o){if($.PARSE2NUMBER)return o%(Math.PI/2)===0?new G(0):o.isConstant()?$.USE_BIG?new G(new N1(1).dividedBy(N1.tan(o.multiplier.toDecimal()))):new G(n0.cot(o.valueOf())):o.isImaginary()?j.evaluate(o,"cot"):t.parse(Y("1/tan({0})",o));var g,K=!1,v0=a3(o.multiplier.toDecimal()),B0=o.multiplier;if(o.multiplier=B0,o.isPi()&&o.isLinear()){if(S(B0))throw new v("cot is undefined for "+o.toString());B0.num;var Y0=B0.den;Y0==2?g=new G(0):Y0==3?(g=t.parse("1/sqrt(3)"),K=!0):Y0==4?(g=new G(1),K=!0):Y0==6?(g=t.parse("sqrt(3)"),K=!0):g=t.symfunction("cot",[o])}return g||(g=t.symfunction("cot",[o])),K&&(v0===2||v0===4)&&g.negate(),g},acos:function(o){if($.PARSE2NUMBER){if(o.isConstant()){if(o.gt(1)||o.lt(-1)){var g=o.toString();return X2(v1(`pi/2-asin(${g})`))}return $.USE_BIG?new G(N1.acos(o.multiplier.toDecimal())):new G(Math.acos(o.valueOf()))}if(o.isImaginary())return j.evaluate(o,"acos")}return t.symfunction("acos",arguments)},asin:function(o){if($.PARSE2NUMBER){if(o.isConstant()){if(o.gt(1)||o.lt(-1)){var g=$.IMAGINARY,K=o.multiplier.toDecimal();return X2(v1(`${g}*log(sqrt(1-${K}^2)-${g}*${K})`))}return $.USE_BIG?new G(N1.asin(o.multiplier.toDecimal())):new G(Math.asin(o.valueOf()))}if(o.isImaginary())return j.evaluate(o,"asin")}return t.symfunction("asin",arguments)},atan:function(o){var g;if(o.equals(0))g=new G(0);else{if($.PARSE2NUMBER)return o.isConstant()?$.USE_BIG?new G(N1.atan(o.multiplier.toDecimal())):new G(Math.atan(o.valueOf())):o.isImaginary()?j.evaluate(o,"atan"):t.symfunction("atan",arguments);o.equals(-1)?g=t.parse("-pi/4"):g=t.symfunction("atan",arguments)}return g},asec:function(o){if($.PARSE2NUMBER){if(o.equals(0))throw new U("Input is out of the domain of sec!");if(o.isConstant())return C0.acos(o.invert());if(o.isImaginary())return j.evaluate(o,"asec")}return t.symfunction("asec",arguments)},acsc:function(o){if($.PARSE2NUMBER){if(o.isConstant())return C0.asin(o.invert());if(o.isImaginary())return j.evaluate(o,"acsc")}return t.symfunction("acsc",arguments)},acot:function(o){if($.PARSE2NUMBER){if(o.isConstant())return new t.add(t.parse("pi/2"),C0.atan(o).negate());if(o.isImaginary())return j.evaluate(o,"acot")}return t.symfunction("acot",arguments)},atan2:function(o,g){if(o.equals(0)&&g.equals(0))throw new v("atan2 is undefined for 0, 0");return $.PARSE2NUMBER&&o.isConstant()&&g.isConstant()?new G(Math.atan2(o,g)):t.symfunction("atan2",arguments)}},j0=this.trigh={cosh:function(o){if($.PARSE2NUMBER){if(o.isConstant())return new G(Math.cosh(o.valueOf()));if(o.isImaginary())return j.evaluate(o,"cosh")}return t.symfunction("cosh",arguments)},sinh:function(o){if($.PARSE2NUMBER){if(o.isConstant())return new G(Math.sinh(o.valueOf()));if(o.isImaginary())return j.evaluate(o,"sinh")}return t.symfunction("sinh",arguments)},tanh:function(o){if($.PARSE2NUMBER){if(o.isConstant())return new G(Math.tanh(o.valueOf()));if(o.isImaginary())return j.evaluate(o,"tanh")}return t.symfunction("tanh",arguments)},sech:function(o){return $.PARSE2NUMBER?o.isConstant()?new G(Math.sech(o.valueOf())):o.isImaginary()?j.evaluate(o,"sech"):t.parse(Y("1/cosh({0})",o)):t.symfunction("sech",arguments)},csch:function(o){return $.PARSE2NUMBER?o.isConstant()?new G(Math.csch(o.valueOf())):o.isImaginary()?j.evaluate(o,"csch"):t.parse(Y("1/sinh({0})",o)):t.symfunction("csch",arguments)},coth:function(o){return $.PARSE2NUMBER?o.isConstant()?new G(Math.coth(o.valueOf())):o.isImaginary()?j.evaluate(o,"coth"):t.parse(Y("1/tanh({0})",o)):t.symfunction("coth",arguments)},acosh:function(o){var g;return $.PARSE2NUMBER&&o.isImaginary()?g=j.evaluate(o,"acosh"):$.PARSE2NUMBER?g=v1(t.parse(Y($.LOG+"(({0})+sqrt(({0})^2-1))",o.toString()))):g=t.symfunction("acosh",arguments),g},asinh:function(o){var g;return $.PARSE2NUMBER&&o.isImaginary()?g=j.evaluate(o,"asinh"):$.PARSE2NUMBER?g=v1(t.parse(Y($.LOG+"(({0})+sqrt(({0})^2+1))",o.toString()))):g=t.symfunction("asinh",arguments),g},atanh:function(o){var g;return $.PARSE2NUMBER&&o.isImaginary()?g=j.evaluate(o,"atanh"):$.PARSE2NUMBER?g=v1(t.parse(Y("(1/2)*"+$.LOG+"((1+({0}))/(1-({0})))",o.toString()))):g=t.symfunction("atanh",arguments),g},asech:function(o){var g;return $.PARSE2NUMBER&&o.isImaginary()?g=j.evaluate(o,"asech"):$.PARSE2NUMBER?g=v1(G2(t.add(o.clone().invert(),r2(t.subtract(t.pow(o,new G(-2)),new G(1)))))):g=t.symfunction("asech",arguments),g},acsch:function(o){var g;return $.PARSE2NUMBER&&o.isImaginary()?g=j.evaluate(o,"acsch"):$.PARSE2NUMBER?g=v1(t.parse(Y($.LOG+"((1+sqrt(1+({0})^2))/({0}))",o.toString()))):g=t.symfunction("acsch",arguments),g},acoth:function(o){var g;return $.PARSE2NUMBER&&o.isImaginary()?g=j.evaluate(o,"acoth"):$.PARSE2NUMBER?o.equals(1)?g=G.infinity():g=v1(t.divide(G2(t.divide(t.add(o.clone(),new G(1)),t.subtract(o.clone(),new G(1)))),new G(2))):g=t.symfunction("acoth",arguments),g}};this.units={};var J0={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(o){return o}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(o){return t.symfunction($.DOUBLEFACTORIAL,[o])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(o){return s1(o)}},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(o){return t.divide(o,new G(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(o){return o}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(o){return o}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(o){return o.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},e1={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},s=this.functions={cos:[C0.cos,1],sin:[C0.sin,1],tan:[C0.tan,1],sec:[C0.sec,1],csc:[C0.csc,1],cot:[C0.cot,1],acos:[C0.acos,1],asin:[C0.asin,1],atan:[C0.atan,1],arccos:[C0.acos,1],arcsin:[C0.asin,1],arctan:[C0.atan,1],asec:[C0.asec,1],acsc:[C0.acsc,1],acot:[C0.acot,1],atan2:[C0.atan2,2],acoth:[j0.acoth,1],asech:[j0.asech,1],acsch:[j0.acsch,1],sinh:[j0.sinh,1],cosh:[j0.cosh,1],tanh:[j0.tanh,1],asinh:[j0.asinh,1],sech:[j0.sech,1],csch:[j0.csch,1],coth:[j0.coth,1],acosh:[j0.acosh,1],atanh:[j0.atanh,1],log10:[,1],exp:[Q1,1],radians:[p2,1],degrees:[a2,1],min:[Y2,-1],max:[j2,-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[h1,1],tri:[,1],sign:[e3,1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[s1,1],factorial:[s1,1],continued_fraction:[C1,[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[Q2,[1,2]],scientific:[h2,[1,2]],mod:[g1,2],pfactor:[u2,1],vector:[_3,-1],matrix:[P3,-1],Set:[k3,-1],imatrix:[p3,-1],parens:[y1,-1],sqrt:[r2,1],cbrt:[o2,1],nthroot:[M1,2],log:[G2,[1,2]],expand:[l3,1],abs:[u1,1],invert:[H3,1],determinant:[F3,1],size:[D3,1],transpose:[V3,1],dot:[B3,2],cross:[G3,2],vecget:[J2,2],vecset:[g3,3],vectrim:[t3,[1,2]],matget:[S3,3],matset:[x3,4],matgetrow:[L3,2],matsetrow:[T3,3],matgetcol:[O3,2],matsetcol:[R3,3],rationalize:[W1,1],IF:[f2,3],is_in:[k1,2],realpart:[s2,1],imagpart:[l2,1],conjugate:[S2,1],arg:[N2,1],polarform:[M2,1],rectform:[C2,1],sort:[c3,[1,2]],integer_part:[,1],union:[X3,2],contains:[Z3,2],intersection:[z3,2],difference:[$3,2],intersects:[Y3,2],is_subset:[Q3,2],print:[J3,-1]};this.error=f;var c=function(o){for(var g=$.FUNCTION_MODULES,K=g.length,v0=0;v0<K;v0++){var B0=g[v0];if(o in B0)return B0[o]}f("The function "+o+" is undefined!")};this.override=function(o,g){p[o]||(p[o]=[]),p[o].push(this[o]),this[o]=g},this.restore=function(o){this[o]&&(this[o]=p[o].pop())},this.extend=function(o,g,K){var v0=this,B0=this[o];if(typeof B0=="function"&&typeof g=="function"){var Y0=this[o];this[o]=function(p1,S1){return r0(p1)&&r0(S1)&&!K?Y0.call(v0,p1,S1):g.call(v0,p1,S1,Y0)}}},this.symfunction=function(o,g){var K=new G(o);return K.group=X0,typeof g=="object"&&(g=[].slice.call(g)),K.args=g,K.fname=o===q1?"":o,K.updateHash(),K},this.callfunction=function(o,g,K){var v0=s[o];v0||f("Nerdamer currently does not support the function "+o);var B0=v0[1]||K,Y0=v0[0],p1;if(g instanceof Array||(g=g!==void 0?[g]:[]),B0!==-1){var S1=_(B0),G1=S1?B0[0]:B0,V1=S1?B0[1]:B0,n2=g.length,E1=o+" requires a {0} of {1} arguments. {2} provided!";n2<G1&&f(Y(E1,"minimum",G1,n2)),n2>V1&&f(Y(E1,"maximum",V1,n2))}var m2=C(g);return Y0?p1=Y0.apply(v0[2],g):(Y0=c(o),$.PARSE2NUMBER&&m2?p1=V2(Y0.apply(Y0,g)):p1=t.symfunction(o,g)),p1},this.operator_filter_regex=function(){var o="^\\"+Object.keys(J0).filter(function(g){if(g.length===1)return g}).join("\\");return new RegExp("(["+o+"])\\s+(["+o+"])")}(),this.setOperator=function(o,g,K){var v0=o.operator;if(J0[v0]=o,g&&(this[o.action]=g),t[v0]=o.operation,!o.action&&!(o.prefix||o.postif)&&(o.action=v0),K==="over"||K==="under"){var B0=o.precedence;for(var Y0 in J0){var p1=J0[Y0],S1=K==="over"?p1.precedence>=B0:p1.precedence>B0;S1&&p1.precedence++}}},this.getOperator=function(o){return J0[o]},this.aliasOperator=function(o,g){var K={},v0=J0[o];for(var B0 in v0)K[B0]=v0[B0];K.operator=g,this.setOperator(K)},this.getOperators=function(){return J0},this.getBrackets=function(){return e1};var P=function(o){o=String(o);for(var g=0;g<M.actions.length;g++)o=M.actions[g].call(this,o);for(o=o.replace(/\s+/g," "),/e/gi.test(o)&&(o=o.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,function(v0){return u0(v0)})),o=o.replace($.IMPLIED_MULTIPLICATION_REGEX,function(){var v0=arguments[4],B0=arguments[1],Y0=arguments[2],p1=arguments[3],S1=v0.charAt(p1),G1="",V1="*";return S1.match(/[\+\-\/\*]/)||(G1=v0.charAt(p1-1)),G1.match(/[a-z]/i)&&(V1=""),B0+V1+Y0}).replace(/([a-z0-9_]+)/gi,function(v0,B0){return $.USE_MULTICHARACTER_VARS===!1&&!(B0 in s)&&isNaN(B0)?B0.split("").join("*"):B0}).replace(/\)\(/g,")*(")||"0";;){var K=o;if(o=o.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(v0,B0,Y0,p1,S1){var G1=B0||p1,V1=Y0||S1;return G1 in s?G1+V1:G1+"*"+V1}),K===o)break}return o};this.initConstants=function(){this.CONSTANTS={E:new G($.E),PI:new G($.PI)}},this.pretty_print=function(o){if(Array.isArray(o)){var g=o.map(K=>t.pretty_print(K)).join(", ");return o.type==="vector"?"vector<"+g+">":"("+g+")"}return o.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(o){if($.callPeekers)for(var g=this.peekers[o],K=H1(arguments).slice(1).map(W),v0=0;v0<g.length;v0++)g[v0].apply(null,K)},this.tokenize=function(o){o=String(o),o=o.trim().replace(/\s+/g," ");for(var g in e1){var K=new RegExp(e1[g].is_close?"\\s+\\"+g:"\\"+g+"\\s+","g");o=o.replace(K,g)}for(var v0=0,B0=o.length,Y0=0,p1=[],S1=[p1],G1=S1[0],V1=0,n2=[],E1=!1,m2=" ",g2="",d2=",",y2="-",q2="*",I2=function(_2,$2){var B2=[];_2!==void 0&&(B2.type=_2),B2.column=$2,S1.push(B2),G1.push(B2),G1=B2,V1++},j1=function(){S1.pop(),G1=S1[--V1]},w2=function(_2){_2=_2!==void 0?_2:v0;for(var $2=_2+1;o.charAt($2++)in J0;);return o.substring(_2,$2-1)},U2=function(_2){for(var $2=v0-_2.length,B2=[],i3=_2.charAt(0),f3=1,w3=_2.length;f3<w3;f3++){var y3=_2.charAt(f3),u3=i3+y3;u3 in J0?i3=u3:(B2.push(new t0(i3,t0.OPERATOR,$2+f3)),i3=y3)}return B2.push(new t0(i3,t0.OPERATOR,$2+f3)),B2},E2=function(_2,$2){$2===void 0&&($2=o.substring(Y0,_2)),$2 in t.units?G1.push(new t0($2,t0.UNIT,Y0)):$2!==""&&G1.push(new t0($2,t0.VARIABLE_OR_LITERAL,Y0))},L2=function(_2){G1.push(new t0(_2,t0.FUNCTION,Y0))},R2=function(_2){Y0=_2+1},T2=function(){Y0=Y0+F2.length-2,v0=Y0-1};v0<B0;v0++){var O2=o.charAt(v0);if(O2 in J0){E2(v0);var P2=G1[0]&&Q0(G1[0]),z2=P2&&O2===q2;E1&&Y0<v0&&!(O2===d2||z2)&&(E1=!1,j1()),R2(v0+1);var F2=w2(v0);T2(),G1.push.apply(G1,U2(F2))}else if(O2 in e1){var H2=e1[O2];if(H2.is_open){n2.push([H2,Y0]);var Z2=o.substring(Y0,v0);Z2 in s?L2(Z2):Z2!==""&&G1.push(new t0(Z2,t0.VARIABLE_OR_LITERAL,Y0)),I2(H2.maps_to,v0)}else if(H2.is_close){var s3=n2.pop();if(s3){if(s3[0].id!==H2.id-1)throw new z("Parity error")}else throw new z("Missing open bracket for bracket at: "+(v0+1));E2(v0),j1()}R2(v0)}else if(O2===m2){var D2=o.substring(Y0,v0),r3=o.charAt(v0+1);if(E1){if(D2 in J0)G1.push(new t0(D2,t0.OPERATOR,v0));else{E2(void 0,D2),j1();var o3=r3 in J0;(o3&&J0[r3].value===y2||!o3)&&G1.push(new t0(q2,t0.OPERATOR,v0))}E1=!1}else{var Z2=o.substring(Y0,v0);if(Z2 in s)E1=!0,L2(Z2),I2();else if(Z2 in J0)G1.push(new t0(Z2,t0.OPERATOR,v0));else{E2(void 0,Z2);var r3=o.charAt(v0+1);D2!==g2&&r3!==g2&&!(D2 in J0)&&!(r3 in J0)&&G1.push(new t0(q2,t0.OPERATOR,v0))}}R2(v0)}}if(n2.length){var n3=n2.pop();throw new z("Missing closed bracket for bracket at "+(n3[1]+1))}return E2(v0),p1},this.toRPN=function(o){var g=o.type,K=o.length,v0,B0=[],Y0=[],p1=[],S1=function(q2,I2){for(;q2.length;)I2.push(q2.pop())};for(v0=0;v0<K;v0++){var G1=o[v0];if(G1.type!==t0.OPERATOR)break;if(!G1.prefix)throw new Q("Not a prefix operator");G1.is_prefix=!0,Y0.push(G1)}for(;v0<K;v0++){var V1=o[v0];if(V1.type===t0.OPERATOR){var n2=V1;if(n2.overloaded){var E1=o[v0+1];E1&&E1.type===t0.VARIABLE_OR_LITERAL&&(n2.postfix=!1,n2.action=n2.overloadAction,n2.leftAssoc=n2.overloadLeftAssoc)}for(;Y0.length;){var m2=Y0[Y0.length-1];if(!(m2.precedence>n2.precedence||!n2.leftAssoc&&m2.precedence===n2.precedence))break;B0.push(Y0.pop())}if((g==="vector"||g==="set")&&"vectorFn"in n2&&(n2.action=n2.vectorFn),n2.postfix){var g2=o[v0-1];if(g2){if(g2.type===t0.OPERATOR&&!g2.postfix)throw new Q("Unexpected prefix operator '"+g2.value+"'! at "+g2.column)}else throw new Q("Unexpected prefix operator '"+V1.value+"'! at "+V1.column)}else do{var E1=o[v0+1],d2=E1?E1.type===t0.OPERATOR:!1;if(d2){if(!E1.prefix)throw new Q("A prefix operator was expected at "+E1.column);E1.is_prefix=!0,p1.push(E1),v0++}}while(d2);for(n2.is_prefix?p1.push(n2):Y0.push(n2);p1.length&&(n2.leftAssoc||!n2.leftAssoc&&p1[p1.length-1].precedence>=n2.precedence);)Y0.push(p1.pop())}else if(V1.type===t0.VARIABLE_OR_LITERAL){B0.length===0&&S1(p1,Y0),B0.push(V1);var y2=Y0[Y0.length-1];(!y2||!y2.leftAssoc)&&S1(p1,B0)}else V1.type===t0.FUNCTION?Y0.push(V1):V1.type===t0.UNIT&&B0.push(V1);Array.isArray(V1)&&(B0.push(this.toRPN(V1)),V1.type&&B0.push(new t0(V1.type,t0.FUNCTION,V1.column)))}return S1(Y0,B0),S1(p1,B0),B0},this.parseRPN=function(o,g){try{g=g||{};for(var K in g)g[K]=t.parse(g[K],{});$.PARSE2NUMBER&&("e"in g||(g.e=new G($.E)),"pi"in g||(g.pi=new G($.PI)));for(var v0=[],B0=0,Y0=o.length;B0<Y0;B0++){var p1=o[B0];if(Array.isArray(p1)&&(p1=this.parseRPN(p1,g)),p1)if(p1.type===t0.OPERATOR)if(p1.is_prefix||p1.postfix)v0.push(p1.operation(v0.pop()));else{var S1=v0.pop(),G1=v0.pop();if(typeof G1=="undefined")throw new Q(p1+" is not a valid postfix operator at "+p1.column);var V1=p1.action==="comma";G1 instanceof L1&&!V1&&(G1=z1.fromSet(G1)),S1 instanceof L1&&!V1&&(S1=z1.fromSet(S1)),this.callPeekers("pre_operator",G1,S1,p1);var n2=t[p1.action](G1,S1);this.callPeekers("post_operator",n2,G1,S1,p1),v0.push(n2)}else if(p1.type===t0.FUNCTION){var E1=v0.pop(),m2=E1.parent;E1 instanceof D||(E1=D.create(E1));var g2=p1.value,d2=E1.getItems();this.callPeekers("pre_function",g2,d2);var y2=t.callfunction(g2,d2);this.callPeekers("post_function",y2,g2,d2);var q2=v0[v0.length-1],I2=o[B0+1],j1=I2&&I2.type===t0.OPERATOR&&I2.value===",";if(!j1&&y2 instanceof z1&&q2&&q2.elements&&!(q2 instanceof D)){var w2=v0.pop(),U2=y2.elements[0];if(!U2.isConstant())w2.getter=U2,v0.push(w2),v0.push(y2);else if(U2 instanceof I)v0.push(z1.fromArray(w2.elements.slice(U2.start,U2.end)));else{var E2=Number(U2),L2=w2.elements.length;if(E2<0&&(E2=L2+E2),E2<0||E2>=L2)throw new a0("Index out of range "+(p1.column+1));var R2=w2.elements[E2];w2.getter=E2,R2.parent=w2,v0.push(R2)}}else m2&&(y2.parent=m2),v0.push(y2)}else{var T2,O2=p1.value;O2 in $.ALIASES?p1=t.parse($.ALIASES[p1]):p1.type===t0.VARIABLE_OR_LITERAL?p1=new G(O2):p1.type===t0.UNIT&&(p1=new G(O2),p1.isUnit=!0),O2 in t.CONSTANTS?(T2=p1,p1=new G(t.CONSTANTS[O2])):O2 in g&&O2!==g[O2].toString()?(T2=p1,p1=g[O2].clone()):O2 in i&&(T2=p1,p1=i[O2].clone()),T2&&(p1.subbed=T2),v0.push(p1)}}var P2=v0[0];if(["undefined","string","number"].indexOf(typeof P2)!==-1)throw new o0("Unexpected token!");return P2}catch(F2){var z2=[U];throw z2.forEach(function(H2){if(F2 instanceof H2)throw new H2(F2.message+": "+p1.column)}),new y(F2.message+": "+p1.column)}};function V(o){this.type=o.type,this.value=o.value,this.left=o.left,this.right=o.right}V.prototype.toString=function(){var o=this.left?this.left.toString()+"---":"",g=this.right?"---"+this.right.toString():"";return o+"("+this.value+")"+g},V.prototype.toHTML=function(o,g){o=o||0,g=typeof g=="undefined"?4:g;var K=function(p1){return" ".repeat(g*p1)},Y0="",v0=this.left?K(o+1)+`<li>
`+this.left.toHTML(o+2,g)+K(o+1)+`</li> 
`:"",B0=this.right?K(o+1)+`<li>
`+this.right.toHTML(o+2,g)+K(o+1)+`</li>
`:"",Y0=K(o)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+K(o)+`
`;return(v0||B0)&&(Y0+=K(o)+`<ul>
`+v0+B0+K(o)+`</ul>
`),Y0+="",Y0},this.tree=function(o){for(var g=[],K=0;K<o.length;K++){var v0=o[K];if(Array.isArray(v0)){v0=this.tree(v0),g.push(v0);continue}if(v0.type===t0.OPERATOR)if(v0.is_prefix||v0.postfix){var B0=v0.is_prefix?"left":"right",Y0=g.pop();v0=new V(v0),v0[B0]=Y0,g.push(v0)}else v0=new V(v0),v0.right=g.pop(),v0.left=g.pop(),g.push(v0);else if(v0.type===t0.FUNCTION){v0=new V(v0);var p1=g.pop();if(v0.right=p1,v0.value==="object"){var Y0=g[g.length-1];if(Y0){for(;Y0.right;)Y0=Y0.right;Y0.right=v0;continue}}g.push(v0)}else g.push(new V(v0))}return g[0]},this.parse=function(o,g){o=P(o),g=g||{};var K=this.tokenize(o),v0=this.toRPN(K);return this.parseRPN(v0,g)},this.toObject=function(o){var g=function(K){for(var v0=[],B0=0,Y0=K.length;B0<Y0;B0++){var p1=K[B0],S1=p1.value;if(p1.type===t0.VARIABLE_OR_LITERAL)v0.push(new G(S1));else if(p1.type===t0.FUNCTION){B0++;var G1=t.symfunction(S1,g(K[B0]));G1.isConversion=!0,v0.push(G1)}else p1.type===t0.OPERATOR?v0.push(S1):v0.push(g(p1))}return v0};return g(t.tokenize(o))};var m0=function(o){for(var g,K=0,v0=[[]],g=0,B0=o.length;g<B0;g++)o[g]===","?(K++,v0[K]=[]):v0[K].push(o[g]);return v0},P0=function(o){return o.replace(/^\\left\((.+)\\right\)$/g,function(g,K){return K||g})},r1=function(o){for(var g=[];o.length;){var K=o.shift(),v0=o[0],B0=_(v0),Y0=v0==="-";if(K==="^"&&(v0==="+"?o.shift():B0&&v0[0]==="+"&&v0.shift(),B0&&v0.length===1&&o.unshift(o.shift()[0])),K==="^"&&(B0&&v0[0]==="-"||Y0)){var p1=g.pop(),S1=g[g.length-1],G1="1";S1==="*"?(g.pop(),G1=g.pop()):_(S1)&&(G1=g.pop()),g.push(G1,"/",p1,K),B0?v0.shift():o.shift(),B0&&v0.length===1&&g.push(o.shift()[0])}else g.push(K)}return g};this.toTeX=function(o,g){g=g||{};var K=g.decimals===!0?"decimals":void 0,v0=typeof o=="string"?this.toObject(o):o,B0=[],Y0=typeof g.cdot=="undefined"?"\\cdot":g.cdot;if(v0=r1(v0),_(v0)){for(var p1=[],S1,G1,V1=0;V1<v0.length;V1++)S1=v0[V1],v0[V1+1]==="^"?(G1=v0[V1+2],p1.push(B1.braces(this.toTeX([S1]))+"^"+B1.braces(this.toTeX([G1]))),V1+=2):p1.push(S1);v0=p1}for(var V1=0,n2=v0.length;V1<n2;V1++){var E1=v0[V1];if(E1==="*"&&(E1=Y0),r0(E1))if(E1.group===X0){var m2=E1.fname,g2;if(m2===F1)g2="\\sqrt"+B1.braces(this.toTeX(E1.args));else if(m2===c1)g2=B1.brackets(this.toTeX(E1.args),"abs");else if(m2===q1)g2=B1.brackets(this.toTeX(E1.args),"parens");else if(m2===$.LOG10)g2="\\"+$.LOG10_LATEX+"\\left( "+this.toTeX(E1.args)+"\\right)";else if(m2==="integrate"){var d2=m0(E1.args),y2=B1.braces(this.toTeX(d2[0])),q2=this.toTeX(d2[1]);g2="\\int "+y2+"\\, d"+q2}else if(m2==="defint"){var d2=m0(E1.args),y2=B1.braces(this.toTeX(d2[0])),q2=this.toTeX(d2[3]),I2=this.toTeX(d2[1]),j1=this.toTeX(d2[2]);g2="\\int\\limits_{"+I2+"}^{"+j1+"} "+y2+"\\, d"+q2}else if(m2==="diff"){var d2=m0(E1.args),q2="",y2=B1.braces(this.toTeX(d2[0]));if(d2.length===1){var w2=[];for(E2=0;E2<d2[0].length;E2++)d2[0][E2].group===3&&w2.push(d2[0][E2].value);w2.sort(),q2=w2.length>0?"\\frac{d}{d "+w2[0]+"}":"\\frac{d}{d x}"}else d2.length===2?q2="\\frac{d}{d "+d2[1]+"}":q2="\\frac{d^{"+d2[2]+"}}{d "+this.toTeX(d2[1])+"^{"+d2[2]+"}}";g2=q2+"\\left("+y2+"\\right)"}else if(m2==="sum"||m2==="product"){var U2=[[],[],[],[]],E2=0,V1;for(V1=0;V1<E1.args.length;V1++){if(E1.args[V1]===","){E2++;continue}U2[E2].push(E1.args[V1])}g2=(m2==="sum"?"\\sum_":"\\prod_")+B1.braces(this.toTeX(U2[1])+" = "+this.toTeX(U2[2])),g2+="^"+B1.braces(this.toTeX(U2[3]))+B1.braces(this.toTeX(U2[0]))}else if(m2==="limit"){var L2=m0(E1.args).map(function(T2){return Array.isArray(T2)?t.toTeX(T2.join("")):t.toTeX(String(T2))});g2="\\lim_"+B1.braces(L2[1]+"\\to "+L2[2])+" "+B1.braces(L2[0])}else m2===b1||m2===Z0?g2=this.toTeX(E1.args)+(m2===b1?"!":"!!"):g2=B1.latex(E1,K);B0.push(g2)}else B0.push(B1.latex(E1,K));else _(E1)?B0.push(B1.brackets(this.toTeX(E1))):E1==="/"?B0.push(B1.frac(P0(B0.pop()),P0(this.toTeX([v0[++V1]])))):B0.push(E1)}return B0.join(" ")};function y1(o){return $.PARSE2NUMBER?o:t.symfunction("parens",[o])}function u1(o){if(o.isInfinity)return G.infinity();if(o.multiplier.lessThan(0)&&o.multiplier.negate(),o.isImaginary()){var g=o.realpart(),K=o.imagpart();if(g.isConstant()&&K.isConstant())return r2(t.add(t.pow(g,new G(2)),t.pow(K,new G(2))))}else if(n1(o)||a1(o.power))return o;if(o.isComposite()){var v0=[];o.each(function(p1){v0.push(p1.multiplier)});var B0=n0.QGCD.apply(null,v0);B0.lessThan(0)&&(o.multiplier=o.multiplier.multiply(new D0(-1)),o.distributeMultiplier())}var Y0=t.parse(o.multiplier);return o.toUnitMultiplier(),t.multiply(Y0,t.symfunction(c1,[o]))}function s1(o){var g;if(H0(o)){var K=new z1;return o.each(function(n2,E1){K.set(E1-1,s1(n2))}),K}if(s0(o)){var v0=new w1;return o.each(function(n2,E1,m2){v0.set(E1,m2,s1(n2))}),v0}if($.PARSE2NUMBER&&o.isConstant())return S(o)?g=n0.bigfactorial(o):g=n0.gamma(o.multiplier.add(new D0(1)).toDecimal()),g=V2(g),g;if(o.isConstant()){var B0=o.getDenom();if(B0.equals(2)){var Y0=o.getNum(),p1,S1,G1,V1;return o.multiplier.isNegative()?(V1=t.subtract(Y0.negate(),new G(1)).multiplier.divide(new D0(2)),p1=t.pow(new G(-4),new G(V1)).multiplier.multiply(n0.bigfactorial(V1)),S1=n0.bigfactorial(new D0(2).multiply(V1))):(V1=t.add(Y0,new G(1)).multiplier.divide(new D0(2)),p1=n0.bigfactorial(new D0(2).multiply(V1)),S1=t.pow(new G(4),new G(V1)).multiplier.multiply(n0.bigfactorial(V1))),G1=p1.divide(S1),t.multiply(t.parse("sqrt(pi)"),new G(G1))}}return t.symfunction(b1,[o])}function C1(o,g){var K=v1(o);if(K.isConstant()){var v0=n0.continuedFraction(K,g),B0=z1.fromArray(v0.fractions.map(function(Y0){return new G(Y0)}));return z1.fromArray([new G(v0.sign),new G(v0.whole),B0])}return t.symfunction("continued_fraction",arguments)}function g1(o,g){if(o.isConstant()&&g.isConstant()){var K=new G(1);return K.multiplier=K.multiplier.multiply(o.multiplier.mod(g.multiplier)),K}var v0=t.divide(o.clone(),g.clone());return S(v0)?new G(0):t.symfunction("mod",[o,g])}function f2(o,g,K){return typeof o!="boolean"&&n1(o)&&(o=!!Number(o)),o?g:K}function k1(o,g){if(s0(o))for(var K=0,v0=o.rows();K<v0;K++)for(var B0=0,Y0=o.cols();B0<Y0;B0++){var p1=o.elements[K][B0];if(p1.equals(g))return new G(1)}else if(o.elements){for(var K=0,v0=o.elements.length;K<v0;K++)if(o.elements[K].equals(g))return new G(1)}return new G(0)}function h1(o){return $.PARSE2NUMBER?o.isConstant()?new G(n0.sinc(o)):t.parse(Y("sin({0})/({0})",o)):t.symfunction("sinc",[o])}function Q1(o){return o.fname===$.LOG&&o.isLinear()?t.pow(o.args[0],G.create(o.multiplier)):t.parse(Y("e^({0})",o))}function p2(o){return t.parse(Y("({0})*pi/180",o))}function a2(o){return t.parse(Y("({0})*180/pi",o))}function W1(o){if(o.isComposite()){var g=new G(0),K,v0,B0,Y0,p1,S1,G1,V1;return o.each(function(n2){K=n2.getNum(),v0=n2.getDenom(),B0=g.getNum(),Y0=g.getDenom(),p1=t.multiply(v0,B0),S1=t.multiply(K,Y0),G1=t.expand(t.add(p1,S1)),V1=t.multiply(Y0,v0),g=t.divide(G1,V1)},!0),g}return o}function r2(o){if(r0(o)||(o=t.parse(o)),o.group===f1)return t.symfunction(F1,[o]);o.fname===""&&o.power.equals(1)&&(o=o.args[0]);var g=o.multiplier.sign()<0;if($.PARSE2NUMBER){if(o.isConstant()&&!g)return new G(N1.sqrt(o.multiplier.toDecimal()));if(o.isImaginary())return j.sqrt(o);if(o.group===A0)return t.symfunction("sqrt",[o])}var K,v0,B0=o.isConstant();if(o.group===$0&&o.isLinear()){var Y0=r2(G(o.multiplier));for(var p1 in o.symbols){var S1=o.symbols[p1];Y0=t.multiply(Y0,r2(S1))}v0=Y0}else if(o.fname===F1){var p1=o.args[0],G1=o.multiplier;p1.setPower(o.power.multiply(new D0(.25))),v0=p1,G1.equals(1)||(v0=t.multiply(r2(t.parse(G1)),v0))}else if(!o.power.isInteger())o.setPower(o.power.multiply(new D0(.5))),v0=o;else if(o.multiplier<0&&o.group===A0){var V1=t.parse(o.multiplier).negate(),n2=t.parse(o).toUnitMultiplier().negate();v0=t.multiply(t.symfunction($.SQRT,[n2]),r2(V1))}else{var E1=o.power.sign();o.power=o.power.abs(),B0&&o.multiplier.lessThan(0)&&(K=G.imaginary(),o.multiplier=o.multiplier.abs());var m2=o.multiplier.toDecimal(),g2=Math.abs(m2),d2=Math.sqrt(g2),Y0;if(S(d2))Y0=new G(d2);else if(S(m2)){var y2=n0.ifactor(m2),q2=1;for(var S1 in y2){var I2=y2[S1],j1=I2-I2%2;if(j1){var w2=Math.pow(S1,j1);q2*=Math.pow(S1,j1/2),m2/=w2}}Y0=t.multiply(t.symfunction(F1,[new G(m2)]),new G(q2))}else{for(var U2=[new G(o.multiplier.num),new G(o.multiplier.den)],E2=[new G(1),new G(1)],L2=[new G(1),new G(1)],R2=0;R2<2;R2++){var I2=U2[R2];u2(I2).each(function(P2){P2=G.unwrapPARENS(P2);var z2=P2.clone().toLinear(),F2=Number(P2.power),H2=F2%2,Z2=(F2-H2)/2;E2[R2]=t.multiply(E2[R2],t.pow(z2,new G(Z2))),L2[R2]=t.multiply(L2[R2],r2(t.pow(z2,new G(H2))))})}Y0=t.divide(t.multiply(E2[0],L2[0]),t.multiply(E2[1],L2[1]))}o=o.toUnitMultiplier(!0),o.isOne()?v0=o:a1(o.power.toString())?v0=t.pow(o.clone(),new G(.5)):v0=t.symfunction(F1,[o]),E1<0&&v0.power.negate(),Y0&&(v0=t.multiply(Y0,v0)),K&&(v0=t.multiply(K,v0))}return g&&$.PARSE2NUMBER?t.parse(v0):v0}function o2(o){if(!o.isConstant(!0)){var g,K=o.power/3,v0=t.pow(t.parse(o.multiplier),new G(1/3)),B0=o.toUnitMultiplier();return S(K)?g=t.pow(B0.toLinear(),t.parse(K)):B0.group===$0?(g=new G(1),B0.each(function(Y0){g=t.multiply(g,o2(Y0))})):g=t.symfunction("cbrt",[B0]),t.multiply(v0,g)}return M1(o,new G(3))}function h2(o,g){return o.scientific=g||10,o}function M1(o,g,K,v0){if(g=v1(t.parse(g)),g.equals(0))throw new v("Unable to calculate nthroots of zero");if(o<0&&a1(g))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!o.isConstant(!0))return t.symfunction("nthroot",arguments);o.group!==e0&&(o=v1(o)),typeof v0=="undefined"&&(v0=!0),K=K||25;var B0=o.sign(),Y0,p1;if(B0<0&&(o=u1(o)),S(o)&&g.isConstant()){o<18446744073709552e3?p1=D0.create(Math.pow(o,1/g)):p1=n0.nthroot(o,g);var Y0;return v0&&(Y0=new G(p1)),Y0=new G(p1.toDecimal(K)),t.multiply(new G(B0),Y0)}}function u2(o){if(o.greaterThan(9999999999998891e26)||o.equals(-1))return o;if(o.equals(Math.PI))return new G(Math.PI);if(o=v1(o.clone()),o.isConstant()){var g=new G(1),K=o.toString();if(S(K)){var v0=n0.ifactor(K);for(var B0 in v0){var Y0=v0[B0];g=t.multiply(g,t.symfunction("parens",[new G(B0).setPower(new D0(Y0))]))}}else{var p1=u2(new G(o.multiplier.num)),S1=u2(new G(o.multiplier.den));g=t.multiply(t.symfunction("parens",[p1]),t.symfunction("parens",[S1]).invert())}}else g=t.symfunction("pfactor",arguments);return g}function s2(o){return o.realpart()}function l2(o){return o.imagpart()}function S2(o){var g=o.realpart(),K=o.imagpart();return t.add(g,t.multiply(K.negate(),G.imaginary()))}function N2(o){var g=o.realpart(),K=o.imagpart();return g.isConstant()&&K.isConstant()?K.equals(0)&&g.equals(-1)?t.parse("pi"):K.equals(1)&&g.equals(0)?t.parse("pi/2"):K.equals(1)&&g.equals(1)?t.parse("pi/4"):new G(Math.atan2(K,g)):t.symfunction("atan2",[K,g])}function M2(o){var g,K,v0,B0;return g=G.toPolarFormArray(o),B0=g[1],K=g[0],v0=t.parse(Y("e^({0}*({1}))",$.IMAGINARY,B0)),t.multiply(K,v0)}function C2(o){var g=o.clone();try{var K,v0,B0,Y0,p1,S1,G1;return K=G0(o,"e",!0),v0=t.divide(K.x.power,G.imaginary()),B0=v1(C0.tan(v0)),Y0=t.pow(K.a,new G(2)),S1=B0.getDenom(!0),G1=B0.getNum(),p1=G.hyp(G1,S1),p1.equals(K.a)?t.add(S1,t.multiply(G.imaginary(),G1)):g}catch{return g}}function k2(o,g){g.map(function(Y0){Y0.numVal=v1(Y0).multiplier});for(var K,v0,B0;;){if(K=g.length,K<2)return g[0];v0=g.pop(),B0=g[K-2],(o==="min"?v0.numVal<B0.numVal:v0.numVal>B0.numVal)&&(g.pop(),g.push(v0))}}function j2(){var o=[].slice.call(arguments);return L(o)?o[0]:C(o)?new G(Math.max.apply(null,o)):$.SYMBOLIC_MIN_MAX&&T(o)?k2("max",o):t.symfunction("max",o)}function Y2(){var o=[].slice.call(arguments);return L(o)?o[0]:C(o)?new G(Math.min.apply(null,o)):$.SYMBOLIC_MIN_MAX&&T(o)?k2("min",o):t.symfunction("min",o)}function e3(o){return o.isConstant(!0)?new G(Math.sign(v1(o))):t.symfunction("sign",arguments)}function c3(o,g){g=g?g.toString():"asc";var K=function(B0){return B0.group===e0?B0.multiplier:B0.group===X0?B0.fname===""?K(B0.args[0]):B0.fname:B0.group===A0?B0.power:B0.value},v0=H0(o)?o.elements:o.collectSymbols();return new z1(v0.sort(function(B0,Y0){var p1=K(B0),S1=K(Y0);return g==="desc"?S1-p1:p1-S1}))}function G2(o,g){if(o.equals(1))return new G(0);var K;if(o.fname===F1&&o.multiplier.equals(1))return K=t.divide(G2(o.args[0]),new G(2)),o.power.sign()<0&&K.negate(),K;if(o.equals(0))throw new v($.LOG+"(0) is undefined!");if(o.isImaginary())return j.evaluate(o,$.LOG);if(o.isConstant()&&typeof g!="undefined"&&g.isConstant()){var v0=Math.log(o),B0=Math.log(g);K=new G(v0/B0)}else if(o.group===f1&&o.power.multiplier.lessThan(0)||o.power.toString()==="-1")o.power.negate(),K=G2(o).negate();else if(o.value==="e"&&o.multiplier.equals(1)){var Y0=o.power;K=r0(Y0)?Y0:new G(Y0)}else if(o.group===X0&&o.fname==="exp"){var p1=o.args[0];o.multiplier.equals(1)?K=t.multiply(p1,new G(o.power)):K=t.symfunction($.LOG,[o])}else if($.PARSE2NUMBER&&n1(o)){o=t.parse(o);var S1;o.multiplier.lessThan(0)&&(o.negate(),S1=t.multiply(new G(Math.PI),new G("i"))),K=new G(Math.log(o.multiplier.toDecimal())),S1&&(K=t.add(K,S1))}else{var p1;!o.power.equals(1)&&!o.contains("e")&&(p1=o.group===f1?o.power:new G(o.power),o.toLinear()),arguments.length>1&&L(arguments)?K=new G(1):K=t.symfunction($.LOG,arguments),p1&&(K=t.multiply(p1,K))}return K}function Q2(o,g){var K=g&&g.isConstant()||typeof g=="undefined";if(o.isConstant()&&K){var v0,B0,Y0,p1;return v0=o,g&&g.lessThan(0)&&(g=u1(g),B0=Number(o).toExponential().toString().split("e"),v0=B0[0],Y0=B0[1]),p1=new G(b0(v0,Number(g||0))),t.multiply(p1,t.pow(new G(10),new G(Y0||0)))}return t.symfunction("round",arguments)}function a3(o){var g=o%2,K;return g<0&&(g=2+g),g>=0&&g<=.5?K=1:g>.5&&g<=1?K=2:g>1&&g<=1.5?K=3:K=4,K}function V2(o){if(!isFinite(o)){var g=Math.sign(o),K=new G(String(Math.abs(o)));return K.multiplier=K.multiplier.multiply(new D0(g)),K}if(r0(o))return o;if(typeof o=="number")try{o=D0.simple(o)}catch{o=new D0(o)}var v0=new G(0);return v0.multiplier=o,v0}function x2(o){var g=o.group,K;if(g===z0){var v0=o.getNum(),B0=o.getDenom()||new G(1),Y0=Number(o.power),p1=new G(1);if(Math.abs(Y0)===1){B0.each(function(V1){V1.group===$0?p1=t.multiply(p1,x2(V1.getDenom())):V1.power.lessThan(0)&&(p1=t.multiply(p1,x2(V1.clone().toUnitMultiplier())))});var S1=new G(0);B0.each(function(V1){S1=t.add(t.divide(V1,p1.clone()),S1)}),p1.invert();var G1;v0.isComposite()?(G1=new G(0),v0.each(function(V1){G1=t.add(t.multiply(x2(V1),p1.clone()),G1)})):G1=t.multiply(p1,v0),K=t.divide(G1,S1)}}else g===$0?(K=new G(1),o.each(function(V1){K=t.multiply(K,t.clean(V1))})):g===X0&&o.args.length===1&&o.args[0].isConstant()&&(K=J1("PARSE2NUMBER",function(){return t.parse(o)},!0));return K||(K=o),K}function l3(o,g){return g=g||{expand_denominator:!0,expand_functions:!0},X2(o,g)}function X2(o,g){if(Array.isArray(o))return o.map(function(d2){return X2(d2,g)});if(g=g||{},o.group===X0&&o.fname===""){var K=X2(o.args[0],g),v0=X2(t.pow(K,t.parse(o.power)),g);return t.multiply(t.parse(o.multiplier),v0).distributeMultiplier()}if([e0,x1,A0].indexOf(o.group)!==-1)return o;var B0=o.clone();try{var Y0=o.multiplier.toString(),p1=Number(o.power),S1=o;if(o.isComposite()&&S(o.power)&&o.power>0){var G1=p1-1,K=new G(0);o.each(function(y2){K=t.add(K,X2(t.parse(y2),g))});for(var V1=t.parse(K),n2=0;n2<G1;n2++)V1=a(V1,K,g);S1=t.multiply(t.parse(Y0),V1).distributeMultiplier()}else if(o.group===X0&&g.expand_functions===!0){var E1=[];o.args.forEach(function(d2){E1.push(X2(d2,g))}),S1=t.pow(t.symfunction(o.fname,E1),t.parse(o.power)),S1=t.multiply(S1,t.parse(o.multiplier))}else if(o.isComposite()&&S(o.power)&&o.power<0&&g.expand_denominator===!0)o=o.invert(),S1=X2(o,g),S1.invert();else if(o.group===$0){var m2=function(y2){switch(y2.group){case z0:return 0;case o1:return 1;case $0:return 2;case X0:return 3;default:return 4}},g2=o.collectSymbols().sort(function(y2,q2){return m2(q2)-m2(y2)}).map(function(y2){var q2=t.pow(y2,t.parse(p1)),I2=X2(q2,g);return I2}),K=g2.pop();K.isComposite()&&K.isLinear()?(g2.forEach(function(y2){K=a(K,y2,g)}),K.isComposite()?(K.power>1&&(K=X2(t.pow(K,t.parse(K.power)),g)),S1=t.multiply(t.parse(Y0),K).distributeMultiplier()):S1=K):(S1=K,g2.forEach(function(y2){S1=t.multiply(S1,y2)}),S1=t.multiply(S1,t.parse(Y0)).distributeMultiplier()),S1.group===$0&&(S1=t.parse(S1))}else S1=o;return S1}catch{return B0}return B0}function p3(o){return w1.identity(o)}function J2(o,g){return g.isConstant()&&S(g)?o.elements[g]:t.symfunction("vecget",arguments)}function t3(o,g){return g=typeof g=="undefined"?1e-14:g,o=o.clone(),g=Number(g),o.elements.sort(function(K,v0){return v0.group-K.group}),o.elements=Y1(o.elements,function(K,v0){var B0=Number(t.subtract(v1(K),v1(v0)).abs());return B0<=g}),o}function g3(o,g,K){return g.isConstant?(o.elements[g]=K,o):t.symfunction("vecset",arguments)}function S3(o,g,K){return g.isConstant()&&K.isConstant()?o.elements[g][K]:t.symfunction("matget",arguments)}function L3(o,g){return g.isConstant()?new w1(o.elements[g]):t.symfunction("matgetrow",arguments)}function T3(o,g,K){if(!g.isConstant())return t.symfunction("matsetrow",arguments);if(o.elements[g].length!==K.elements.length)throw new g0("Matrix row must match row dimensions!");var v0=o.clone();return v0.elements[g]=K.clone().elements,v0}function O3(o,g){if(!g.isConstant())return t.symfunction("matgetcol",arguments);g=Number(g);var K=w1.fromArray([]);return o.each(function(v0,B0,Y0){Y0===g&&K.elements.push([v0.clone()])}),K}function R3(o,g,K){if(!g.isConstant())return t.symfunction("matsetcol",arguments);if(g=Number(g),o.rows()!==K.elements.length)throw new g0("Matrix columns must match number of columns!");return K.each(function(v0,B0){o.set(B0-1,g,v0.elements[0].clone())}),o}function x3(o,g,K,v0){return o.elements[g][K]=v0,o}function _3(){return new z1([].slice.call(arguments))}function P3(){return w1.fromArray(arguments)}function k3(){return L1.fromArray(arguments)}function F3(o){return s0(o)?o.determinant():o}function D3(o){var g;return s0(o)?g=[new G(o.cols()),new G(o.rows())]:H0(o)||M0(o)?g=new G(o.elements.length):f("size expects a matrix or a vector"),g}function B3(o,g){if(H0(o)&&H0(g))return o.dot(g);f("function dot expects 2 vectors")}function G3(o,g){if(H0(o)&&H0(g))return o.cross(g);f("function cross expects 2 vectors")}function V3(o){if(s0(o))return o.transpose();f("function transpose expects a matrix")}function H3(o){if(s0(o))return o.invert();f("invert expects a matrix")}function X3(o,g){return o.union(g)}function z3(o,g){return o.intersection(g)}function Z3(o,g){return o.contains(g)}function $3(o,g){return o.difference(g)}function Y3(o,g){return new G(Number(o.intersects(g)))}function Q3(o,g){return new G(Number(o.is_subset(g)))}function J3(){H1(arguments).map(function(o){console.log(o.toString())})}function A3(o){if(!r0(o.power)&&o.power.absEquals(.5)){var g=o.power.sign(),K=r2(o.group===x1?new G(o.value):o.toLinear());return g<0&&K.invert(),K}return o}function W3(o){if(o.group===x1){var g=o.value,K=V0(g)[0];if(!K)return x("Unable to compute prime factors. This should not happen. Please review and report."),o;var v0=new D0(Math.log(g)/Math.log(K)),B0=v0.multiply(o.power);if(B0.den>o.power.den)return o;S(B0)?o=G(Math.pow(K,B0)):o=new G(K).setPower(B0)}return o}this.expand=X2,this.round=Q2,this.clean=x2,this.sqrt=r2,this.cbrt=o2,this.abs=u1,this.log=G2,this.rationalize=W1,this.nthroot=M1,this.arg=N2,this.conjugate=S2,this.imagpart=l2,this.realpart=s2,this.getFunction=function(o){return s[o][0]},this.addPreprocessor=function(o,g,K,v0){var B0=M.names,Y0=M.actions;if(typeof g!="function")throw new PreprocessorError("Incorrect parameters. Function expected!");K?v0?(B0.splice(K,0,o),Y0.splice(K,0,g)):(B0[K]=o,Y0[K]=g):(B0.push(o),Y0.push(g))},this.getPreprocessors=function(){for(var o={},g=0,K=o.names.length;g<K;g++){var v0=o.names[g];o[v0]={order:g,action:o.actions[g]}}return o},this.removePreprocessor=function(o,g){var K=M.names.indexOf(o);g?(T1(M.names,K),T1(M.actions,K)):(M.names[K]=void 0,M.actions[K]=void 0)},this.mapped_function=function(){for(var o={},g=this.params,K=0;K<g.length;K++)o[g[K]]=String(arguments[K]);return t.parse(this.body,o)},this.add=function(o,g){var K=r0(o),v0=r0(g);if(K&&v0){if(o.unit||g.unit)return t.Unit.add(o,g);if(o.isInfinity||g.isInfinity){var B0=o.multiplier.lessThan(0),Y0=g.multiplier.lessThan(0);if(o.isInfinity&&g.isInfinity&&B0!==Y0)throw new v("("+o+")+("+g+") is not defined!");var p1=G.infinity();return Y0&&p1.negate(),p1}if(o.isComposite()&&o.isLinear()&&g.isComposite()&&g.isLinear()&&(o.distributeMultiplier(),g.distributeMultiplier(),g.length>o.length&&o.group===g.group&&([o,g]=[g,o])),o.multiplier.equals(0))return g;if(g.multiplier.equals(0))return o;if(o.isConstant()&&g.isConstant()&&$.PARSE2NUMBER){var w2=new G(o.multiplier.add(g.multiplier).toDecimal($.PRECISION));return w2}var S1=o.group,G1=g.group,V1=o.power.toString(),n2=g.power.toString();if(S1<G1||S1===G1&&V1>n2&&n2>0)return this.add(g,o);if(S1===$0&&G1===o1&&o.value===g.value){var E1=o;o=g,g=E1,S1=o.group,G1=g.group,V1=o.power.toString(),n2=g.power.toString()}var m2=V1===n2,g2=o.value,d2=g.value,y2=o.isComposite(),q2=g.isComposite(),I2,j1,w2;if(y2&&(I2=W0(o,"hash")),q2&&(j1=W0(g,"hash")),S1===z0&&G1===z0&&g.isLinear()&&!o.isLinear()&&I2!==j1)return this.add(g,o);S1===o1&&G1===o1&&(g2=I2,d2=j1);var U2=S1===x1&&G1===e0,E2=o.value===g.multiplier.toString(),L2=g2===d2||I2===j1&&I2!==void 0||U2&&E2;if(L2&&m2&&S1===G1)if(U2&&(g=g.convert(x1)),S1===o1&&(G1===A0||G1===x1))o.distributeMultiplier(),w2=o.attach(g);else if(w2=o,o.multiplier.isOne()&&g.multiplier.isOne()&&S1===z0&&o.isLinear()&&g.isLinear())for(var R2 in g.symbols){var T2=g.symbols[R2];w2.attach(T2)}else w2.multiplier=w2.multiplier.add(g.multiplier);else if(L2&&S1!==o1)S1===z0&&G1===o1?(g.insert(o,"add"),w2=g):(w2=G.shell(o1).attach([o,g]),w2.value=S1===o1?I2:g2);else if(y2&&o.isLinear()){var O2=S1===G1,P2=S1===o1&&G1===o1;if(P2&&(O2=o.value===g.value),o.distributeMultiplier(),g.isComposite()&&g.isLinear()&&O2){g.distributeMultiplier();for(var R2 in g.symbols){var T2=g.symbols[R2];o.attach(T2)}w2=o}else P2&&o.value!==j1||S1===o1&&!L2?(w2=G.shell(z0).attach([o,g]),w2.updateHash()):w2=o.attach(g)}else{if(S1===X0&&o.fname===F1&&G1!==f1&&g.power.equals(.5)){var z2=g.multiplier.clone();g=r2(g.toUnitMultiplier().toLinear()),g.multiplier=z2}o.length===2&&g.length===2&&a1(o.power)&&a1(g.power)?w2=t.add(X2(o),X2(g)):(w2=G.shell(z0).attach([o,g]),w2.updateHash())}if(w2.multiplier.equals(0)&&(w2=new G(0)),w2.length===1){var z2=w2.multiplier;w2=k(w2.symbols),w2.multiplier=w2.multiplier.multiply(z2)}return w2}else{if(v0&&!K){var E1=o;o=g,g=E1,E1=v0,v0=K,K=E1}var F2=s0(g);if(K&&F2){var H2=new w1;g.eachElement(function(s3,D2,r3){H2.set(D2,r3,t.add(o.clone(),s3))}),g=H2}else if(s0(o)&&F2)g=o.add(g);else if(K&&H0(g))g.each(function(s3,D2){D2--,g.elements[D2]=t.add(o.clone(),g.elements[D2])});else if(H0(o)&&H0(g))g.each(function(s3,D2){D2--,g.elements[D2]=t.add(o.elements[D2],g.elements[D2])});else{if(H0(o)&&s0(g))return t.add(g,o);if(s0(o)&&H0(g))if(g.elements.length===o.rows()){var H2=new w1,Z2=o.cols();return g.each(function(D2,r3){for(var o3=[],n3=0;n3<Z2;n3++)o3.push(t.add(o.elements[r3-1][n3].clone(),D2.clone()));H2.elements.push(o3)}),H2}else f("Dimensions must match!")}return g}},this.subtract=function(o,g){var K=K=r0(o),v0=r0(g);if(K&&v0)return o.unit||g.unit?t.Unit.subtract(o,g):this.add(o,g.negate());if(v0&&H0(o))g=o.map(function(p1){return t.subtract(p1,g.clone())});else if(K&&H0(g))g=g.map(function(p1){return t.subtract(o.clone(),p1)});else if(H0(o)&&H0(g))o.dimensions()===g.dimensions()?g=o.subtract(g):t.error("Unable to subtract vectors. Dimensions do not match.");else if(s0(o)&&H0(g))if(g.elements.length===o.rows()){var B0=new w1,Y0=o.cols();return g.each(function(p1,S1){for(var G1=[],V1=0;V1<Y0;V1++)G1.push(t.subtract(o.elements[S1-1][V1].clone(),p1.clone()));B0.elements.push(G1)}),B0}else f("Dimensions must match!");else if(H0(o)&&s0(g)){var B0=g.clone().negate();return t.add(B0,o)}else if(s0(o)&&s0(g))g=o.subtract(g);else if(s0(o)&&v0){var B0=new w1;o.each(function(S1,G1,V1){B0.set(G1,V1,t.subtract(S1,g.clone()))}),g=B0}else if(K&&s0(g)){var B0=new w1;g.each(function(S1,G1,V1){B0.set(G1,V1,t.subtract(o.clone(),S1))}),g=B0}return g},this.multiply=function(o,g){var K=r0(o),v0=r0(g);if(K&&g instanceof D)return g.elements.push(o),g;if(K&&v0){if(g.isUnit){var j1=o.clone();return o.unit=g,j1}if(o.unit||g.unit)return t.Unit.multiply(o,g);if(o.isInfinity||g.isInfinity){if(o.equals(0)||g.equals(0))throw new v(o+"*"+g+" is undefined!");if(g.power.lessThan(0)){if(o.isInfinity)throw new v("Infinity/Infinity is not defined!");return new G(0)}var y2=o.multiplier.multiply(g.multiplier).sign(),B0=G.infinity();if(o.isConstant()||g.isConstant()||o.isInfinity&&g.isInfinity)return y2<0&&B0.negate(),B0}if(o.isConstant()&&g.isConstant()&&$.PARSE2NUMBER){var Y0=new N1(o.multiplier.toDecimal()).times(new N1(g.multiplier.toDecimal())).toFixed(),p1=new G(Y0);return p1}if(o.isOne())return g.clone();if(g.isOne())return o.clone();if(o.multiplier.equals(0)||g.multiplier.equals(0))return new G(0);if(g.group>o.group&&g.group!==z0)return this.multiply(g,o);if(o.group===$0&&g.group===o1&&o.value===g.value){var Y0=o;o=g,g=Y0}var S1=o.group,G1=g.group,V1=g.multiplier.num,n2=g.multiplier.den;if(S1===X0&&o.fname===F1&&!g.isConstant()&&o.args[0].value===g.value&&!o.args[0].multiplier.lessThan(0)){var E1=o.power,m2=t.parse(o.multiplier);o=t.multiply(m2,o.args[0].clone()),o.setPower(new D0(.5).multiply(E1)),S1=o.group}else S1===X0&&o.fname===F1&&o.multiplier.equals(1)&&o.power.equals(-1)&&g.isConstant()&&o.args[0].equals(g)&&(o=t.symfunction(F1,[g.clone()]),g=new G(1));var g2=o.value,d2=g.value,y2=new D0(o.sign()),q2=S1===x1&&G1===e0&&g.multiplier.equals(o.value),I2=q2?new D0(1).multiply(o.multiplier).abs():o.multiplier.multiply(g.multiplier).abs(),j1=o.clone().toUnitMultiplier();if(g=g.clone().toUnitMultiplier(!0),S1===X0&&G1===X0){var w2=o.args[0].clone(),U2=g.args[0].clone();if(o.fname===F1&&g.fname===F1&&o.isLinear()&&g.isLinear()){var E2=t.divide(w2,U2).invert();E2.gt(1)&&S(E2)&&(j1=t.multiply(o.args[0].clone(),r2(E2.clone())),g=new G(1))}else if(o.fname===b1&&g.fname===b1&&!w2.isConstant()&&!U2.isConstant()&&g.power<0){var L2=t.subtract(w2.clone(),U2.clone());if(L2.isConstant())if(Y0=new G(1),L2<0){for(var R2=0,T2=Math.abs(L2);R2<=T2;R2++){var O2=t.add(w2.clone(),new G(R2));Y0=t.multiply(Y0,O2)}j1=t.multiply(t.pow(w2,new G(o.power)),t.pow(Y0,new G(g.power))),g=new G(1)}else{for(var R2=0,T2=Math.abs(L2);R2<=T2;R2++){var O2=t.add(U2.clone(),new G(R2));Y0=t.multiply(Y0,O2)}j1=t.multiply(t.pow(Y0,new G(o.power)),t.pow(U2,new G(g.power))),g=new G(1)}}}if(g2===d2&&S1===o1&&S1===G1&&(g2=o.text("hash"),d2=g.text("hash")),G1===f1&&g.previousGroup===o1&&S1===o1&&(g2=W0(o,"hash",f1)),(g2===d2||q2)&&!(S1===o1&&(G1===A0||G1===x1||G1===X0))&&!(S1===o1&&G1===$0)){var P2=o.power,z2=g.power,F2=r0(P2),H2=r0(z2),Z2=F2||H2;if(S1===o1&&G1!==o1&&g.previousGroup!==o1&&P2.equals(1))j1=new G(0),o.each(function(h3){j1=t.add(j1,t.multiply(h3,g.clone()))},!0);else{if(j1.power=Z2?t.add(r0(P2)?P2:new G(P2),r0(z2)?z2:new G(z2)):S1===e0?P2:P2.add(z2),j1.power.equals(0)&&(j1=j1.convert(e0)),Z2&&j1.convert(f1),o.imaginary&&g.imaginary){var s3=a1(j1.power%2);s3&&(j1=new G(1),I2.negate())}j1.group!==f1&&j1.previousGroup&&(j1.previousGroup=void 0),j1.multiplier=j1.multiplier.multiply(g.multiplier)}}else if(S1===$0&&o.isLinear())if(G1===$0&&g.distributeExponent(),G1===$0&&g.isLinear()){for(var O2 in g.symbols){var D2=g.symbols[O2];j1=j1.combine(D2)}j1.multiplier=j1.multiplier.multiply(g.multiplier)}else j1.combine(g);else if(S1!==e0){if(S1===$0)j1.distributeExponent(),j1.combine(g);else if(!g.isOne()){var r3=g.multiplier.clone();g.toUnitMultiplier(),j1=G.shell($0).combine([j1,g]),j1.multiplier=j1.multiplier.multiply(r3)}}else j1=g.clone().toUnitMultiplier();if(j1.group===x1){var o3=Math.log(j1.value),n3=Math.log(V1)/o3,_2=Math.log(n2)/o3,$2=I2.num/V1,B2=I2.den/n2;n3!==0&&S(n3)&&S($2)&&(j1.power=j1.power.add(new D0(n3)),I2.num/=V1),_2!==0&&S(_2)&&S(B2)&&(j1.power=j1.power.subtract(new D0(_2)),I2.den/=n2)}if(j1.length===1){var Y0=j1.multiplier;j1=k(j1.symbols),j1.multiplier=j1.multiplier.multiply(Y0)}var i3=j1.power.toString();if(a1(i3)&&j1.fname===F1){y2=y2*j1.sign();var f3=j1.power;j1=j1.args[0],j1=t.multiply(new G(I2),t.pow(j1,new G(f3.divide(new D0(2))))),y2<0&&j1.negate()}else j1.multiplier=j1.multiplier.multiply(I2).multiply(y2),j1.group===z0&&j1.isImaginary()&&j1.distributeMultiplier();return j1.group===x1&&S(j1.power.toDecimal())&&(j1=j1.convert(e0)),j1}else{v0&&!K&&(Y0=o,o=g,g=Y0,Y0=v0,v0=K,K=Y0);var w3=s0(g),y3=s0(o);if(K&&w3){var u3=new w1;g.eachElement(function(h3,K2,N3){u3.set(K2,N3,t.multiply(o.clone(),h3))}),g=u3}else if(y3&&w3)g=o.multiply(g);else if(K&&H0(g))g.each(function(h3,K2){K2--,g.elements[K2]=t.multiply(o.clone(),g.elements[K2])});else if(H0(o)&&H0(g))g.each(function(h3,K2){K2--,g.elements[K2]=t.multiply(o.elements[K2],g.elements[K2])});else{if(H0(o)&&s0(g))return this.multiply(g,o);if(s0(o)&&H0(g))if(g.elements.length===o.rows()){var u3=new w1,E3=o.cols();return g.each(function(K2,N3){for(var v3=[],m3=0;m3<E3;m3++)v3.push(t.multiply(o.elements[N3-1][m3].clone(),K2.clone()));u3.elements.push(v3)}),u3}else f("Dimensions must match!")}return g}},this.divide=function(o,g){var K=r0(o),v0=r0(g);if(K&&v0){if(o.unit||g.unit)return t.Unit.divide(o,g);var B0;if(g.equals(0))throw new w("Division by zero not allowed!");return o.isConstant()&&g.isConstant()?(B0=o.clone(),B0.multiplier=B0.multiplier.divide(g.multiplier)):(g.invert(),B0=t.multiply(o,g)),B0}else{var Y0=H0(o),p1=H0(g);if(K&&p1)g=g.map(function(n2){return t.divide(o.clone(),n2)});else if(Y0&&v0)g=o.map(function(n2){return t.divide(n2,g.clone())});else if(Y0&&p1)o.dimensions()===g.dimensions()?g=g.map(function(n2,E1){return t.divide(o.elements[--E1],n2)}):t.error("Cannot divide vectors. Dimensions do not match!");else{var S1=s0(o),G1=s0(g);if(S1&&v0){var V1=new w1;o.eachElement(function(n2,E1,m2){V1.set(E1,m2,t.divide(n2,g.clone()))}),g=V1}else if(K&&G1){var V1=new w1;g.eachElement(function(E1,m2,g2){V1.set(m2,g2,t.divide(o.clone(),E1))}),g=V1}else if(S1&&G1){var V1=new w1;o.rows()===g.rows()&&o.cols()===g.cols()?(o.eachElement(function(E1,m2,g2){V1.set(m2,g2,t.divide(E1,g.elements[m2][g2]))}),g=V1):t.error("Dimensions do not match!")}else if(S1&&p1)if(o.cols()===g.dimensions()){var V1=new w1;o.eachElement(function(E1,m2,g2){V1.set(m2,g2,t.divide(E1,g.elements[m2].clone()))}),g=V1}else t.error("Unable to divide matrix by vector.")}return g}},this.pow=function(o,g){var K=r0(o),v0=r0(g);if(K&&v0){if(o.unit||g.unit)return t.Unit.pow(o,g);if(o.group===X0&&o.fname===c1&&a1(g)){var n2=o.multiplier.clone(),B0=t.pow(o.args[0],g);return B0.multiplier=n2,B0}if(o.isInfinity||g.isInfinity){if(o.isInfinity&&g.isInfinity)throw new v("("+o+")^("+g+") is undefined!");if(o.isConstant()&&g.isInfinity){if(o.equals(0)){if(g.lessThan(0))throw new v("0^Infinity is undefined!");return new G(0)}if(o.equals(1))throw new v("1^"+g.toString()+" is undefined!");if(g.lessThan(0))return new G(0);if(!o.lessThan(0))return G.infinity()}if(o.isInfinity&&g.isConstant()){if(g.equals(0))throw new v(o+"^0 is undefined!");return g.lessThan(0)?new G(0):t.multiply(G.infinity(),t.pow(new G(o.sign()),g.clone()))}}var Y0=o.equals(0),p1=g.equals(0);if(Y0&&p1)throw new v("0^0 is undefined!");if(Y0&&g.isConstant()&&g.multiplier.greaterThan(0))return new G(0);if(p1)return new G(1);var S1=g.isConstant(),G1=o.isConstant(),V1=g.isInteger(),n2=o.multiplier,E1=o.clone();if(G1&&S1&&o.equals(0)&&g.lessThan(0))throw new v("Division by zero is not allowed!");if($.PARSE2NUMBER&&G1&&S1&&o.sign()<0&&U1(g)){var m2,g2,d2;return m2=Math.PI*g,g2=new G(Math.cos(m2)),d2=t.multiply(G.imaginary(),new G(Math.sin(m2))),t.add(g2,d2)}if($.PARSE2NUMBER&&o.isImaginary()&&S1&&S(g)&&!g.lessThan(0)){var g2,d2,y2,q2,I2,j1,w2;if(g2=o.realpart(),d2=o.imagpart(),g2.isConstant("all")&&d2.isConstant("all"))return w2=$.USE_BIG?G(N1.atan2(z2.multiplier.toDecimal(),y2.multiplier.toDecimal()).times(g.toString())):Math.atan2(d2,g2)*g,q2=new G(w2),y2=t.pow(G.hyp(g2,d2),g),I2=t.multiply(y2.clone(),t.trig.cos(q2.clone())),j1=t.multiply(y2,t.trig.sin(q2)),t.add(I2,t.multiply(G.imaginary(),j1))}if(E1.toUnitMultiplier(),E1.group===X0&&E1.fname===F1&&!S1){var U2=E1.args[0];U2.multiplyPower(new G(.5)),U2.multiplier.multiply(E1.multiplier),U2.multiplyPower(g),E1=U2}else{var E2=n2.sign();U1(g)&&E2<0&&(E1.negate(),E1=t.symfunction(q1,[E1]),E1.negate()),E1.multiplyPower(g)}if(G1&&S1&&$.PARSE2NUMBER){var L2;E2<0&&(o.negate(),g.multiplier.den.equals(2)?L2=new G($.IMAGINARY):S(g.multiplier)?a1(g.multiplier)?L2=new G(1):L2=new G(-1):a1(g.multiplier.den)?L2=t.pow(t.symfunction(q1,[new G(E2)]),g.clone()):L2=new G(Math.pow(E2,g.multiplier.num))),E1=new G(Math.pow(o.multiplier.toDecimal(),g.multiplier.toDecimal())),L2&&(E1=t.multiply(E1,L2))}else if(V1&&!n2.equals(1)){var R2=g.abs();if(R2.gt($.MAX_EXP))return g.sign()<0?new G(0):G.infinity();var T2=g.multiplier.toDecimal(),O2=Math.sign(T2);T2=Math.abs(T2);var P2=new D0(1);P2.num=n2.num.pow(T2),P2.den=n2.den.pow(T2),O2<0&&P2.invert(),E1.multiplier=E1.multiplier.multiply(P2)}else{var E2=o.sign();if(g.isConstant()&&o.isConstant()&&!g.multiplier.den.equals(1)&&E2<0)if(g.multiplier.den.equals(2)){var z2=new G($.IMAGINARY);o.negate(),g.lessThan(0)&&(z2.negate(),g.negate()),E1=t.multiply(t.pow(o,g),z2)}else{var F2=o.clone();F2.multiplier.negate(),E1=t.pow(t.symfunction(q1,[new G(E2)]),g.clone());var H2=t.pow(new G(F2.multiplier.num),g.clone()),Z2=t.pow(new G(F2.multiplier.den),g.clone()),y2=t.divide(H2,Z2);E1=t.multiply(E1,y2)}else if($.PARSE2NUMBER&&g.isImaginary()){var g2=g.realpart(),d2=g.imagpart(),F2=o.clone().toLinear(),s3=t.pow(F2.clone(),g2),D2=G2(F2.clone()),r3=C0.cos(t.multiply(d2.clone(),D2)),o3=t.multiply(C0.sin(t.multiply(d2,G2(F2))),G.imaginary());E1=t.multiply(s3,t.add(r3,o3)),E1=t.expand(t.parse(E1))}else{var n3=o.group===e0&&E2<0,_2=A3(new G(n3?n2.num:Math.abs(n2.num)).setPower(g.clone())),$2=A3(new G(n2.den).setPower(g.clone()).invert());if(o.imaginary)if(V1){var U2,T2,B2;U2=Math.sign(g),T2=u1(g),B2=T2%4,E1=new G(a1(B2)?-1:$.IMAGINARY),(B2===0||U2<0&&B2===1||U2>0&&B2===3)&&E1.negate()}else{var i3=g.multiplier.multiply(D0.quick(1,2)),f3=Math.pow(-1,i3.num);E1=a1(i3.den)?new G(-1).setPower(i3,!0):new G(f3)}if(E2<0&&!n3&&E1.negate(),S1&&o.group!==f1){var w3=a1(g.multiplier.den),y3=a1(o.power),B2=E1.power.toDecimal(),u3=a1(B2);if(w3&&y3&&!u3){if(B2===1)E1=t.symfunction(c1,[E1]);else if(S(B2))E1=t.multiply(t.symfunction(c1,[E1.clone().toLinear()]),E1.clone().setPower(new D0(B2-1)));else{var T2=E1.power;E1=t.symfunction(c1,[E1.toLinear()]).setPower(T2)}$.POSITIVE_MULTIPLIERS&&E1.fname===c1&&(E1=E1.args[0])}}if(g.equals(2)&&E1.group===$0){var E3=new G(1);E1.each(function(q3){E3=t.multiply(E3,t.pow(q3,g))}),E1=E3}}}if(E1=A3(E1),_2&&$2&&(E1=t.multiply(E1,W3(t.multiply(_2,$2)))),E1.fname===F1){var h3=E1.group===f1,K2=h3?E1.power.multiplier.toString():E1.power.toString();if(a1(K2)){var N3=h3?t.divide(E1.power,new G(2)):new G(E1.power.divide(new D0(2))),n2=E1.multiplier;E1=t.pow(E1.args[0],N3),E1.multiplier=E1.multiplier.multiply(n2)}}else if(!$.IGNORE_E&&E1.isE()&&E1.group===f1&&E1.power.contains("pi")&&E1.power.contains($.IMAGINARY)&&g.group===$0){var q2=g.stripVar($.IMAGINARY);E1=t.add(C0.cos(q2),t.multiply(G.imaginary(),C0.sin(q2)))}return E1}else{if(H0(o)&&v0)o=o.map(function(m3){return t.pow(m3,g.clone())});else if(s0(o)&&v0){var v3=new w1;o.eachElement(function(m3,q3,C3){v3.set(q3,C3,t.pow(m3,g.clone()))}),o=v3}else if(K&&s0(g)){var v3=new w1;g.eachElement(function(q3,C3,j3){v3.set(C3,j3,t.pow(o.clone(),q3))}),o=v3}return o}},this.comma=function(o,g){return o instanceof D||(o=D.create(o)),o.append(g),o},this.mod=function(o,g){return g1(o,g)},this.slice=function(o,g){return new I(o,g)},this.equals=function(o,g){return o.group!==A0&&!o.isLinear()&&f("Cannot set equality for "+o.toString()),i[o.value]=g.clone(),g},this.percent=function(o){return t.divide(o,new G(100))},this.assign=function(o,g){if(o instanceof D&&g instanceof D)return o.elements.map(function(v0,B0){return t.assign(v0,g.elements[B0])}),z1.fromArray(g.elements);if(o.parent){var K=o.parent;return K.elements[K.getter]=g,delete K.getter,K}if(o.group!==A0)throw new m("Cannot complete operation. Incorrect LH value for "+o);return i[o.value]=g,g},this.function_assign=function(o,g){var K=o.elements.pop();return E0(K,o.elements,g)};var M3=function(o){return new G(o===!0?1:0)};this.eq=function(o,g){return M3(o.equals(g))},this.gt=function(o,g){return M3(o.gt(g))},this.gte=function(o,g){return M3(o.gte(g))},this.lt=function(o,g){return M3(o.lt(g))},this.lte=function(o,g){return M3(o.lte(g))},this.factorial=function(o){return this.symfunction(b1,[o])},this.dfactorial=function(o){return this.symfunction(Z0,[o])}}var Z1={convert:function(t,p){var M;if(t===0)M=[0,1];else if(t<1e-6||t>1e20){var I=this.quickConversion(Number(t));if(I[1]<=1e20){var D=Math.abs(t),t0=t/D;M=this.fullConversion(D.toFixed((I[1]+"").length-1)),M[0]=M[0]*t0}else M=I}else M=this.fullConversion(t);return M},quickConversion:function(t){var p=function(I){typeof I!="string"&&(I=I.toString());var D="",t0=I.charAt(0);return t0==="-"?(I=I.substr(1,I.length),D="-"):t0==="+"&&(I=I.substr(1,I.length)),{sign:D,value:I}};function M(I){O1.isScientific(I)&&(I=u0(I));var D=p(I),t0=D.value.split("."),j;t0.length===1?j=t0[0]:j=t0[0]+t0[1];var C0=t0[1]?t0[1].length:0,j0=`1${"0".repeat(C0)}`;return j!=="0"&&(j=j.replace(/^0+/,"")),[D.sign+j,j0]}return M(t)},fullConversion:function(t){for(var p=!1,M=0,I=1,D=1,t0=0,j=0,C0=t,j0=1e-16;!p;){j++,j>1e4&&(p=!0);var J0=Math.floor(C0),e1=M+J0*D,s=I+J0*t0,c=C0-J0;c<j0&&(p=!0),C0=1/c,M=D,I=t0,D=e1,t0=s,(Math.abs(e1/s-t)<j0||j>30)&&(p=!0)}return[e1,s]}},B1={parser:function(){var t=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],p=new I1;for(var M in p)t.indexOf(M)===-1&&delete p[M];p.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(D){return D}}),p.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(D){return D}});var I=p.getBrackets();return I["{"].maps_to=void 0,p}(),space:"~",dot:" \\cdot ",latex:function(t,p){if(t.clone&&(t=t.clone()),t instanceof F.classes.Collection&&(t=t.elements),_(t)){for(var M=[],I=0;I<t.length;I++){var D=t[I];r0(D)||(D=F.parse(D)),M.push(this.latex(D,p))}return this.brackets(M.join(", "),"square")}else if(s0(t)){for(var t0=`\\begin{pmatrix}
`,I=0;I<t.elements.length;I++){for(var j=[],C0=t.elements[I],j0=0;j0<C0.length;j0++)j.push(this.latex(C0[j0],p));t0+=j.join(" & "),I<t.elements.length-1&&(t0+=`\\\\
`)}return t0+="\\end{pmatrix}",t0}else if(H0(t)){for(var t0="\\left[",I=0;I<t.elements.length;I++)t0+=this.latex(t.elements[I],p)+" "+(I!==t.elements.length-1?",\\,":"");return t0+="\\right]",t0}else if(M0(t)){for(var t0="\\{",I=0;I<t.elements.length;I++)t0+=this.latex(t.elements[I],p)+" "+(I!==t.elements.length-1?",\\,":"");return t0+="\\}",t0}t=t.clone();var J0=p==="decimal"||p==="decimals",e1=t.power,s=O(e1),c=t.multiplier.lessThan(0);if(t.group===x1&&J0)return String(t.multiplier.toDecimal()*Math.pow(t.value,t.power.toDecimal()));t.multiplier=t.multiplier.abs();var P;if(J0){var V=String(t.multiplier.toDecimal());P=[V,""]}else P=[t.multiplier.num,t.multiplier.den];var m0=this.value(t,s,p,c),P0;s&&e1.negate(),J0?(P0=r0(e1)?B1.latex(e1,p):String(e1.toDecimal()),String(P0)==="1"&&(P0="")):r0(e1)?P0=this.latex(e1,p):P0=this.formatFrac(e1,!0);var r1=["",""],y1=s?1:0;r1[y1]=P0;var u1=(c?"-":"")+this.set(P,m0,r1,t.group===$0);return u1.replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(t,p,M,I){var D=t.group,t0=t.previousGroup,j=["",""],C0=p?1:0;if(t.isInfinity)j[C0]="\\infty";else if(D===A0||D===x1||t0===A0||t0===x1||t0===e0){var j0=this.formatSubscripts(t.value);j0.replace&&(j0=j0.replace(/(.+)_$/,"$1\\_"));var J0=String(j0).split("_"),e1=this.greek[J0[0]];e1&&(J0[0]=e1,j0=J0.join("_"));var t=this.symbols[J0[0]];t&&(J0[0]=t,j0=J0.join("_")),j[C0]=j0}else if(D===X0||t0===X0){for(var s,c=[],P=t.fname,V=0;V<t.args.length;V++){var m0=t.args[V],P0;typeof m0=="string"?P0=m0:P0=this.latex(m0,M),c.push(P0)}if(P===F1)j[C0]="\\sqrt"+this.braces(c.join(","));else if(P===c1)j[C0]=this.brackets(c.join(","),"abs");else if(P===q1)j[C0]=this.brackets(c.join(","),"parens");else if(P==="limit")j[C0]=" \\lim\\limits_{"+c[1]+" \\to "+c[2]+"} "+c[0];else if(P==="integrate")j[C0]="\\int"+this.braces(c[0])+this.braces("d"+c[1]);else if(P==="defint")j[C0]="\\int\\limits_"+this.braces(c[1])+"^"+this.braces(c[2])+" "+c[0]+" d"+c[3];else if(P===b1||P===Z0){var m0=t.args[0];m0.power.equals(1)&&(m0.isComposite()||m0.isCombination())&&(c[0]=this.brackets(c[0])),j[C0]=c[0]+(P===b1?"!":"!!")}else if(P==="floor")j[C0]="\\left \\lfloor"+this.braces(c[0])+"\\right \\rfloor";else if(P==="ceil")j[C0]="\\left \\lceil"+this.braces(c[0])+"\\right \\rceil";else if(P===$.LOG&&c.length>1)j[C0]="\\mathrm"+this.braces($.LOG)+"_"+this.braces(c[1])+this.brackets(c[0]);else if(P===$.LOG10)j[C0]="\\mathrm"+this.braces($.LOG)+"_"+this.braces(10)+this.brackets(c[0]);else if(P==="sum"){var r1=c[0],y1=c[1],u1=c[2],s1=c[3];j[C0]="\\sum\\limits_{"+this.braces(y1)+"="+this.braces(u1)+"}^"+this.braces(s1)+" "+this.braces(r1)}else if(P==="product"){var r1=c[0],y1=c[1],u1=c[2],s1=c[3];j[C0]="\\prod\\limits_{"+this.braces(y1)+"="+this.braces(u1)+"}^"+this.braces(s1)+" "+this.braces(r1)}else if(P==="nthroot")j[C0]="\\sqrt["+c[1]+"]"+this.braces(c[0]);else if(P==="mod")j[C0]=c[0]+" \\bmod "+c[1];else if(P==="realpart")j[C0]="\\operatorname{Re}"+this.brackets(c[0]);else if(P==="imagpart")j[C0]="\\operatorname{Im}"+this.brackets(c[0]);else{var s=P!==""?"\\mathrm"+this.braces(P.replace(/_/g,"\\_")):"";t.isConversion?j[C0]=s+this.brackets(c.join(""),"parens"):j[C0]=s+this.brackets(c.join(","),"parens")}}else if(t.isComposite()){for(var C1=t.collectSymbols().sort(D===z0||t0===z0?function(h2,M1){return M1.group-h2.group}:function(h2,M1){var u2=r0(h2.power)?-1:h2.power,s2=r0(M1.power)?-1:M1.power;return s2-u2}),g1=[],f2=C1.length,V=0;V<f2;V++)g1.push(B1.latex(C1[V],M));var j0=g1.join("+");j[C0]=!(t.isLinear()&&t.multiplier.equals(1))||I?this.brackets(j0,"parens"):j0}else if(D===$0||t0===f1||t0===$0){D===$0&&t.distributeExponent();var k1=[],h1=[],Q1=[],p2=[],a2=0,W1=0,r2=function(o2,h2,M1){if(M1>1&&h2.length>0)for(var u2=h2.length,s2=0;s2<u2;s2++){var l2=h2[s2],S2=o2[l2];/^\\left\(.+\\right\)\^\{.+\}$/g.test(S2)||/^\\left\(.+\\right\)$/g.test(S2)||(o2[l2]=B1.brackets(S2,"parens"))}return o2};t.each(function(o2){var h2=O(o2.power),M1;h2?(M1=B1.latex(o2.invert(),M),W1++,o2.isComposite()&&(t.multiplier.den!=1&&Math.abs(o2.power)==1&&(M1=B1.brackets(M1,"parens")),Q1.push(k1.length)),k1.push(M1)):(M1=B1.latex(o2,M),a2++,o2.isComposite()&&(t.multiplier.num!=1&&Math.abs(o2.power)==1&&(M1=B1.brackets(M1,"parens")),p2.push(h1.length)),h1.push(M1))}),r2(h1,p2,a2),j[0]=h1.join(this.dot),r2(k1,Q1,W1),j[1]=k1.join(this.dot)}return j},set:function(t,p,M,I){var D=function(P){return/^\\left\(.+\\right\)$/.test(P)};if(M&&(M=this.formatP(M)),I){var t0=M[0];M[0]=""}p=this.merge(p,M);var j=t[0],C0=t[1],j0=p[0],J0=p[1];j0&&Number(j)===1&&(j=""),Number(C0)===1&&(C0="");var e1=this.join(j,j0,D(j0)?"":this.dot),s=this.join(C0,J0,D(J0)?"":this.dot);if(e1&&s){var c=this.frac(e1,s);return I&&t0&&(c=this.brackets(c)+t0),c}else return e1},merge:function(t,p){for(var M=[],I=0;I<2;I++)M[I]=t[I]+p[I];return M},join:function(t,p,M){return!t&&!p?"":t&&!p?t:p&&!t?p:t+M+p},formatSubscripts:function(t){for(var p=t.toString().split("_"),M="";p.length>1;)p.length>0&&(M="_"+this.braces(p.pop()+M));return p[0]+M},formatP:function(t){for(var p=0;p<2;p++){var M=t[p];M&&(t[p]="^"+this.braces(M))}return t},formatFrac:function(t,p){var M=t.num.toString(),I=t.den.toString();return p&&M==="1"&&I==="1"?"":I==="1"?M:this.frac(M,I)},frac:function(t,p){return"\\frac"+this.braces(t)+this.braces(p)},braces:function(t){return"{"+t+"}"},brackets:function(t,p){p=p||"parens";var M={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]},I=M[p];return"\\left"+I[0]+t+"\\right"+I[1]},filterTokens:function(t){var p=[];_(t)&&(p.type=t.type);for(var M=["\\","left","right","big","Big","large","Large"],I=0,D=t.length;I<D;I++){var t0=t[I],j=t[I+1];t0.value==="\\"&&j.value==="\\"?p.push(t0):_(t0)?p.push(B1.filterTokens(t0)):M.indexOf(t0.value)===-1&&p.push(t0)}return p},parse:function(t){var p,M,I="",D=this.filterTokens(t),t0={cdot:"",times:"",infty:"Infinity"},j=function(C1){return D[typeof C1=="undefined"?++p:p+=C1]},C0=function(){return B1.parse(j())},j0=function(C1){return C1 in t0?t0[C1]:C1==="*"&&D[p+1].value==="&"?(j(2),","):C1==="&"?(j(),","):C1==="\\"?"],[":C1};for(p=0,M=D.length;p<M;p++){var J0=D[p];if(J0.value==="frac"){var e1=C0(),s=C0();I+=e1+"/"+s}else if(J0.value in B1.symbols)if(J0.value===F1&&D[p+1].type==="vector"&&D[p+2].type==="Set"){var c=C0(),P=C0();I+=P+"^"+X("1/"+c)}else I+=J0.value+C0();else if(J0.value==="int"){var V=C0();p++;var m0=j().value;m0=j0(m0.substring(1,m0.length)),I+="integrate"+X(V+","+m0)}else if(J0.value==="int_"){var M=C0();p++;var P0=j().value;if(P0===void 0){p--;var P0=C0()}var V=C0(),m0=j().value;if(m0===",")var m0=j().value;if(m0==="differentialD"){p++;var m0=j().value}if(m0==="mathrm"){p++;var m0=j().value}I+="defint"+X(V+","+M+","+P0+","+m0)}else if(J0.value&&J0.value.startsWith("int_")){var M=J0.value.replace("int_","");console.log("uppernow"),p++;var P0=j().value;if(P0===void 0){p--;var P0=C0()}var V=C0(),m0=j().value;if(m0===",")var m0=j().value;if(m0==="differentialD"){p++;var m0=j().value}if(m0==="mathrm"){p++;var m0=j().value}I+="defint"+X(V+","+M+","+P0+","+m0)}else if(J0.value==="mathrm"){var V=D[++p][0].value;I+=V+C0()}else if(J0.value==="sum_"||J0.value==="prod_"){var r1=J0.value==="sum_"?"sum":"product",y1=j();p++;var u1=C0(),V=C0();I+=r1+X([V,j0(y1[0]),j0(y1[2]),j0(u1)].join(","))}else if(J0.value==="lim_"){var y1=j();I+="limit"+X([C0(),j0(y1[0]),j0(y1[2])].join(","))}else if(J0.value==="begin"){var y1=j();if(Array.isArray(y1)){var s1=y1[0].value;s1==="matrix"&&(I+="matrix([")}}else if(J0.value==="end"){var y1=j();if(Array.isArray(y1)){var s1=y1[0].value;s1==="matrix"&&(I+="])")}}else Array.isArray(J0)?I+=j0(B1.parse(J0)):I+=j0(J0.value.toString())}return X(I)}};function z1(t){H0(t)?this.elements=t.items.slice(0):_(t)?this.elements=t.slice(0):this.elements=[].slice.call(arguments)}z1.arrayPrefill=function(t,p){var M=[];p=p||0;for(var I=0;I<t;I++)M[I]=p;return M},z1.fromArray=function(t){var p=new z1;return p.elements=t,p},z1.fromSet=function(t){return z1.fromArray(t.elements)},z1.prototype={custom:!0,e:function(t){return t<1||t>this.elements.length?null:this.elements[t-1]},set:function(t,p){r0(p)||(p=new G(p)),this.elements[t]=p},dimensions:function(){return this.elements.length},modulus:function(){return J1("SAFE",function(){return F.pow(this.dot(this.clone()),new G(.5))},void 0,this)},eql:function(t){var p=this.elements.length,M=t.elements||t;if(p!==M.length)return!1;do if(Math.abs(F.subtract(this.elements[p-1],M[p-1]).valueOf())>PRECISION)return!1;while(--p);return!0},clone:function(){for(var t=new z1,p=this.elements.length,M=0;M<p;M++)t.elements.push(this.elements[M].clone());return this.getter&&(t.getter=this.getter.clone()),t},map:function(t){var p=[];return this.each(function(M,I){p.push(t(M,I))}),new z1(p)},each:function(t){var p=this.elements.length,M=p,I;do I=M-p,t(this.elements[I],I+1);while(--p)},toUnitVector:function(){return J1("SAFE",function(){var t=this.modulus();return t.valueOf()===0?this.clone():this.map(function(p){return F.divide(p,t)})},void 0,this)},angleFrom:function(t){return J1("SAFE",function(){var p=t.elements||t,M=this.elements.length;if(M!==p.length)return null;var I=new G(0),D=new G(0),t0=new G(0);this.each(function(J0,e1){I=F.add(I,F.multiply(J0,p[e1-1])),D=F.add(D,F.multiply(J0,J0)),t0=F.add(t0,F.multiply(p[e1-1],p[e1-1]))}),D=F.pow(D,new G(.5)),t0=F.pow(t0,new G(.5));var j=F.multiply(D,t0);if(j.valueOf()===0)return null;var C0=F.divide(I,j),j0=C0.valueOf();return j0<-1&&(C0=-1),j0>1&&(C0=1),new G(Math.acos(C0))},void 0,this)},isParallelTo:function(t){var p=this.angleFrom(t).valueOf();return p===null?null:p<=PRECISION},isAntiparallelTo:function(t){var p=this.angleFrom(t).valueOf();return p===null?null:Math.abs(p-Math.PI)<=PRECISION},isPerpendicularTo:function(t){var p=this.dot(t);return p===null?null:Math.abs(p)<=PRECISION},add:function(t){return J1("SAFE",function(){var p=t.elements||t;return this.elements.length!==p.length?null:this.map(function(M,I){return F.add(M,p[I-1])})},void 0,this)},subtract:function(t){return J1("SAFE",function(){var p=t.elements||t;return this.elements.length!==p.length?null:this.map(function(M,I){return F.subtract(M,p[I-1])})},void 0,this)},multiply:function(t){return this.map(function(p){return p.clone()*t.clone()})},x:function(t){return this.multiply(t)},dot:function(t){return J1("SAFE",function(){var p=t.elements||t,M=new G(0),I=this.elements.length;if(I!==p.length)return null;do M=F.add(M,F.multiply(this.elements[I-1],p[I-1]));while(--I);return M},void 0,this)},cross:function(t){var p=t.elements||t;if(this.elements.length!==3||p.length!==3)return null;var M=this.elements;return J1("SAFE",function(){return new z1([F.subtract(F.multiply(M[1],p[2]),F.multiply(M[2],p[1])),F.subtract(F.multiply(M[2],p[0]),F.multiply(M[0],p[2])),F.subtract(F.multiply(M[0],p[1]),F.multiply(M[1],p[0]))])},void 0,this)},max:function(){var t=0,p=this.elements.length,M=p,I;do I=M-p,Math.abs(this.elements[I].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[I]);while(--p);return t},magnitude:function(){var t=new G(0);return this.each(function(p){t=F.add(t,F.pow(p,new G(2)))}),F.sqrt(t)},indexOf:function(t){var p=null,M=this.elements.length,I=M,D;do D=I-M,p===null&&this.elements[D].valueOf()===t.valueOf()&&(p=D+1);while(--M);return p},text:function(t){return W0(this)},toString:function(){return this.text()},latex:function(t){for(var p=[],M=0;M<this.elements.length;M++)p.push(B1.latex.call(B1,this.elements[M],t));return"["+p.join(", ")+"]"}};function w1(){var t=arguments,p=t.length,M,I=[];if(s0(t))for(M=0;M<p;M++)I.push(t[M].slice(0));else{var D,t0,j;for(M=0;M<p;M++)D=t[M],H0(D)&&(D=D.elements),_(D)||(D=[D]),j=D.length,t0&&t0!==j&&f("Unable to create Matrix. Row dimensions do not match!"),I.push(D),t0=j}this.elements=I}w1.identity=function(t){for(var p=new w1,M=0;M<t;M++){p.elements.push([]);for(var I=0;I<t;I++)p.set(M,I,M===I?new G(1):new G(0))}return p},w1.fromArray=function(t){function p(M){return w1.apply(this,M)}return p.prototype=w1.prototype,new p(t)},w1.zeroMatrix=function(t,p){for(var M=new w1,I=0;I<t;I++)M.elements.push(z1.arrayPrefill(p,new G(0)));return M},w1.prototype={custom:!0,get:function(t,p){if(!!this.elements[t])return this.elements[t][p]},map:function(t,p){var M=new w1;return this.each(function(I,D,t0){M.set(D,t0,t.call(M,I),p)}),M},set:function(t,p,M,I){this.elements[t]||(this.elements[t]=[]),this.elements[t][p]=I||r0(M)?M:new G(M)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(t){return!t||t>this.cols()?[]:this.elements[t-1]},col:function(t){var p=this.rows(),M=[];if(t>this.cols()||!t)return M;for(var I=0;I<p;I++)M.push(this.elements[I][t-1]);return M},eachElement:function(t){var p=this.rows(),M=this.cols(),I,D;for(I=0;I<p;I++)for(D=0;D<M;D++)t.call(this,this.elements[I][D],I,D)},determinant:function(){if(!this.isSquare())return null;var t=this.toRightTriangular(),p=t.elements[0][0],M=t.elements.length-1,I=M,D;do D=I-M+1,p=F.multiply(p,t.elements[D][D]);while(--M);return p},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&this.determinant()===0},augment:function(t){var p=this.rows(),M=t.rows();p!==M&&f("Cannot augment matrix. Rows don't match.");for(var I=0;I<p;I++)this.elements[I]=this.elements[I].concat(t.elements[I]);return this},clone:function(){for(var t=this.rows(),p=this.cols(),M=new w1,I=0;I<t;I++){M.elements[I]=[];for(var D=0;D<p;D++){var t0=this.elements[I][D];M.elements[I][D]=r0(t0)?t0.clone():t0}}return M},invert:function(){return this.isSquare()||f("Matrix is not square!"),J1("SAFE",function(){var t=this.elements.length,p=t,M,I,D=w1.identity(t),t0=this.augment(D).toRightTriangular(),j,C0=t0.elements[0].length,j0,J0,e1,s=[],c;do{M=t-1,J0=[],j=C0,s[M]=[],e1=t0.elements[M][M];do j0=C0-j,c=F.divide(t0.elements[M][j0],e1.clone()),J0.push(c),j0>=p&&s[M].push(c);while(--j);for(t0.elements[M]=J0,I=0;I<M;I++){J0=[],j=C0;do j0=C0-j,J0.push(F.subtract(t0.elements[I][j0].clone(),F.multiply(t0.elements[M][j0].clone(),t0.elements[I][M].clone())));while(--j);t0.elements[I]=J0}}while(--t);return w1.fromArray(s)},void 0,this)},toRightTriangular:function(){return J1("SAFE",function(){var t=this.clone(),p,M,I,D=this.elements.length,t0=D,j,C0,j0=this.elements[0].length,J0;do{if(j=t0-D,M=t.elements[j][j],M.valueOf()===0){for(var e1=j+1;e1<t0;e1++)if(I=t.elements[e1][j],I&&I.valueOf()!==0){p=[],C0=j0;do J0=j0-C0,p.push(F.add(t.elements[j][J0].clone(),t.elements[e1][J0].clone()));while(--C0);t.elements[j]=p;break}}var M=t.elements[j][j];if(M.valueOf()!==0)for(e1=j+1;e1<t0;e1++){var s=F.divide(t.elements[e1][j].clone(),t.elements[j][j].clone());p=[],C0=j0;do J0=j0-C0,p.push(J0<=j?new G(0):F.subtract(t.elements[e1][J0].clone(),F.multiply(t.elements[j][J0].clone(),s.clone())));while(--C0);t.elements[e1]=p}}while(--D);return t},void 0,this)},transpose:function(){var t=this.elements.length,p=this.elements[0].length,M=new w1,I=p,D,t0,j;do{D=p-I,M.elements[D]=[],t0=t;do j=t-t0,M.elements[D][j]=this.elements[j][D].clone();while(--t0)}while(--I);return M},canMultiplyFromLeft:function(t){var p=s0(t)?t.elements.length:t.length;return this.elements[0].length===p},sameSize:function(t){return this.rows()===t.rows()&&this.cols()===t.cols()},multiply:function(t){return J1("SAFE",function(){var p=t.elements||t;if(!this.canMultiplyFromLeft(p)){if(this.sameSize(t)){for(var M=new w1,I=this.rows(),C0=0;C0<I;C0++){var D=F.multiply(new z1(this.elements[C0]),new z1(t.elements[C0]));M.elements[C0]=D.elements}return M}return null}var t0=this.elements.length,j=t0,C0,j0,J0=p[0].length,e1,s=this.elements[0].length,c=[],P,V,m0;do{C0=j-t0,c[C0]=[],j0=J0;do{e1=J0-j0,P=new G(0),V=s;do m0=s-V,P=F.add(P,F.multiply(this.elements[C0][m0],p[m0][e1]));while(--V);c[C0][e1]=P}while(--j0)}while(--t0);return w1.fromArray(c)},void 0,this)},add:function(t,p){var M=new w1;return this.sameSize(t)&&this.eachElement(function(I,D,t0){var j=F.add(I.clone(),t.elements[D][t0].clone());p&&(j=p.call(M,j,I,t.elements[D][t0])),M.set(D,t0,j)}),M},subtract:function(t,p){var M=new w1;return this.sameSize(t)&&this.eachElement(function(I,D,t0){var j=F.subtract(I.clone(),t.elements[D][t0].clone());p&&(j=p.call(M,j,I,t.elements[D][t0])),M.set(D,t0,j)}),M},negate:function(){return this.each(function(t){return t.negate()}),this},toVector:function(){if(this.rows()===1||this.cols()===1){var t=new z1;return t.elements=this.elements,t}return this},toString:function(t,p){for(var M=this.rows(),I=[],D=0;D<M;D++)I.push("["+this.elements[D].map(function(t0){var j=p?t0.multiplier.toDecimal():t0.toString();return t0!==void 0?j:""}).join(",")+"]");return"matrix"+X(I.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(t){var p=this.cols(),M=this.elements;return Y("\\begin{vmatrix}{0}\\end{vmatrix}",function(){var I=[];for(var D in M){for(var t0=[],j=0;j<p;j++)t0.push(B1.latex.call(B1,M[D][j],t));I.push(t0.join(" & "))}return I.join(" \\cr ")})}},w1.prototype.each=w1.prototype.eachElement;function L1(t){if(this.elements=[],H0(t)||(t=z1.fromArray(arguments)),t)for(var p=t.elements,M=0,I=p.length;M<I;M++)this.add(p[M])}L1.fromArray=function(t){function p(M){return L1.apply(this,M)}return p.prototype=L1.prototype,new p(t)},L1.prototype={add:function(t){this.contains(t)||this.elements.push(t.clone())},contains:function(t){for(var p=0;p<this.elements.length;p++){var M=this.elements[p];if(t.equals(M))return!0}return!1},each:function(t){for(var p=this.elements,M=new L1,I=0,D=p.length;I<D;I++){var t0=p[I];t.call(this,t0,M,I)}return M},clone:function(){var t=new L1;return this.each(function(p){t.add(p.clone())}),t},union:function(t){var p=this.clone();return t.each(function(M){p.add(M)}),p},difference:function(t){var p=this.clone();return t.each(function(M){p.remove(M)}),p},remove:function(t){for(var p=0,M=this.elements.length;p<M;p++){var I=this.elements[p];if(I.equals(t))return T1(this.elements,p),!0}return!1},intersection:function(t){var p=new L1,M=this;return t.each(function(I){M.contains(I)&&p.add(I)}),p},intersects:function(t){return this.intersection(t).elements.length>0},is_subset:function(t){for(var p=t.elements,M=0,I=p.length;M<I;M++)if(!this.contains(p[M]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var c2={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":n0.gamma},gamma_incomplete:{"Math2.factorial":n0.factorial},Li:{"Math2.Ei":n0.Ei,"Math2.bigLog":n0.bigLog,Frac:D0},Ci:{"Math2.factorial":n0.factorial},Ei:{"Math2.factorial":n0.factorial},Si:{"Math2.factorial":n0.factorial},Shi:{"Math2.factorial":n0.factorial},Chi:{isInt:S,nround:b0,"Math2.num_integrate":n0.num_integrate},factor:{"Math2.ifactor":n0.ifactor,Symbol:G},num_integrate:{"Math2.simpson":n0.simpson,nround:b0},fib:{even:a1}},reformat:{diff:function(t,p){var M=t.args[1].toString(),I="var f = "+c2.build(t.args[0].toString(),[M])+";";return p[1]+="var diff = "+n0.diff.toString()+";",p[1]+=I,["diff(f)("+M+")",p]}},getProperName:function(t){var p={continued_fraction:"continuedFraction"};return p[t]||t},compileDependencies:function(t,p){var M=c2.dependencies[t],I=p&&p[1]?p[1]:"",D=p&&p[0]?p[0]:{};for(var t0 in M)if(typeof M[t0]!="object"){var j=t0.split(".");I+="var "+(j.length>1?j[1]:j[0])+"="+M[t0]+";",D[t0]=j.pop()}return[D,I]},getArgsDeps:function(t,p){for(var M=t.args,I=0;I<M.length;I++)t.args[I].each(function(D){D.group===X0&&(p=c2.compileDependencies(D.fname,p))});return p},build:function(t,p){t=J1("PARSE2NUMBER",function(){return F.parse(t)},!0);var M=I0(t),I=[],D=[],t0=function(e1,s){e1.fname===""&&(e1=G.unwrapPARENS(e1)),s=s||[];var c=[],P=e1.group,V="",m0=function(C1){var g1=C1===$0?"*":"+",f2=[];for(var k1 in e1.symbols){var h1=e1.symbols[k1],Q1=t0(h1,s)[0];h1.isComposite()&&(Q1=X(Q1)),f2.push(Q1)}var p2=f2.join(g1);return p2=p2&&!e1.multiplier.equals(1)?X(p2):p2,p2},P0=function(C1){var g1;return C1 in Math?g1="Math."+C1:(C1=c2.getProperName(C1),I.indexOf(C1)===-1&&(s.push("var "+C1+" = "+n0[C1].toString()+"; "),I.push(C1)),g1=C1),g1=g1+X(e1.args.map(function(f2){return t0(f2,s)[0]}).join(",")),g1};P===e0?c.push(e1.multiplier.toDecimal()):e1.multiplier.equals(-1)?V="-":e1.multiplier.equals(1)||c.push(e1.multiplier.toDecimal());var r1;if(P===A0||P===x1)r1=e1.value;else if(P===X0)if(D=c2.compileDependencies(e1.fname,D),D=c2.getArgsDeps(e1,D),c2.reformat[e1.fname]){var y1=c2.reformat[e1.fname](e1,D);D=y1[1],r1=y1[0]}else r1=P0(e1.fname);else if(P===f1){var u1=e1.previousGroup;u1===e0||u1===A0?r1=e1.value:u1===X0?(r1=P0(e1.fname),D=c2.compileDependencies(e1.fname,D),D=c2.getArgsDeps(e1,D)):r1=m0(e1.previousGroup)}else r1=m0(e1.group);if(e1.group!==e0&&!e1.power.equals(1)){var s1=t0(F.parse(e1.power));s.push(s1[1]),r1="Math.pow"+X(r1+","+s1[0])}return r1&&c.push(V+r1),[c.join("*"),s.join("").replace(/\n+\s+/g," ")]};p&&(M=p);var j=t0(t);for(var C0 in D[0]){var j0=D[0][C0];j[1]=j[1].replace(C0,j0),D[1]=D[1].replace(C0,j0)}var J0=new Function(M,(D[1]||"")+j[1]+" return "+j[0]+";");return J0}};(function(){$1(F.CONSTANTS),$1(F.functions),F.initConstants(),F.error||(F.error=f),$.LOG_FNS={log:F.functions.log,log10:F.functions.log10}})();var i2={allSame:L,allNumeric:t1,arguments2Array:H1,arrayAddSlices:L0,arrayClone:F0,arrayMax:U0,arrayMin:h0,arrayEqual:l0,arrayUnique:D1,arrayGetVariables:P1,arraySum:i0,block:J1,build:c2.build,clearU:i1,comboSort:y0,compare:S0,convertToVector:e2,customError:d,customType:c0,decompose_fn:G0,each:A1,evaluate:v1,even:a1,evenFraction:U1,fillHoles:d1,firstObject:k,format:Y,generatePrimes:t2,getCoeffs:R1,getU:R0,importFunctions:v2,inBrackets:X,isArray:_,isExpression:w0,isFraction:l1,isInt:S,isMatrix:s0,isNegative:O,isNumericSymbol:n1,isPrime:q0,isReserved:E,isSymbol:r0,isVariableSymbol:m1,isVector:H0,keys:J,knownVariable:d0,nroots:_0,remove:T1,reserveNames:$1,range:q,round:b0,sameSign:O0,scientificToDecimal:u0,separate:k0,stringReplace:f0,text:W0,validateName:H,variables:I0,warn:x},b2={groups:T0,Symbol:G,Expression:K0,Frac:D0,Vector:z1,Matrix:w1,Parser:I1,Scientific:O1,Fraction:Z1,Math2:n0,LaTeX:B1,Utils:i2,PARSER:F,PARENTHESIS:q1,Settings:$,err:f,bigInt:_1,bigDec:N1,exceptions:x0},K1=function(t,p,M,I){var D=!1,t0=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(t);if(t0)return A2.setFunction(t0[1],t0[2].split(","),t0[3]);t instanceof K0&&(t=t.toString()),_(M)||(M=typeof M=="undefined"?[]:[M]),M.forEach(function(C0){if(C0==="numer"){D=!0;return}var j0=F.functions[M];j0&&j0[1]===1&&(t=`${C0}(${t})`)});var j=J1("PARSE2NUMBER",function(){return F.parse(t,p)},D||$.PARSE2NUMBER);return I?Z[I-1]=j:Z.push(j),new K0(j)};return K1.rpn=function(t){return F.tokenize(F.toRPN(t))},K1.convertToLaTeX=function(t,p){return F.toTeX(t,p)},K1.convertFromLaTeX=function(t){var p=B1.parse(F.tokenize(t));return new K0(F.parse(p))},K1.version=function(t){if(t)try{return b2[t].version}catch{return"No module named "+t+" found!"}return r},K1.getWarnings=function(){return l},K1.setConstant=function(t,p){if(H(t),!E(t))if(p==="delete"||p==="")delete F.CONSTANTS[t];else{if(isNaN(p))throw new R("Constant must be a number!");F.CONSTANTS[t]=p}return this},K1.getConstant=function(t){return String(F.constant[t])},K1.setFunction=E0,K1.getCore=function(){return b2},K1.getExpression=K1.getEquation=K0.getExpression,K1.reserved=function(t){return t?h:h.join(", ")},K1.clear=function(t,p){if(t==="all")Z=[];else if(t==="last")Z.pop();else if(t==="first")Z.shift();else{var M=t?t-1:Z.length;p===!0?Z[M]=void 0:T1(Z,M)}return this},K1.flush=function(){return this.clear("all"),this},K1.expressions=function(t,p,M){for(var I=t?{}:[],D=0;D<Z.length;D++){var t0=p?B1.latex(Z[D],M):W0(Z[D],M);t?I[D+1]=t0:I.push(t0)}return I},K1.register=function(t){var p=this.getCore();if(_(t))for(var M=0;M<t.length;M++)t&&this.register(t[M]);else if(t&&$.exclude.indexOf(t.name)===-1){if(t.dependencies){for(var M=0;M<t.dependencies.length;M++)if(!p[t.dependencies[M]])throw new Error(Y("{0} requires {1} to be loaded!",t.name,t.dependencies[M]))}var I=t.parent,D=t.build.call(p);if(I){p[I]||(p[t.parent]={});var t0=I==="nerdamer"?this:p[I];t0[t.name]=D}t.visible&&(F.functions[t.name]=[D,t.numargs])}},K1.validateName=H,K1.validVarName=function(t){try{return H(t),h.indexOf(t)===-1}catch{return!1}},K1.supported=function(){return J(F.functions)},K1.numEquations=K1.numExpressions=function(){return Z.length},K1.setVar=function(t,p){return H(t),t in F.CONSTANTS&&f("Cannot set value for constant "+t),p==="delete"||p===""?delete i[t]:i[t]=r0(p)?p:F.parse(p),this},K1.getVar=function(t){return i[t]},K1.clearVars=function(){return i={},this},K1.load=function(t){return t.call(this),this},K1.getVars=function(t,p){t=t||"text";var M={};if(t==="object")M=i;else for(var I in i)t==="latex"?M[I]=i[I].latex(p):t==="text"&&(M[I]=i[I].text(p));return M},K1.set=function(t,p){if(typeof t=="object")for(var M in t)K1.set(M,t[M]);var I=["SAFE"];I.indexOf(t)!==-1&&f("Cannot modify setting: "+t),t==="PRECISION"?(N1.set({precision:p}),$.PRECISION=p,p>21&&this.set("USE_BIG",!0)):t==="USE_LN"&&p===!0?($.LOG="LN",$.LOG10="log",F.functions.log=$.LOG_FNS.log10,F.functions.log[0]=function(D){return D.isConstant()?new G(Math.log10(D)):F.symfunction($.LOG10,[D])},F.functions.LN=$.LOG_FNS.log,delete F.functions.log10):$[t]=p},K1.get=function(t){return $[t]},K1.updateAPI=function(t){var p=function(I){return function(){for(var D=[].slice.call(arguments),t0=0;t0<D.length;t0++)D[t0]=F.parse(D[t0]);return new K0(J1("PARSE2NUMBER",function(){return F.callfunction(I,D)}))}};for(var M in F.functions)(!(M in K1)||t)&&(K1[M]=p(M))},K1.replaceFunction=function(t,p,M){var I=F.functions[t],D=typeof M=="undefined"?I[1]:M;F.functions[t]=[p.call(void 0,I[0],b2),D]},K1.setOperator=function(t,p){F.setOperator(t,p)},K1.getOperator=function(t){return F.getOperator(t)},K1.aliasOperator=function(t,p){F.aliasOperator(t,p)},K1.tree=function(t){return F.tree(F.toRPN(F.tokenize(t)))},K1.htmlTree=function(t,p){var M=this.tree(t);return`<div class="tree">
    <ul>
        <li>
`+M.toHTML(3,p)+`
        </li>
    </ul>
</div>`},K1.addPeeker=function(t,p){F.peekers[t]&&F.peekers[t].push(p)},K1.removePeeker=function(t,p){T1(F.peekers[t],p)},K1.parse=function(t){return String(t).split(";").map(function(p){return F.parse(p)})},K1.updateAPI(),K1}({bigInt:function(){var A=function(r){var F=1e7,_1=7,N1=9007199254740992,T0=A0(N1),X1=Math.log(N1);function N0(q,J){return typeof q=="undefined"?N0[0]:typeof J!="undefined"?+J==10?O0(q):_(q,J):O0(q)}function $(q,J){this.value=q,this.sign=J,this.isSmall=!1}$.prototype=Object.create(N0.prototype);function e0(q){this.value=q,this.sign=q<0,this.isSmall=!0}e0.prototype=Object.create(N0.prototype);function x1(q){return-N1<q&&q<N1}function A0(q){return q<1e7?[q]:q<1e14?[q%1e7,Math.floor(q/1e7)]:[q%1e7,Math.floor(q/1e7)%1e7,Math.floor(q/1e14)]}function f1(q){X0(q);var J=q.length;if(J<4&&u0(q,T0)<0)switch(J){case 0:return 0;case 1:return q[0];case 2:return q[0]+q[1]*F;default:return q[0]+(q[1]+q[2]*F)*F}return q}function X0(q){for(var J=q.length;q[--J]===0;);q.length=J+1}function o1(q){for(var J=new Array(q),k=-1;++k<q;)J[k]=0;return J}function $0(q){return q>0?Math.floor(q):Math.ceil(q)}function z0(q,J){var k=q.length,S0=J.length,E0=new Array(k),U0=0,h0=F,l0,F0;for(F0=0;F0<S0;F0++)l0=q[F0]+J[F0]+U0,U0=l0>=h0?1:0,E0[F0]=l0-U0*h0;for(;F0<k;)l0=q[F0]+U0,U0=l0===h0?1:0,E0[F0++]=l0-U0*h0;return U0>0&&E0.push(U0),E0}function p0(q,J){return q.length>=J.length?z0(q,J):z0(J,q)}function q1(q,J){var k=q.length,S0=new Array(k),E0=F,U0,h0;for(h0=0;h0<k;h0++)U0=q[h0]-E0+J,J=Math.floor(U0/E0),S0[h0]=U0-J*E0,J+=1;for(;J>0;)S0[h0++]=J%E0,J=Math.floor(J/E0);return S0}$.prototype.add=function(q){var J=O0(q);if(this.sign!==J.sign)return this.subtract(J.negate());var k=this.value,S0=J.value;return J.isSmall?new $(q1(k,Math.abs(S0)),this.sign):new $(p0(k,S0),this.sign)},$.prototype.plus=$.prototype.add,e0.prototype.add=function(q){var J=O0(q),k=this.value;if(k<0!==J.sign)return this.subtract(J.negate());var S0=J.value;if(J.isSmall){if(x1(k+S0))return new e0(k+S0);S0=A0(Math.abs(S0))}return new $(q1(S0,Math.abs(k)),k<0)},e0.prototype.plus=e0.prototype.add;function F1(q,J){var k=q.length,S0=J.length,E0=new Array(k),U0=0,h0=F,l0,F0;for(l0=0;l0<S0;l0++)F0=q[l0]-U0-J[l0],F0<0?(F0+=h0,U0=1):U0=0,E0[l0]=F0;for(l0=S0;l0<k;l0++){if(F0=q[l0]-U0,F0<0)F0+=h0;else{E0[l0++]=F0;break}E0[l0]=F0}for(;l0<k;l0++)E0[l0]=q[l0];return X0(E0),E0}function c1(q,J,k){var S0;return u0(q,J)>=0?S0=F1(q,J):(S0=F1(J,q),k=!k),S0=f1(S0),typeof S0=="number"?(k&&(S0=-S0),new e0(S0)):new $(S0,k)}function b1(q,J,k){var S0=q.length,E0=new Array(S0),U0=-J,h0=F,l0,F0;for(l0=0;l0<S0;l0++)F0=q[l0]+U0,U0=Math.floor(F0/h0),F0%=h0,E0[l0]=F0<0?F0+h0:F0;return E0=f1(E0),typeof E0=="number"?(k&&(E0=-E0),new e0(E0)):new $(E0,k)}$.prototype.subtract=function(q){var J=O0(q);if(this.sign!==J.sign)return this.add(J.negate());var k=this.value,S0=J.value;return J.isSmall?b1(k,Math.abs(S0),this.sign):c1(k,S0,this.sign)},$.prototype.minus=$.prototype.subtract,e0.prototype.subtract=function(q){var J=O0(q),k=this.value;if(k<0!==J.sign)return this.add(J.negate());var S0=J.value;return J.isSmall?new e0(k-S0):b1(S0,Math.abs(k),k>=0)},e0.prototype.minus=e0.prototype.subtract,$.prototype.negate=function(){return new $(this.value,!this.sign)},e0.prototype.negate=function(){var q=this.sign,J=new e0(-this.value);return J.sign=!q,J},$.prototype.abs=function(){return new $(this.value,!1)},e0.prototype.abs=function(){return new e0(Math.abs(this.value))};function Z0(q,J){var k=q.length,S0=J.length,E0=k+S0,U0=o1(E0),h0=F,l0,F0,L0,_0,y0;for(L0=0;L0<k;++L0){_0=q[L0];for(var G0=0;G0<S0;++G0)y0=J[G0],l0=_0*y0+U0[L0+G0],F0=Math.floor(l0/h0),U0[L0+G0]=l0-F0*h0,U0[L0+G0+1]+=F0}return X0(U0),U0}function Z(q,J){var k=q.length,S0=new Array(k),E0=F,U0=0,h0,l0;for(l0=0;l0<k;l0++)h0=q[l0]*J+U0,U0=Math.floor(h0/E0),S0[l0]=h0-U0*E0;for(;U0>0;)S0[l0++]=U0%E0,U0=Math.floor(U0/E0);return S0}function i(q,J){for(var k=[];J-- >0;)k.push(0);return k.concat(q)}function h(q,J){var k=Math.max(q.length,J.length);if(k<=30)return Z0(q,J);k=Math.ceil(k/2);var S0=q.slice(k),E0=q.slice(0,k),U0=J.slice(k),h0=J.slice(0,k),l0=h(E0,h0),F0=h(S0,U0),L0=h(p0(E0,S0),p0(h0,U0)),_0=p0(p0(l0,i(F1(F1(L0,l0),F0),k)),i(F0,2*k));return X0(_0),_0}function l(q,J){return-.012*q-.012*J+15e-6*q*J>0}$.prototype.multiply=function(q){var J=O0(q),k=this.value,S0=J.value,E0=this.sign!==J.sign,U0;if(J.isSmall){if(S0===0)return N0[0];if(S0===1)return this;if(S0===-1)return this.negate();if(U0=Math.abs(S0),U0<F)return new $(Z(k,U0),E0);S0=A0(U0)}return l(k.length,S0.length)?new $(h(k,S0),E0):new $(Z0(k,S0),E0)},$.prototype.times=$.prototype.multiply;function f(q,J,k){return q<F?new $(Z(J,q),k):new $(Z0(J,A0(q)),k)}e0.prototype._multiplyBySmall=function(q){return x1(q.value*this.value)?new e0(q.value*this.value):f(Math.abs(q.value),A0(Math.abs(this.value)),this.sign!==q.sign)},$.prototype._multiplyBySmall=function(q){return q.value===0?N0[0]:q.value===1?this:q.value===-1?this.negate():f(Math.abs(q.value),this.value,this.sign!==q.sign)},e0.prototype.multiply=function(q){return O0(q)._multiplyBySmall(this)},e0.prototype.times=e0.prototype.multiply;function d(q){var J=q.length,k=o1(J+J),S0=F,E0,U0,h0,l0,F0;for(h0=0;h0<J;h0++){l0=q[h0],U0=0-l0*l0;for(var L0=h0;L0<J;L0++)F0=q[L0],E0=2*(l0*F0)+k[h0+L0]+U0,U0=Math.floor(E0/S0),k[h0+L0]=E0-U0*S0;k[h0+J]=U0}return X0(k),k}$.prototype.square=function(){return new $(d(this.value),!1)},e0.prototype.square=function(){var q=this.value*this.value;return x1(q)?new e0(q):new $(d(A0(Math.abs(this.value))),!1)};function E(q,J){var k=q.length,S0=J.length,E0=F,U0=o1(J.length),h0=J[S0-1],l0=Math.ceil(E0/(2*h0)),F0=Z(q,l0),L0=Z(J,l0),_0,y0,G0,b0,R0,i1,A1;for(F0.length<=k&&F0.push(0),L0.push(0),h0=L0[S0-1],y0=k-S0;y0>=0;y0--){for(_0=E0-1,F0[y0+S0]!==h0&&(_0=Math.floor((F0[y0+S0]*E0+F0[y0+S0-1])/h0)),G0=0,b0=0,i1=L0.length,R0=0;R0<i1;R0++)G0+=_0*L0[R0],A1=Math.floor(G0/E0),b0+=F0[y0+R0]-(G0-A1*E0),G0=A1,b0<0?(F0[y0+R0]=b0+E0,b0=-1):(F0[y0+R0]=b0,b0=0);for(;b0!==0;){for(_0-=1,G0=0,R0=0;R0<i1;R0++)G0+=F0[y0+R0]-E0+L0[R0],G0<0?(F0[y0+R0]=G0+E0,G0=0):(F0[y0+R0]=G0,G0=1);b0+=G0}U0[y0]=_0}return F0=x(F0,l0)[0],[f1(U0),f1(F0)]}function L(q,J){for(var k=q.length,S0=J.length,E0=[],U0=[],h0=F,l0,F0,L0,_0,y0;k;){if(U0.unshift(q[--k]),X0(U0),u0(U0,J)<0){E0.push(0);continue}F0=U0.length,L0=U0[F0-1]*h0+U0[F0-2],_0=J[S0-1]*h0+J[S0-2],F0>S0&&(L0=(L0+1)*h0),l0=Math.ceil(L0/_0);do{if(y0=Z(J,l0),u0(y0,U0)<=0)break;l0--}while(l0);E0.push(l0),U0=F1(U0,y0)}return E0.reverse(),[f1(E0),f1(U0)]}function x(q,J){var k=q.length,S0=o1(k),E0=F,U0,h0,l0,F0;for(l0=0,U0=k-1;U0>=0;--U0)F0=l0*E0+q[U0],h0=$0(F0/J),l0=F0-h0*J,S0[U0]=h0|0;return[S0,l0|0]}function H(q,J){var k,S0=O0(J),E0=q.value,U0=S0.value,h0;if(U0===0)throw new Error("Cannot divide by zero");if(q.isSmall)return S0.isSmall?[new e0($0(E0/U0)),new e0(E0%U0)]:[N0[0],q];if(S0.isSmall){if(U0===1)return[q,N0[0]];if(U0==-1)return[q.negate(),N0[0]];var l0=Math.abs(U0);if(l0<F){k=x(E0,l0),h0=f1(k[0]);var F0=k[1];return q.sign&&(F0=-F0),typeof h0=="number"?(q.sign!==S0.sign&&(h0=-h0),[new e0(h0),new e0(F0)]):[new $(h0,q.sign!==S0.sign),new e0(F0)]}U0=A0(l0)}var L0=u0(E0,U0);if(L0===-1)return[N0[0],q];if(L0===0)return[N0[q.sign===S0.sign?1:-1],N0[0]];E0.length+U0.length<=200?k=E(E0,U0):k=L(E0,U0),h0=k[0];var _0=q.sign!==S0.sign,y0=k[1],G0=q.sign;return typeof h0=="number"?(_0&&(h0=-h0),h0=new e0(h0)):h0=new $(h0,_0),typeof y0=="number"?(G0&&(y0=-y0),y0=new e0(y0)):y0=new $(y0,G0),[h0,y0]}$.prototype.divmod=function(q){var J=H(this,q);return{quotient:J[0],remainder:J[1]}},e0.prototype.divmod=$.prototype.divmod,$.prototype.divide=function(q){return H(this,q)[0]},e0.prototype.over=e0.prototype.divide=$.prototype.over=$.prototype.divide,$.prototype.mod=function(q){return H(this,q)[1]},e0.prototype.remainder=e0.prototype.mod=$.prototype.remainder=$.prototype.mod,$.prototype.pow=function(q){var J=O0(q),k=this.value,S0=J.value,E0,U0,h0;if(S0===0)return N0[1];if(k===0)return N0[0];if(k===1)return N0[1];if(k===-1)return J.isEven()?N0[1]:N0[-1];if(J.sign)return N0[0];if(!J.isSmall)throw new Error("The exponent "+J.toString()+" is too large.");if(this.isSmall&&x1(E0=Math.pow(k,S0)))return new e0($0(E0));for(U0=this,h0=N0[1];S0&!0&&(h0=h0.times(U0),--S0),S0!==0;)S0/=2,U0=U0.square();return h0},e0.prototype.pow=$.prototype.pow,$.prototype.modPow=function(q,J){if(q=O0(q),J=O0(J),J.isZero())throw new Error("Cannot take modPow with modulus 0");for(var k=N0[1],S0=this.mod(J);q.isPositive();){if(S0.isZero())return N0[0];q.isOdd()&&(k=k.multiply(S0).mod(J)),q=q.divide(2),S0=S0.square().mod(J)}return k},e0.prototype.modPow=$.prototype.modPow;function u0(q,J){if(q.length!==J.length)return q.length>J.length?1:-1;for(var k=q.length-1;k>=0;k--)if(q[k]!==J[k])return q[k]>J[k]?1:-1;return 0}$.prototype.compareAbs=function(q){var J=O0(q),k=this.value,S0=J.value;return J.isSmall?1:u0(k,S0)},e0.prototype.compareAbs=function(q){var J=O0(q),k=Math.abs(this.value),S0=J.value;return J.isSmall?(S0=Math.abs(S0),k===S0?0:k>S0?1:-1):-1},$.prototype.compare=function(q){if(q===1/0)return-1;if(q===-1/0)return 1;var J=O0(q),k=this.value,S0=J.value;return this.sign!==J.sign?J.sign?1:-1:J.isSmall?this.sign?-1:1:u0(k,S0)*(this.sign?-1:1)},$.prototype.compareTo=$.prototype.compare,e0.prototype.compare=function(q){if(q===1/0)return-1;if(q===-1/0)return 1;var J=O0(q),k=this.value,S0=J.value;return J.isSmall?k==S0?0:k>S0?1:-1:k<0!==J.sign?k<0?-1:1:k<0?1:-1},e0.prototype.compareTo=e0.prototype.compare,$.prototype.equals=function(q){return this.compare(q)===0},e0.prototype.eq=e0.prototype.equals=$.prototype.eq=$.prototype.equals,$.prototype.notEquals=function(q){return this.compare(q)!==0},e0.prototype.neq=e0.prototype.notEquals=$.prototype.neq=$.prototype.notEquals,$.prototype.greater=function(q){return this.compare(q)>0},e0.prototype.gt=e0.prototype.greater=$.prototype.gt=$.prototype.greater,$.prototype.lesser=function(q){return this.compare(q)<0},e0.prototype.lt=e0.prototype.lesser=$.prototype.lt=$.prototype.lesser,$.prototype.greaterOrEquals=function(q){return this.compare(q)>=0},e0.prototype.geq=e0.prototype.greaterOrEquals=$.prototype.geq=$.prototype.greaterOrEquals,$.prototype.lesserOrEquals=function(q){return this.compare(q)<=0},e0.prototype.leq=e0.prototype.lesserOrEquals=$.prototype.leq=$.prototype.lesserOrEquals,$.prototype.isEven=function(){return(this.value[0]&1)===0},e0.prototype.isEven=function(){return(this.value&1)===0},$.prototype.isOdd=function(){return(this.value[0]&1)===1},e0.prototype.isOdd=function(){return(this.value&1)===1},$.prototype.isPositive=function(){return!this.sign},e0.prototype.isPositive=function(){return this.value>0},$.prototype.isNegative=function(){return this.sign},e0.prototype.isNegative=function(){return this.value<0},$.prototype.isUnit=function(){return!1},e0.prototype.isUnit=function(){return Math.abs(this.value)===1},$.prototype.isZero=function(){return!1},e0.prototype.isZero=function(){return this.value===0},$.prototype.isDivisibleBy=function(q){var J=O0(q),k=J.value;return k===0?!1:k===1?!0:k===2?this.isEven():this.mod(J).equals(N0[0])},e0.prototype.isDivisibleBy=$.prototype.isDivisibleBy;function q0(q){var J=q.abs();if(J.isUnit())return!1;if(J.equals(2)||J.equals(3)||J.equals(5))return!0;if(J.isEven()||J.isDivisibleBy(3)||J.isDivisibleBy(5))return!1;if(J.lesser(49))return!0}function d0(q,J){for(var k=q.prev(),S0=k,E0=0,U0,h0,l0;S0.isEven();)S0=S0.divide(2),E0++;e:for(h0=0;h0<J.length;h0++)if(!q.lesser(J[h0])&&(l0=A(J[h0]).modPow(S0,q),!(l0.equals(N0[1])||l0.equals(k)))){for(U0=E0-1;U0!=0;U0--){if(l0=l0.square().mod(q),l0.isUnit())return!1;if(l0.equals(k))continue e}return!1}return!0}$.prototype.isPrime=function(q){var J=q0(this);if(J!==r)return J;var k=this.abs(),S0=k.bitLength();if(S0<=64)return d0(k,[2,325,9375,28178,450775,9780504,1795265022]);for(var E0=Math.log(2)*S0,U0=Math.ceil(q===!0?2*Math.pow(E0,2):E0),h0=[],l0=0;l0<U0;l0++)h0.push(A(l0+2));return d0(k,h0)},e0.prototype.isPrime=$.prototype.isPrime,$.prototype.isProbablePrime=function(q){var J=q0(this);if(J!==r)return J;for(var k=this.abs(),S0=q===r?5:q,E0=[],U0=0;U0<S0;U0++)E0.push(A.randBetween(2,k.minus(2)));return d0(k,E0)},e0.prototype.isProbablePrime=$.prototype.isProbablePrime,$.prototype.modInv=function(q){for(var J=A.zero,k=A.one,S0=O0(q),E0=this.abs(),U0,h0,l0;!E0.equals(A.zero);)U0=S0.divide(E0),h0=J,l0=S0,J=k,S0=E0,k=h0.subtract(U0.multiply(k)),E0=l0.subtract(U0.multiply(E0));if(!S0.equals(1))throw new Error(this.toString()+" and "+q.toString()+" are not co-prime");return J.compare(0)===-1&&(J=J.add(q)),this.isNegative()?J.negate():J},e0.prototype.modInv=$.prototype.modInv,$.prototype.next=function(){var q=this.value;return this.sign?b1(q,1,this.sign):new $(q1(q,1),this.sign)},e0.prototype.next=function(){var q=this.value;return q+1<N1?new e0(q+1):new $(T0,!1)},$.prototype.prev=function(){var q=this.value;return this.sign?new $(q1(q,1),!0):b1(q,1,this.sign)},e0.prototype.prev=function(){var q=this.value;return q-1>-N1?new e0(q-1):new $(T0,!0)};for(var Q0=[1];2*Q0[Q0.length-1]<=F;)Q0.push(2*Q0[Q0.length-1]);var t1=Q0.length,l1=Q0[t1-1];function r0(q){return(typeof q=="number"||typeof q=="string")&&+Math.abs(q)<=F||q instanceof $&&q.value.length<=1}$.prototype.shiftLeft=function(q){if(!r0(q))throw new Error(String(q)+" is too large for shifting.");if(q=+q,q<0)return this.shiftRight(-q);var J=this;if(J.isZero())return J;for(;q>=t1;)J=J.multiply(l1),q-=t1-1;return J.multiply(Q0[q])},e0.prototype.shiftLeft=$.prototype.shiftLeft,$.prototype.shiftRight=function(q){var J;if(!r0(q))throw new Error(String(q)+" is too large for shifting.");if(q=+q,q<0)return this.shiftLeft(-q);for(var k=this;q>=t1;){if(k.isZero()||k.isNegative()&&k.isUnit())return k;J=H(k,l1),k=J[1].isNegative()?J[0].prev():J[0],q-=t1-1}return J=H(k,Q0[q]),J[1].isNegative()?J[0].prev():J[0]},e0.prototype.shiftRight=$.prototype.shiftRight;function w0(q,J,k){J=O0(J);for(var S0=q.isNegative(),E0=J.isNegative(),U0=S0?q.not():q,h0=E0?J.not():J,l0=0,F0=0,L0=null,_0=null,y0=[];!U0.isZero()||!h0.isZero();)L0=H(U0,l1),l0=L0[1].toJSNumber(),S0&&(l0=l1-1-l0),_0=H(h0,l1),F0=_0[1].toJSNumber(),E0&&(F0=l1-1-F0),U0=L0[0],h0=_0[0],y0.push(k(l0,F0));for(var G0=k(S0?1:0,E0?1:0)!==0?A(-1):A(0),b0=y0.length-1;b0>=0;b0-=1)G0=G0.multiply(l1).add(A(y0[b0]));return G0}$.prototype.not=function(){return this.negate().prev()},e0.prototype.not=$.prototype.not,$.prototype.and=function(q){return w0(this,q,function(J,k){return J&k})},e0.prototype.and=$.prototype.and,$.prototype.or=function(q){return w0(this,q,function(J,k){return J|k})},e0.prototype.or=$.prototype.or,$.prototype.xor=function(q){return w0(this,q,function(J,k){return J^k})},e0.prototype.xor=$.prototype.xor;var I0=1<<30,i0=(F&-F)*(F&-F)|I0;function k0(q){var J=q.value,k=typeof J=="number"?J|I0:J[0]+J[1]*F|i0;return k&-k}function d1(q,J){if(J.compareTo(q)<=0){var k=d1(q,J.square(J)),S0=k.p,E0=k.e,U0=S0.multiply(J);return U0.compareTo(q)<=0?{p:U0,e:E0*2+1}:{p:S0,e:E0*2}}return{p:A(1),e:0}}$.prototype.bitLength=function(){var q=this;return q.compareTo(A(0))<0&&(q=q.negate().subtract(A(1))),q.compareTo(A(0))===0?A(0):A(d1(q,A(2)).e).add(A(1))},e0.prototype.bitLength=$.prototype.bitLength;function H0(q,J){return q=O0(q),J=O0(J),q.greater(J)?q:J}function s0(q,J){return q=O0(q),J=O0(J),q.lesser(J)?q:J}function M0(q,J){if(q=O0(q).abs(),J=O0(J).abs(),q.equals(J))return q;if(q.isZero())return J;if(J.isZero())return q;for(var k=N0[1],S0,E0;q.isEven()&&J.isEven();)S0=Math.min(k0(q),k0(J)),q=q.divide(S0),J=J.divide(S0),k=k.multiply(S0);for(;q.isEven();)q=q.divide(k0(q));do{for(;J.isEven();)J=J.divide(k0(J));q.greater(J)&&(E0=J,J=q,q=E0),J=J.subtract(q)}while(!J.isZero());return k.isUnit()?q:q.multiply(k)}function n1(q,J){return q=O0(q).abs(),J=O0(J).abs(),q.divide(M0(q,J)).multiply(J)}function m1(q,J){q=O0(q),J=O0(J);var k=s0(q,J),S0=H0(q,J),E0=S0.subtract(k).add(1);if(E0.isSmall)return k.add(Math.floor(Math.random()*E0));for(var U0=E0.value.length-1,h0=[],l0=!0,F0=U0;F0>=0;F0--){var L0=l0?E0.value[F0]:F,_0=$0(Math.random()*L0);h0.unshift(_0),_0<L0&&(l0=!1)}return h0=f1(h0),k.add(typeof h0=="number"?new e0(h0):new $(h0,!1))}var _=function(q,J){for(var k=q.length,S0,E0=Math.abs(J),S0=0;S0<k;S0++){var U0=q[S0].toLowerCase();if(U0!=="-"&&/[a-z0-9]/.test(U0)){if(/[0-9]/.test(U0)&&+U0>=E0){if(U0==="1"&&E0===1)continue;throw new Error(U0+" is not a valid digit in base "+J+".")}else if(U0.charCodeAt(0)-87>=E0)throw new Error(U0+" is not a valid digit in base "+J+".")}}if(2<=J&&J<=36&&k<=X1/Math.log(J)){var h0=parseInt(q,J);if(isNaN(h0))throw new Error(U0+" is not a valid digit in base "+J+".");return new e0(parseInt(q,J))}J=O0(J);var l0=[],F0=q[0]==="-";for(S0=F0?1:0;S0<q.length;S0++){var U0=q[S0].toLowerCase(),L0=U0.charCodeAt(0);if(48<=L0&&L0<=57)l0.push(O0(U0));else if(97<=L0&&L0<=122)l0.push(O0(U0.charCodeAt(0)-87));else if(U0==="<"){var _0=S0;do S0++;while(q[S0]!==">");l0.push(O0(q.slice(_0+1,S0)))}else throw new Error(U0+" is not a valid character")}return S(l0,J,F0)};function S(q,J,k){var S0=N0[0],E0=N0[1],U0;for(U0=q.length-1;U0>=0;U0--)S0=S0.add(q[U0].times(E0)),E0=E0.times(J);return k?S0.negate():S0}function O(q){return q<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(q):"<"+q+">"}function W(q,J){if(J=A(J),J.isZero()){if(q.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(J.equals(-1)){if(q.isZero())return{value:[0],isNegative:!1};if(q.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-q)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var k=Array.apply(null,Array(+q-1)).map(Array.prototype.valueOf,[0,1]);return k.unshift([1]),{value:[].concat.apply([],k),isNegative:!1}}var S0=!1;if(q.isNegative()&&J.isPositive()&&(S0=!0,q=q.abs()),J.equals(1))return q.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+q)).map(Number.prototype.valueOf,1),isNegative:S0};for(var E0=[],U0=q,h0;U0.isNegative()||U0.compareAbs(J)>=0;){h0=U0.divmod(J),U0=h0.quotient;var l0=h0.remainder;l0.isNegative()&&(l0=J.minus(l0).abs(),U0=U0.next()),E0.push(l0.toJSNumber())}return E0.push(U0.toJSNumber()),{value:E0.reverse(),isNegative:S0}}function X(q,J){var k=W(q,J);return(k.isNegative?"-":"")+k.value.map(O).join("")}$.prototype.toArray=function(q){return W(this,q)},e0.prototype.toArray=function(q){return W(this,q)},$.prototype.toString=function(q){if(q===r&&(q=10),q!==10)return X(this,q);for(var J=this.value,k=J.length,S0=String(J[--k]),E0="0000000",U0;--k>=0;)U0=String(J[k]),S0+=E0.slice(U0.length)+U0;var h0=this.sign?"-":"";return h0+S0},e0.prototype.toString=function(q){return q===r&&(q=10),q!=10?X(this,q):String(this.value)},$.prototype.toJSON=e0.prototype.toJSON=function(){return this.toString()},$.prototype.valueOf=function(){return parseInt(this.toString(),10)},$.prototype.toJSNumber=$.prototype.valueOf,e0.prototype.valueOf=function(){return this.value},e0.prototype.toJSNumber=e0.prototype.valueOf;function f0(q){if(x1(+q)){var J=+q;if(J===$0(J))return new e0(J);throw new Error("Invalid integer: "+q)}var k=q[0]==="-";k&&(q=q.slice(1));var S0=q.split(/e/i);if(S0.length>2)throw new Error("Invalid integer: "+S0.join("e"));if(S0.length===2){var E0=S0[1];if(E0[0]==="+"&&(E0=E0.slice(1)),E0=+E0,E0!==$0(E0)||!x1(E0))throw new Error("Invalid integer: "+E0+" is not a valid exponent.");var U0=S0[0],h0=U0.indexOf(".");if(h0>=0&&(E0-=U0.length-h0-1,U0=U0.slice(0,h0)+U0.slice(h0+1)),E0<0)throw new Error("Cannot include negative exponent part for integers");U0+=new Array(E0+1).join("0"),q=U0}var l0=/^([0-9][0-9]*)$/.test(q);if(!l0)throw new Error("Invalid integer: "+q);for(var F0=[],L0=q.length,_0=_1,y0=L0-_0;L0>0;)F0.push(+q.slice(y0,L0)),y0-=_0,y0<0&&(y0=0),L0-=_0;return X0(F0),new $(F0,k)}function c0(q){if(x1(q)){if(q!==$0(q))throw new Error(q+" is not an integer.");return new e0(q)}return f0(q.toString())}function O0(q){return typeof q=="number"?c0(q):typeof q=="string"?f0(q):q}for(var Y=0;Y<1e3;Y++)N0[Y]=new e0(Y),Y>0&&(N0[-Y]=new e0(-Y));return N0.one=N0[1],N0.zero=N0[0],N0.minusOne=N0[-1],N0.max=H0,N0.min=s0,N0.gcd=M0,N0.lcm=n1,N0.isInstance=function(q){return q instanceof $||q instanceof e0},N0.randBetween=m1,N0.fromArray=function(q,J,k){return S(q.map(O0),O0(J||10),k)},N0}();return W2.hasOwnProperty("exports")&&(W2.exports=A),A}(),bigDec:function(A){var r,F,_1,N1,T0=9e15,X1=1e9,N0="0123456789abcdef",$="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",e0="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",x1={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-T0,maxE:T0,crypto:!1},A0=!0,f1="[DecimalError] ",X0=f1+"Invalid argument: ",o1=f1+"Precision limit exceeded",$0=f1+"crypto unavailable",z0=Math.floor,p0=Math.pow,q1=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,F1=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,c1=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,b1=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Z0=1e7,Z=7,i=$.length-1,h=e0.length-1,l={name:"[object Decimal]"};function f(C){var T,a,w,y=C.length-1,v="",U=C[0];if(y>0){for(v+=U,T=1;T<y;T++)w=C[T]+"",(a=Z-w.length)&&(v+=l1(a)),v+=w;U=C[T],(a=Z-(w=U+"").length)&&(v+=l1(a))}else if(U===0)return"0";for(;U%10==0;)U/=10;return v+U}function d(C,T,a){if(C!==~~C||C<T||C>a)throw Error(X0+C)}function E(C,T,a,w){var y,v,U,b;for(v=C[0];v>=10;v/=10)--T;return--T<0?(T+=Z,y=0):(y=Math.ceil((T+1)/Z),T%=Z),v=p0(10,Z-T),b=C[y]%v|0,w==null?T<3?(T==0?b=b/100|0:T==1&&(b=b/10|0),U=a<4&&b==99999||a>3&&b==49999||b==5e4||b==0):U=(a<4&&b+1==v||a>3&&b+1==v/2)&&(C[y+1]/v/100|0)==p0(10,T-2)-1||(b==v/2||b==0)&&(C[y+1]/v/100|0)==0:T<4?(T==0?b=b/1e3|0:T==1?b=b/100|0:T==2&&(b=b/10|0),U=(w||a<4)&&b==9999||!w&&a>3&&b==4999):U=((w||a<4)&&b+1==v||!w&&a>3&&b+1==v/2)&&(C[y+1]/v/1e3|0)==p0(10,T-3)-1,U}function L(C,T,a){for(var w,y,v=[0],U=0,b=C.length;U<b;){for(y=v.length;y--;)v[y]*=T;for(v[0]+=N0.indexOf(C.charAt(U++)),w=0;w<v.length;w++)v[w]>a-1&&(v[w+1]===void 0&&(v[w+1]=0),v[w+1]+=v[w]/a|0,v[w]%=a)}return v.reverse()}l.absoluteValue=l.abs=function(){var C=new this.constructor(this);return C.s<0&&(C.s=1),H(C)},l.ceil=function(){return H(new this.constructor(this),this.e+1,2)},l.comparedTo=l.cmp=function(C){var T,a,w,y,v=this,U=v.d,b=(C=new v.constructor(C)).d,R=v.s,z=C.s;if(!U||!b)return R&&z?R!==z?R:U===b?0:!U^R<0?1:-1:NaN;if(!U[0]||!b[0])return U[0]?R:b[0]?-z:0;if(R!==z)return R;if(v.e!==C.e)return v.e>C.e^R<0?1:-1;for(T=0,a=(w=U.length)<(y=b.length)?w:y;T<a;++T)if(U[T]!==b[T])return U[T]>b[T]^R<0?1:-1;return w===y?0:w>y^R<0?1:-1},l.cosine=l.cos=function(){var C,T,a=this,w=a.constructor;return a.d?a.d[0]?(C=w.precision,T=w.rounding,w.precision=C+Math.max(a.e,a.sd())+Z,w.rounding=1,a=function(y,v){var U,b,R=v.d.length;R<32?(U=Math.ceil(R/3),b=(1/n1(4,U)).toString()):(U=16,b="2.3283064365386962890625e-10"),y.precision+=U,v=M0(y,1,v.times(b),new y(1));for(var z=U;z--;){var Q=v.times(v);v=Q.times(Q).minus(Q).times(8).plus(1)}return y.precision-=U,v}(w,m1(w,a)),w.precision=C,w.rounding=T,H(N1==2||N1==3?a.neg():a,C,T,!0)):new w(1):new w(NaN)},l.cubeRoot=l.cbrt=function(){var C,T,a,w,y,v,U,b,R,z,Q=this,a0=Q.constructor;if(!Q.isFinite()||Q.isZero())return new a0(Q);for(A0=!1,(v=Q.s*p0(Q.s*Q,.3333333333333333))&&Math.abs(v)!=1/0?w=new a0(v.toString()):(a=f(Q.d),(v=((C=Q.e)-a.length+1)%3)&&(a+=v==1||v==-2?"0":"00"),v=p0(a,.3333333333333333),C=z0((C+1)/3)-(C%3==(C<0?-1:2)),(w=new a0(a=v==1/0?"5e"+C:(a=v.toExponential()).slice(0,a.indexOf("e")+1)+C)).s=Q.s),U=(C=a0.precision)+3;;)if(z=(R=(b=w).times(b).times(b)).plus(Q),w=x(z.plus(Q).times(b),z.plus(R),U+2,1),f(b.d).slice(0,U)===(a=f(w.d)).slice(0,U)){if((a=a.slice(U-3,U+1))!="9999"&&(y||a!="4999")){+a&&(+a.slice(1)||a.charAt(0)!="5")||(H(w,C+1,1),T=!w.times(w).times(w).eq(Q));break}if(!y&&(H(b,C+1,0),b.times(b).times(b).eq(Q))){w=b;break}U+=4,y=1}return A0=!0,H(w,C,a0.rounding,T)},l.decimalPlaces=l.dp=function(){var C,T=this.d,a=NaN;if(T){if(a=((C=T.length-1)-z0(this.e/Z))*Z,C=T[C])for(;C%10==0;C/=10)a--;a<0&&(a=0)}return a},l.dividedBy=l.div=function(C){return x(this,new this.constructor(C))},l.dividedToIntegerBy=l.divToInt=function(C){var T=this.constructor;return H(x(this,new T(C),0,1,1),T.precision,T.rounding)},l.equals=l.eq=function(C){return this.cmp(C)===0},l.floor=function(){return H(new this.constructor(this),this.e+1,3)},l.greaterThan=l.gt=function(C){return this.cmp(C)>0},l.greaterThanOrEqualTo=l.gte=function(C){var T=this.cmp(C);return T==1||T===0},l.hyperbolicCosine=l.cosh=function(){var C,T,a,w,y,v=this,U=v.constructor,b=new U(1);if(!v.isFinite())return new U(v.s?1/0:NaN);if(v.isZero())return b;a=U.precision,w=U.rounding,U.precision=a+Math.max(v.e,v.sd())+4,U.rounding=1,(y=v.d.length)<32?T=(1/n1(4,C=Math.ceil(y/3))).toString():(C=16,T="2.3283064365386962890625e-10"),v=M0(U,1,v.times(T),new U(1),!0);for(var R,z=C,Q=new U(8);z--;)R=v.times(v),v=b.minus(R.times(Q.minus(R.times(Q))));return H(v,U.precision=a,U.rounding=w,!0)},l.hyperbolicSine=l.sinh=function(){var C,T,a,w,y=this,v=y.constructor;if(!y.isFinite()||y.isZero())return new v(y);if(T=v.precision,a=v.rounding,v.precision=T+Math.max(y.e,y.sd())+4,v.rounding=1,(w=y.d.length)<3)y=M0(v,2,y,y,!0);else{C=(C=1.4*Math.sqrt(w))>16?16:0|C,y=M0(v,2,y=y.times(1/n1(5,C)),y,!0);for(var U,b=new v(5),R=new v(16),z=new v(20);C--;)U=y.times(y),y=y.times(b.plus(U.times(R.times(U).plus(z))))}return v.precision=T,v.rounding=a,H(y,T,a,!0)},l.hyperbolicTangent=l.tanh=function(){var C,T,a=this,w=a.constructor;return a.isFinite()?a.isZero()?new w(a):(C=w.precision,T=w.rounding,w.precision=C+7,w.rounding=1,x(a.sinh(),a.cosh(),w.precision=C,w.rounding=T)):new w(a.s)},l.inverseCosine=l.acos=function(){var C,T=this,a=T.constructor,w=T.abs().cmp(1),y=a.precision,v=a.rounding;return w!==-1?w===0?T.isNeg()?Q0(a,y,v):new a(0):new a(NaN):T.isZero()?Q0(a,y+4,v).times(.5):(a.precision=y+6,a.rounding=1,T=T.asin(),C=Q0(a,y+4,v).times(.5),a.precision=y,a.rounding=v,C.minus(T))},l.inverseHyperbolicCosine=l.acosh=function(){var C,T,a=this,w=a.constructor;return a.lte(1)?new w(a.eq(1)?0:NaN):a.isFinite()?(C=w.precision,T=w.rounding,w.precision=C+Math.max(Math.abs(a.e),a.sd())+4,w.rounding=1,A0=!1,a=a.times(a).minus(1).sqrt().plus(a),A0=!0,w.precision=C,w.rounding=T,a.ln()):new w(a)},l.inverseHyperbolicSine=l.asinh=function(){var C,T,a=this,w=a.constructor;return!a.isFinite()||a.isZero()?new w(a):(C=w.precision,T=w.rounding,w.precision=C+2*Math.max(Math.abs(a.e),a.sd())+6,w.rounding=1,A0=!1,a=a.times(a).plus(1).sqrt().plus(a),A0=!0,w.precision=C,w.rounding=T,a.ln())},l.inverseHyperbolicTangent=l.atanh=function(){var C,T,a,w,y=this,v=y.constructor;return y.isFinite()?y.e>=0?new v(y.abs().eq(1)?y.s/0:y.isZero()?y:NaN):(C=v.precision,T=v.rounding,w=y.sd(),Math.max(w,C)<2*-y.e-1?H(new v(y),C,T,!0):(v.precision=a=w-y.e,y=x(y.plus(1),new v(1).minus(y),a+C,1),v.precision=C+4,v.rounding=1,y=y.ln(),v.precision=C,v.rounding=T,y.times(.5))):new v(NaN)},l.inverseSine=l.asin=function(){var C,T,a,w,y=this,v=y.constructor;return y.isZero()?new v(y):(T=y.abs().cmp(1),a=v.precision,w=v.rounding,T!==-1?T===0?((C=Q0(v,a+4,w).times(.5)).s=y.s,C):new v(NaN):(v.precision=a+6,v.rounding=1,y=y.div(new v(1).minus(y.times(y)).sqrt().plus(1)).atan(),v.precision=a,v.rounding=w,y.times(2)))},l.inverseTangent=l.atan=function(){var C,T,a,w,y,v,U,b,R,z=this,Q=z.constructor,a0=Q.precision,g0=Q.rounding;if(z.isFinite()){if(z.isZero())return new Q(z);if(z.abs().eq(1)&&a0+4<=h)return(U=Q0(Q,a0+4,g0).times(.25)).s=z.s,U}else{if(!z.s)return new Q(NaN);if(a0+4<=h)return(U=Q0(Q,a0+4,g0).times(.5)).s=z.s,U}for(Q.precision=b=a0+10,Q.rounding=1,C=a=Math.min(28,b/Z+2|0);C;--C)z=z.div(z.times(z).plus(1).sqrt().plus(1));for(A0=!1,T=Math.ceil(b/Z),w=1,R=z.times(z),U=new Q(z),y=z;C!==-1;)if(y=y.times(R),v=U.minus(y.div(w+=2)),y=y.times(R),(U=v.plus(y.div(w+=2))).d[T]!==void 0)for(C=T;U.d[C]===v.d[C]&&C--;);return a&&(U=U.times(2<<a-1)),A0=!0,H(U,Q.precision=a0,Q.rounding=g0,!0)},l.isFinite=function(){return!!this.d},l.isInteger=l.isInt=function(){return!!this.d&&z0(this.e/Z)>this.d.length-2},l.isNaN=function(){return!this.s},l.isNegative=l.isNeg=function(){return this.s<0},l.isPositive=l.isPos=function(){return this.s>0},l.isZero=function(){return!!this.d&&this.d[0]===0},l.lessThan=l.lt=function(C){return this.cmp(C)<0},l.lessThanOrEqualTo=l.lte=function(C){return this.cmp(C)<1},l.logarithm=l.log=function(C){var T,a,w,y,v,U,b,R,z=this.constructor,Q=z.precision,a0=z.rounding;if(C==null)C=new z(10),T=!0;else{if(a=(C=new z(C)).d,C.s<0||!a||!a[0]||C.eq(1))return new z(NaN);T=C.eq(10)}if(a=this.d,this.s<0||!a||!a[0]||this.eq(1))return new z(a&&!a[0]?-1/0:this.s!=1?NaN:a?0:1/0);if(T)if(a.length>1)v=!0;else{for(y=a[0];y%10==0;)y/=10;v=y!==1}if(A0=!1,U=k0(this,b=Q+5),w=T?d0(z,b+10):k0(C,b),E((R=x(U,w,b,1)).d,y=Q,a0))do if(U=k0(this,b+=10),w=T?d0(z,b+10):k0(C,b),R=x(U,w,b,1),!v){+f(R.d).slice(y+1,y+15)+1==1e14&&(R=H(R,Q+1,0));break}while(E(R.d,y+=10,a0));return A0=!0,H(R,Q,a0)},l.minus=l.sub=function(C){var T,a,w,y,v,U,b,R,z,Q,a0,g0,e=this,u=e.constructor;if(C=new u(C),!e.d||!C.d)return e.s&&C.s?e.d?C.s=-C.s:C=new u(C.d||e.s!==C.s?e:NaN):C=new u(NaN),C;if(e.s!=C.s)return C.s=-C.s,e.plus(C);if(z=e.d,g0=C.d,b=u.precision,R=u.rounding,!z[0]||!g0[0]){if(g0[0])C.s=-C.s;else{if(!z[0])return new u(R===3?-0:0);C=new u(e)}return A0?H(C,b,R):C}if(a=z0(C.e/Z),Q=z0(e.e/Z),z=z.slice(),v=Q-a){for((a0=v<0)?(T=z,v=-v,U=g0.length):(T=g0,a=Q,U=z.length),v>(w=Math.max(Math.ceil(b/Z),U)+2)&&(v=w,T.length=1),T.reverse(),w=v;w--;)T.push(0);T.reverse()}else{for((a0=(w=z.length)<(U=g0.length))&&(U=w),w=0;w<U;w++)if(z[w]!=g0[w]){a0=z[w]<g0[w];break}v=0}for(a0&&(T=z,z=g0,g0=T,C.s=-C.s),U=z.length,w=g0.length-U;w>0;--w)z[U++]=0;for(w=g0.length;w>v;){if(z[--w]<g0[w]){for(y=w;y&&z[--y]===0;)z[y]=Z0-1;--z[y],z[w]+=Z0}z[w]-=g0[w]}for(;z[--U]===0;)z.pop();for(;z[0]===0;z.shift())--a;return z[0]?(C.d=z,C.e=q0(z,a),A0?H(C,b,R):C):new u(R===3?-0:0)},l.modulo=l.mod=function(C){var T,a=this,w=a.constructor;return C=new w(C),!a.d||!C.s||C.d&&!C.d[0]?new w(NaN):!C.d||a.d&&!a.d[0]?H(new w(a),w.precision,w.rounding):(A0=!1,w.modulo==9?(T=x(a,C.abs(),0,3,1)).s*=C.s:T=x(a,C,0,w.modulo,1),T=T.times(C),A0=!0,a.minus(T))},l.naturalExponential=l.exp=function(){return i0(this)},l.naturalLogarithm=l.ln=function(){return k0(this)},l.negated=l.neg=function(){var C=new this.constructor(this);return C.s=-C.s,H(C)},l.plus=l.add=function(C){var T,a,w,y,v,U,b,R,z,Q,a0=this,g0=a0.constructor;if(C=new g0(C),!a0.d||!C.d)return a0.s&&C.s?a0.d||(C=new g0(C.d||a0.s===C.s?a0:NaN)):C=new g0(NaN),C;if(a0.s!=C.s)return C.s=-C.s,a0.minus(C);if(z=a0.d,Q=C.d,b=g0.precision,R=g0.rounding,!z[0]||!Q[0])return Q[0]||(C=new g0(a0)),A0?H(C,b,R):C;if(v=z0(a0.e/Z),w=z0(C.e/Z),z=z.slice(),y=v-w){for(y<0?(a=z,y=-y,U=Q.length):(a=Q,w=v,U=z.length),y>(U=(v=Math.ceil(b/Z))>U?v+1:U+1)&&(y=U,a.length=1),a.reverse();y--;)a.push(0);a.reverse()}for((U=z.length)-(y=Q.length)<0&&(y=U,a=Q,Q=z,z=a),T=0;y;)T=(z[--y]=z[y]+Q[y]+T)/Z0|0,z[y]%=Z0;for(T&&(z.unshift(T),++w),U=z.length;z[--U]==0;)z.pop();return C.d=z,C.e=q0(z,w),A0?H(C,b,R):C},l.precision=l.sd=function(C){var T,a=this;if(C!==void 0&&C!==!!C&&C!==1&&C!==0)throw Error(X0+C);return a.d?(T=t1(a.d),C&&a.e+1>T&&(T=a.e+1)):T=NaN,T},l.round=function(){var C=this,T=C.constructor;return H(new T(C),C.e+1,T.rounding)},l.sine=l.sin=function(){var C,T,a=this,w=a.constructor;return a.isFinite()?a.isZero()?new w(a):(C=w.precision,T=w.rounding,w.precision=C+Math.max(a.e,a.sd())+Z,w.rounding=1,a=function(y,v){var U,b=v.d.length;if(b<3)return M0(y,2,v,v);U=(U=1.4*Math.sqrt(b))>16?16:0|U,v=v.times(1/n1(5,U)),v=M0(y,2,v,v);for(var R,z=new y(5),Q=new y(16),a0=new y(20);U--;)R=v.times(v),v=v.times(z.plus(R.times(Q.times(R).minus(a0))));return v}(w,m1(w,a)),w.precision=C,w.rounding=T,H(N1>2?a.neg():a,C,T,!0)):new w(NaN)},l.squareRoot=l.sqrt=function(){var C,T,a,w,y,v,U=this,b=U.d,R=U.e,z=U.s,Q=U.constructor;if(z!==1||!b||!b[0])return new Q(!z||z<0&&(!b||b[0])?NaN:b?U:1/0);for(A0=!1,(z=Math.sqrt(+U))==0||z==1/0?(((T=f(b)).length+R)%2==0&&(T+="0"),z=Math.sqrt(T),R=z0((R+1)/2)-(R<0||R%2),w=new Q(T=z==1/0?"5e"+R:(T=z.toExponential()).slice(0,T.indexOf("e")+1)+R)):w=new Q(z.toString()),a=(R=Q.precision)+3;;)if(w=(v=w).plus(x(U,v,a+2,1)).times(.5),f(v.d).slice(0,a)===(T=f(w.d)).slice(0,a)){if((T=T.slice(a-3,a+1))!="9999"&&(y||T!="4999")){+T&&(+T.slice(1)||T.charAt(0)!="5")||(H(w,R+1,1),C=!w.times(w).eq(U));break}if(!y&&(H(v,R+1,0),v.times(v).eq(U))){w=v;break}a+=4,y=1}return A0=!0,H(w,R,Q.rounding,C)},l.tangent=l.tan=function(){var C,T,a=this,w=a.constructor;return a.isFinite()?a.isZero()?new w(a):(C=w.precision,T=w.rounding,w.precision=C+10,w.rounding=1,(a=a.sin()).s=1,a=x(a,new w(1).minus(a.times(a)).sqrt(),C+10,0),w.precision=C,w.rounding=T,H(N1==2||N1==4?a.neg():a,C,T,!0)):new w(NaN)},l.times=l.mul=function(C){var T,a,w,y,v,U,b,R,z,Q=this,a0=Q.constructor,g0=Q.d,e=(C=new a0(C)).d;if(C.s*=Q.s,!(g0&&g0[0]&&e&&e[0]))return new a0(!C.s||g0&&!g0[0]&&!e||e&&!e[0]&&!g0?NaN:g0&&e?0*C.s:C.s/0);for(a=z0(Q.e/Z)+z0(C.e/Z),(R=g0.length)<(z=e.length)&&(v=g0,g0=e,e=v,U=R,R=z,z=U),v=[],w=U=R+z;w--;)v.push(0);for(w=z;--w>=0;){for(T=0,y=R+w;y>w;)b=v[y]+e[w]*g0[y-w-1]+T,v[y--]=b%Z0|0,T=b/Z0|0;v[y]=(v[y]+T)%Z0|0}for(;!v[--U];)v.pop();return T?++a:v.shift(),C.d=v,C.e=q0(v,a),A0?H(C,a0.precision,a0.rounding):C},l.toBinary=function(C,T){return _(this,2,C,T)},l.toDecimalPlaces=l.toDP=function(C,T){var a=this,w=a.constructor;return a=new w(a),C===void 0?a:(d(C,0,X1),T===void 0?T=w.rounding:d(T,0,8),H(a,C+a.e+1,T))},l.toExponential=function(C,T){var a,w=this,y=w.constructor;return C===void 0?a=u0(w,!0):(d(C,0,X1),T===void 0?T=y.rounding:d(T,0,8),a=u0(w=H(new y(w),C+1,T),!0,C+1)),w.isNeg()&&!w.isZero()?"-"+a:a},l.toFixed=function(C,T){var a,w,y=this,v=y.constructor;return C===void 0?a=u0(y):(d(C,0,X1),T===void 0?T=v.rounding:d(T,0,8),a=u0(w=H(new v(y),C+y.e+1,T),!1,C+w.e+1)),y.isNeg()&&!y.isZero()?"-"+a:a},l.toFraction=function(C){var T,a,w,y,v,U,b,R,z,Q,a0,g0,e=this,u=e.d,m=e.constructor;if(!u)return new m(e);if(z=a=new m(1),w=R=new m(0),U=(v=(T=new m(w)).e=t1(u)-e.e-1)%Z,T.d[0]=p0(10,U<0?Z+U:U),C==null)C=v>0?T:z;else{if(!(b=new m(C)).isInt()||b.lt(z))throw Error(X0+b);C=b.gt(T)?v>0?T:z:b}for(A0=!1,b=new m(f(u)),Q=m.precision,m.precision=v=u.length*Z*2;a0=x(b,T,0,1,1),(y=a.plus(a0.times(w))).cmp(C)!=1;)a=w,w=y,y=z,z=R.plus(a0.times(y)),R=y,y=T,T=b.minus(a0.times(y)),b=y;return y=x(C.minus(a),w,0,1,1),R=R.plus(y.times(z)),a=a.plus(y.times(w)),R.s=z.s=e.s,g0=x(z,w,v,1).minus(e).abs().cmp(x(R,a,v,1).minus(e).abs())<1?[z,w]:[R,a],m.precision=Q,A0=!0,g0},l.toHexadecimal=l.toHex=function(C,T){return _(this,16,C,T)},l.toNearest=function(C,T){var a=this,w=a.constructor;if(a=new w(a),C==null){if(!a.d)return a;C=new w(1),T=w.rounding}else{if(C=new w(C),T===void 0?T=w.rounding:d(T,0,8),!a.d)return C.s?a:C;if(!C.d)return C.s&&(C.s=a.s),C}return C.d[0]?(A0=!1,a=x(a,C,0,T,1).times(C),A0=!0,H(a)):(C.s=a.s,a=C),a},l.toNumber=function(){return+this},l.toOctal=function(C,T){return _(this,8,C,T)},l.toPower=l.pow=function(C){var T,a,w,y,v,U,b=this,R=b.constructor,z=+(C=new R(C));if(!(b.d&&C.d&&b.d[0]&&C.d[0]))return new R(p0(+b,z));if((b=new R(b)).eq(1))return b;if(w=R.precision,v=R.rounding,C.eq(1))return H(b,w,v);if((T=z0(C.e/Z))>=C.d.length-1&&(a=z<0?-z:z)<=9007199254740991)return y=r0(R,b,a,w),C.s<0?new R(1).div(y):H(y,w,v);if((U=b.s)<0){if(T<C.d.length-1)return new R(NaN);if((1&C.d[T])==0&&(U=1),b.e==0&&b.d[0]==1&&b.d.length==1)return b.s=U,b}return(T=(a=p0(+b,z))!=0&&isFinite(a)?new R(a+"").e:z0(z*(Math.log("0."+f(b.d))/Math.LN10+b.e+1)))>R.maxE+1||T<R.minE-1?new R(T>0?U/0:0):(A0=!1,R.rounding=b.s=1,a=Math.min(12,(T+"").length),(y=i0(C.times(k0(b,w+a)),w)).d&&E((y=H(y,w+5,1)).d,w,v)&&(T=w+10,+f((y=H(i0(C.times(k0(b,T+a)),T),T+5,1)).d).slice(w+1,w+15)+1==1e14&&(y=H(y,w+1,0))),y.s=U,A0=!0,R.rounding=v,H(y,w,v))},l.toPrecision=function(C,T){var a,w=this,y=w.constructor;return C===void 0?a=u0(w,w.e<=y.toExpNeg||w.e>=y.toExpPos):(d(C,1,X1),T===void 0?T=y.rounding:d(T,0,8),a=u0(w=H(new y(w),C,T),C<=w.e||w.e<=y.toExpNeg,C)),w.isNeg()&&!w.isZero()?"-"+a:a},l.toSignificantDigits=l.toSD=function(C,T){var a=this.constructor;return C===void 0?(C=a.precision,T=a.rounding):(d(C,1,X1),T===void 0?T=a.rounding:d(T,0,8)),H(new a(this),C,T)},l.toString=function(){var C=this,T=C.constructor,a=u0(C,C.e<=T.toExpNeg||C.e>=T.toExpPos);return C.isNeg()&&!C.isZero()?"-"+a:a},l.truncated=l.trunc=function(){return H(new this.constructor(this),this.e+1,1)},l.valueOf=l.toJSON=function(){var C=this,T=C.constructor,a=u0(C,C.e<=T.toExpNeg||C.e>=T.toExpPos);return C.isNeg()?"-"+a:a};var x=function(){function C(w,y,v){var U,b=0,R=w.length;for(w=w.slice();R--;)U=w[R]*y+b,w[R]=U%v|0,b=U/v|0;return b&&w.unshift(b),w}function T(w,y,v,U){var b,R;if(v!=U)R=v>U?1:-1;else for(b=R=0;b<v;b++)if(w[b]!=y[b]){R=w[b]>y[b]?1:-1;break}return R}function a(w,y,v,U){for(var b=0;v--;)w[v]-=b,b=w[v]<y[v]?1:0,w[v]=b*U+w[v]-y[v];for(;!w[0]&&w.length>1;)w.shift()}return function(w,y,v,U,b,R){var z,Q,a0,g0,e,u,m,N,B,o0,x0,n0,W0,V0,K0,O1,D0,G,I1,Z1,B1=w.constructor,z1=w.s==y.s?1:-1,w1=w.d,L1=y.d;if(!(w1&&w1[0]&&L1&&L1[0]))return new B1(w.s&&y.s&&(w1?!L1||w1[0]!=L1[0]:L1)?w1&&w1[0]==0||!L1?0*z1:z1/0:NaN);for(R?(e=1,Q=w.e-y.e):(R=Z0,e=Z,Q=z0(w.e/e)-z0(y.e/e)),I1=L1.length,D0=w1.length,o0=(B=new B1(z1)).d=[],a0=0;L1[a0]==(w1[a0]||0);a0++);if(L1[a0]>(w1[a0]||0)&&Q--,v==null?(V0=v=B1.precision,U=B1.rounding):V0=b?v+(w.e-y.e)+1:v,V0<0)o0.push(1),u=!0;else{if(V0=V0/e+2|0,a0=0,I1==1){for(g0=0,L1=L1[0],V0++;(a0<D0||g0)&&V0--;a0++)K0=g0*R+(w1[a0]||0),o0[a0]=K0/L1|0,g0=K0%L1|0;u=g0||a0<D0}else{for((g0=R/(L1[0]+1)|0)>1&&(L1=C(L1,g0,R),w1=C(w1,g0,R),I1=L1.length,D0=w1.length),O1=I1,n0=(x0=w1.slice(0,I1)).length;n0<I1;)x0[n0++]=0;(Z1=L1.slice()).unshift(0),G=L1[0],L1[1]>=R/2&&++G;do g0=0,(z=T(L1,x0,I1,n0))<0?(W0=x0[0],I1!=n0&&(W0=W0*R+(x0[1]||0)),(g0=W0/G|0)>1?(g0>=R&&(g0=R-1),(z=T(m=C(L1,g0,R),x0,N=m.length,n0=x0.length))==1&&(g0--,a(m,I1<N?Z1:L1,N,R))):(g0==0&&(z=g0=1),m=L1.slice()),(N=m.length)<n0&&m.unshift(0),a(x0,m,n0,R),z==-1&&(z=T(L1,x0,I1,n0=x0.length))<1&&(g0++,a(x0,I1<n0?Z1:L1,n0,R)),n0=x0.length):z===0&&(g0++,x0=[0]),o0[a0++]=g0,z&&x0[0]?x0[n0++]=w1[O1]||0:(x0=[w1[O1]],n0=1);while((O1++<D0||x0[0]!==void 0)&&V0--);u=x0[0]!==void 0}o0[0]||o0.shift()}if(e==1)B.e=Q,F=u;else{for(a0=1,g0=o0[0];g0>=10;g0/=10)a0++;B.e=a0+Q*e-1,H(B,b?v+B.e+1:v,U,u)}return B}}();function H(C,T,a,w){var y,v,U,b,R,z,Q,a0,g0,e=C.constructor;e:if(T!=null){if(!(a0=C.d))return C;for(y=1,b=a0[0];b>=10;b/=10)y++;if((v=T-y)<0)v+=Z,U=T,R=(Q=a0[g0=0])/p0(10,y-U-1)%10|0;else if((g0=Math.ceil((v+1)/Z))>=(b=a0.length)){if(!w)break e;for(;b++<=g0;)a0.push(0);Q=R=0,y=1,U=(v%=Z)-Z+1}else{for(Q=b=a0[g0],y=1;b>=10;b/=10)y++;R=(U=(v%=Z)-Z+y)<0?0:Q/p0(10,y-U-1)%10|0}if(w=w||T<0||a0[g0+1]!==void 0||(U<0?Q:Q%p0(10,y-U-1)),z=a<4?(R||w)&&(a==0||a==(C.s<0?3:2)):R>5||R==5&&(a==4||w||a==6&&(v>0?U>0?Q/p0(10,y-U):0:a0[g0-1])%10&1||a==(C.s<0?8:7)),T<1||!a0[0])return a0.length=0,z?(T-=C.e+1,a0[0]=p0(10,(Z-T%Z)%Z),C.e=-T||0):a0[0]=C.e=0,C;if(v==0?(a0.length=g0,b=1,g0--):(a0.length=g0+1,b=p0(10,Z-v),a0[g0]=U>0?(Q/p0(10,y-U)%p0(10,U)|0)*b:0),z)for(;;){if(g0==0){for(v=1,U=a0[0];U>=10;U/=10)v++;for(U=a0[0]+=b,b=1;U>=10;U/=10)b++;v!=b&&(C.e++,a0[0]==Z0&&(a0[0]=1));break}if(a0[g0]+=b,a0[g0]!=Z0)break;a0[g0--]=0,b=1}for(v=a0.length;a0[--v]===0;)a0.pop()}return A0&&(C.e>e.maxE?(C.d=null,C.e=NaN):C.e<e.minE&&(C.e=0,C.d=[0])),C}function u0(C,T,a){if(!C.isFinite())return d1(C);var w,y=C.e,v=f(C.d),U=v.length;return T?(a&&(w=a-U)>0?v=v.charAt(0)+"."+v.slice(1)+l1(w):U>1&&(v=v.charAt(0)+"."+v.slice(1)),v=v+(C.e<0?"e":"e+")+C.e):y<0?(v="0."+l1(-y-1)+v,a&&(w=a-U)>0&&(v+=l1(w))):y>=U?(v+=l1(y+1-U),a&&(w=a-y-1)>0&&(v=v+"."+l1(w))):((w=y+1)<U&&(v=v.slice(0,w)+"."+v.slice(w)),a&&(w=a-U)>0&&(y+1===U&&(v+="."),v+=l1(w))),v}function q0(C,T){var a=C[0];for(T*=Z;a>=10;a/=10)T++;return T}function d0(C,T,a){if(T>i)throw A0=!0,a&&(C.precision=a),Error(o1);return H(new C($),T,1,!0)}function Q0(C,T,a){if(T>h)throw Error(o1);return H(new C(e0),T,a,!0)}function t1(C){var T=C.length-1,a=T*Z+1;if(T=C[T]){for(;T%10==0;T/=10)a--;for(T=C[0];T>=10;T/=10)a++}return a}function l1(C){for(var T="";C--;)T+="0";return T}function r0(C,T,a,w){var y,v=new C(1),U=Math.ceil(w/Z+4);for(A0=!1;;){if(a%2&&S((v=v.times(T)).d,U)&&(y=!0),(a=z0(a/2))===0){a=v.d.length-1,y&&v.d[a]===0&&++v.d[a];break}S((T=T.times(T)).d,U)}return A0=!0,v}function w0(C){return 1&C.d[C.d.length-1]}function I0(C,T,a){for(var w,y=new C(T[0]),v=0;++v<T.length;){if(!(w=new C(T[v])).s){y=w;break}y[a](w)&&(y=w)}return y}function i0(C,T){var a,w,y,v,U,b,R,z=0,Q=0,a0=0,g0=C.constructor,e=g0.rounding,u=g0.precision;if(!C.d||!C.d[0]||C.e>17)return new g0(C.d?C.d[0]?C.s<0?0:1/0:1:C.s?C.s<0?0:C:NaN);for(T==null?(A0=!1,R=u):R=T,b=new g0(.03125);C.e>-2;)C=C.times(b),a0+=5;for(R+=w=Math.log(p0(2,a0))/Math.LN10*2+5|0,a=v=U=new g0(1),g0.precision=R;;){if(v=H(v.times(C),R,1),a=a.times(++Q),f((b=U.plus(x(v,a,R,1))).d).slice(0,R)===f(U.d).slice(0,R)){for(y=a0;y--;)U=H(U.times(U),R,1);if(T!=null)return g0.precision=u,U;if(!(z<3&&E(U.d,R-w,e,z)))return H(U,g0.precision=u,e,A0=!0);g0.precision=R+=10,a=v=b=new g0(1),Q=0,z++}U=b}}function k0(C,T){var a,w,y,v,U,b,R,z,Q,a0,g0,e=1,u=C,m=u.d,N=u.constructor,B=N.rounding,o0=N.precision;if(u.s<0||!m||!m[0]||!u.e&&m[0]==1&&m.length==1)return new N(m&&!m[0]?-1/0:u.s!=1?NaN:m?0:u);if(T==null?(A0=!1,Q=o0):Q=T,N.precision=Q+=10,w=(a=f(m)).charAt(0),!(Math.abs(v=u.e)<15e14))return z=d0(N,Q+2,o0).times(v+""),u=k0(new N(w+"."+a.slice(1)),Q-10).plus(z),N.precision=o0,T==null?H(u,o0,B,A0=!0):u;for(;w<7&&w!=1||w==1&&a.charAt(1)>3;)w=(a=f((u=u.times(C)).d)).charAt(0),e++;for(v=u.e,w>1?(u=new N("0."+a),v++):u=new N(w+"."+a.slice(1)),a0=u,R=U=u=x(u.minus(1),u.plus(1),Q,1),g0=H(u.times(u),Q,1),y=3;;){if(U=H(U.times(g0),Q,1),f((z=R.plus(x(U,new N(y),Q,1))).d).slice(0,Q)===f(R.d).slice(0,Q)){if(R=R.times(2),v!==0&&(R=R.plus(d0(N,Q+2,o0).times(v+""))),R=x(R,new N(e),Q,1),T!=null)return N.precision=o0,R;if(!E(R.d,Q-10,B,b))return H(R,N.precision=o0,B,A0=!0);N.precision=Q+=10,z=U=u=x(a0.minus(1),a0.plus(1),Q,1),g0=H(u.times(u),Q,1),y=b=1}R=z,y+=2}}function d1(C){return String(C.s*C.s/0)}function H0(C,T){var a,w,y;for((a=T.indexOf("."))>-1&&(T=T.replace(".","")),(w=T.search(/e/i))>0?(a<0&&(a=w),a+=+T.slice(w+1),T=T.substring(0,w)):a<0&&(a=T.length),w=0;T.charCodeAt(w)===48;w++);for(y=T.length;T.charCodeAt(y-1)===48;--y);if(T=T.slice(w,y)){if(y-=w,C.e=a=a-w-1,C.d=[],w=(a+1)%Z,a<0&&(w+=Z),w<y){for(w&&C.d.push(+T.slice(0,w)),y-=Z;w<y;)C.d.push(+T.slice(w,w+=Z));T=T.slice(w),w=Z-T.length}else w-=y;for(;w--;)T+="0";C.d.push(+T),A0&&(C.e>C.constructor.maxE?(C.d=null,C.e=NaN):C.e<C.constructor.minE&&(C.e=0,C.d=[0]))}else C.e=0,C.d=[0];return C}function s0(C,T){var a,w,y,v,U,b,R,z,Q;if(T==="Infinity"||T==="NaN")return+T||(C.s=NaN),C.e=NaN,C.d=null,C;if(F1.test(T))a=16,T=T.toLowerCase();else if(q1.test(T))a=2;else{if(!c1.test(T))throw Error(X0+T);a=8}for((v=T.search(/p/i))>0?(R=+T.slice(v+1),T=T.substring(2,v)):T=T.slice(2),U=(v=T.indexOf("."))>=0,w=C.constructor,U&&(v=(b=(T=T.replace(".","")).length)-v,y=r0(w,new w(a),v,2*v)),v=Q=(z=L(T,a,Z0)).length-1;z[v]===0;--v)z.pop();return v<0?new w(0*C.s):(C.e=q0(z,Q),C.d=z,A0=!1,U&&(C=x(C,y,4*b)),R&&(C=C.times(Math.abs(R)<54?p0(2,R):r.pow(2,R))),A0=!0,C)}function M0(C,T,a,w,y){var v,U,b,R,z=C.precision,Q=Math.ceil(z/Z);for(A0=!1,R=a.times(a),b=new C(w);;){if(U=x(b.times(R),new C(T++*T++),z,1),b=y?w.plus(U):w.minus(U),w=x(U.times(R),new C(T++*T++),z,1),(U=b.plus(w)).d[Q]!==void 0){for(v=Q;U.d[v]===b.d[v]&&v--;);if(v==-1)break}v=b,b=w,w=U,U=v}return A0=!0,U.d.length=Q+1,U}function n1(C,T){for(var a=C;--T;)a*=C;return a}function m1(C,T){var a,w=T.s<0,y=Q0(C,C.precision,1),v=y.times(.5);if((T=T.abs()).lte(v))return N1=w?4:1,T;if((a=T.divToInt(y)).isZero())N1=w?3:2;else{if((T=T.minus(a.times(y))).lte(v))return N1=w0(a)?w?2:3:w?4:1,T;N1=w0(a)?w?1:4:w?3:2}return T.minus(y).abs()}function _(C,T,a,w){var y,v,U,b,R,z,Q,a0,g0,e=C.constructor,u=a!==void 0;if(u?(d(a,1,X1),w===void 0?w=e.rounding:d(w,0,8)):(a=e.precision,w=e.rounding),C.isFinite()){for(u?(y=2,T==16?a=4*a-3:T==8&&(a=3*a-2)):y=T,(U=(Q=u0(C)).indexOf("."))>=0&&(Q=Q.replace(".",""),(g0=new e(1)).e=Q.length-U,g0.d=L(u0(g0),10,y),g0.e=g0.d.length),v=R=(a0=L(Q,10,y)).length;a0[--R]==0;)a0.pop();if(a0[0]){if(U<0?v--:((C=new e(C)).d=a0,C.e=v,a0=(C=x(C,g0,a,w,0,y)).d,v=C.e,z=F),U=a0[a],b=y/2,z=z||a0[a+1]!==void 0,z=w<4?(U!==void 0||z)&&(w===0||w===(C.s<0?3:2)):U>b||U===b&&(w===4||z||w===6&&1&a0[a-1]||w===(C.s<0?8:7)),a0.length=a,z)for(;++a0[--a]>y-1;)a0[a]=0,a||(++v,a0.unshift(1));for(R=a0.length;!a0[R-1];--R);for(U=0,Q="";U<R;U++)Q+=N0.charAt(a0[U]);if(u){if(R>1)if(T==16||T==8){for(U=T==16?4:3,--R;R%U;R++)Q+="0";for(R=(a0=L(Q,y,T)).length;!a0[R-1];--R);for(U=1,Q="1.";U<R;U++)Q+=N0.charAt(a0[U])}else Q=Q.charAt(0)+"."+Q.slice(1);Q=Q+(v<0?"p":"p+")+v}else if(v<0){for(;++v;)Q="0"+Q;Q="0."+Q}else if(++v>R)for(v-=R;v--;)Q+="0";else v<R&&(Q=Q.slice(0,v)+"."+Q.slice(v))}else Q=u?"0p+0":"0";Q=(T==16?"0x":T==2?"0b":T==8?"0o":"")+Q}else Q=d1(C);return C.s<0?"-"+Q:Q}function S(C,T){if(C.length>T)return C.length=T,!0}function O(C){return new this(C).abs()}function W(C){return new this(C).acos()}function X(C){return new this(C).acosh()}function f0(C,T){return new this(C).plus(T)}function c0(C){return new this(C).asin()}function O0(C){return new this(C).asinh()}function Y(C){return new this(C).atan()}function q(C){return new this(C).atanh()}function J(C,T){C=new this(C),T=new this(T);var a,w=this.precision,y=this.rounding,v=w+4;return C.s&&T.s?C.d||T.d?!T.d||C.isZero()?(a=T.s<0?Q0(this,w,y):new this(0)).s=C.s:!C.d||T.isZero()?(a=Q0(this,v,1).times(.5)).s=C.s:T.s<0?(this.precision=v,this.rounding=1,a=this.atan(x(C,T,v,1)),T=Q0(this,v,1),this.precision=w,this.rounding=y,a=C.s<0?a.minus(T):a.plus(T)):a=this.atan(x(C,T,v,1)):(a=Q0(this,v,1).times(T.s>0?.25:.75)).s=C.s:a=new this(NaN),a}function k(C){return new this(C).cbrt()}function S0(C){return H(C=new this(C),C.e+1,2)}function E0(C){if(!C||typeof C!="object")throw Error(f1+"Object expected");var T,a,w,y=C.defaults===!0,v=["precision",1,X1,"rounding",0,8,"toExpNeg",-T0,0,"toExpPos",0,T0,"maxE",0,T0,"minE",-T0,0,"modulo",0,9];for(T=0;T<v.length;T+=3)if(a=v[T],y&&(this[a]=x1[a]),(w=C[a])!==void 0){if(!(z0(w)===w&&w>=v[T+1]&&w<=v[T+2]))throw Error(X0+a+": "+w);this[a]=w}if(a="crypto",y&&(this[a]=x1[a]),(w=C[a])!==void 0){if(w!==!0&&w!==!1&&w!==0&&w!==1)throw Error(X0+a+": "+w);if(w){if(typeof crypto=="undefined"||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error($0);this[a]=!0}else this[a]=!1}return this}function U0(C){return new this(C).cos()}function h0(C){return new this(C).cosh()}function l0(C,T){return new this(C).div(T)}function F0(C){return new this(C).exp()}function L0(C){return H(C=new this(C),C.e+1,3)}function _0(){var C,T,a=new this(0);for(A0=!1,C=0;C<arguments.length;)if((T=new this(arguments[C++])).d)a.d&&(a=a.plus(T.times(T)));else{if(T.s)return A0=!0,new this(1/0);a=T}return A0=!0,a.sqrt()}function y0(C){return C instanceof r||C&&C.name==="[object Decimal]"||!1}function G0(C){return new this(C).ln()}function b0(C,T){return new this(C).log(T)}function R0(C){return new this(C).log(2)}function i1(C){return new this(C).log(10)}function A1(){return I0(this,arguments,"lt")}function a1(){return I0(this,arguments,"gt")}function U1(C,T){return new this(C).mod(T)}function D1(C,T){return new this(C).mul(T)}function P1(C,T){return new this(C).pow(T)}function Y1(C){var T,a,w,y,v=0,U=new this(1),b=[];if(C===void 0?C=this.precision:d(C,1,X1),w=Math.ceil(C/Z),this.crypto)if(crypto.getRandomValues)for(T=crypto.getRandomValues(new Uint32Array(w));v<w;)(y=T[v])>=429e7?T[v]=crypto.getRandomValues(new Uint32Array(1))[0]:b[v++]=y%1e7;else{if(!crypto.randomBytes)throw Error($0);for(T=crypto.randomBytes(w*=4);v<w;)(y=T[v]+(T[v+1]<<8)+(T[v+2]<<16)+((127&T[v+3])<<24))>=214e7?crypto.randomBytes(4).copy(T,v):(b.push(y%1e7),v+=4);v=w/4}else for(;v<w;)b[v++]=1e7*Math.random()|0;for(w=b[--v],C%=Z,w&&C&&(y=p0(10,Z-C),b[v]=(w/y|0)*y);b[v]===0;v--)b.pop();if(v<0)a=0,b=[0];else{for(a=-1;b[0]===0;a-=Z)b.shift();for(w=1,y=b[0];y>=10;y/=10)w++;w<Z&&(a-=Z-w)}return U.e=a,U.d=b,U}function $1(C){return H(C=new this(C),C.e+1,this.rounding)}function T1(C){return(C=new this(C)).d?C.d[0]?C.s:0*C.s:C.s||NaN}function J1(C){return new this(C).sin()}function v2(C){return new this(C).sinh()}function H1(C){return new this(C).sqrt()}function R1(C,T){return new this(C).sub(T)}function v1(C){return new this(C).tan()}function e2(C){return new this(C).tanh()}function t2(C){return H(C=new this(C),C.e+1,1)}return(r=function C(T){var a,w,y;function v(U){var b,R,z,Q=this;if(!(Q instanceof v))return new v(U);if(Q.constructor=v,U instanceof v)return Q.s=U.s,void(A0?!U.d||U.e>v.maxE?(Q.e=NaN,Q.d=null):U.e<v.minE?(Q.e=0,Q.d=[0]):(Q.e=U.e,Q.d=U.d.slice()):(Q.e=U.e,Q.d=U.d?U.d.slice():U.d));if((z=typeof U)=="number"){if(U===0)return Q.s=1/U<0?-1:1,Q.e=0,void(Q.d=[0]);if(U<0?(U=-U,Q.s=-1):Q.s=1,U===~~U&&U<1e7){for(b=0,R=U;R>=10;R/=10)b++;return void(A0?b>v.maxE?(Q.e=NaN,Q.d=null):b<v.minE?(Q.e=0,Q.d=[0]):(Q.e=b,Q.d=[U]):(Q.e=b,Q.d=[U]))}return 0*U!=0?(U||(Q.s=NaN),Q.e=NaN,void(Q.d=null)):H0(Q,U.toString())}if(z!=="string")throw Error(X0+U);return(R=U.charCodeAt(0))===45?(U=U.slice(1),Q.s=-1):(R===43&&(U=U.slice(1)),Q.s=1),b1.test(U)?H0(Q,U):s0(Q,U)}if(v.prototype=l,v.ROUND_UP=0,v.ROUND_DOWN=1,v.ROUND_CEIL=2,v.ROUND_FLOOR=3,v.ROUND_HALF_UP=4,v.ROUND_HALF_DOWN=5,v.ROUND_HALF_EVEN=6,v.ROUND_HALF_CEIL=7,v.ROUND_HALF_FLOOR=8,v.EUCLID=9,v.config=v.set=E0,v.clone=C,v.isDecimal=y0,v.abs=O,v.acos=W,v.acosh=X,v.add=f0,v.asin=c0,v.asinh=O0,v.atan=Y,v.atanh=q,v.atan2=J,v.cbrt=k,v.ceil=S0,v.cos=U0,v.cosh=h0,v.div=l0,v.exp=F0,v.floor=L0,v.hypot=_0,v.ln=G0,v.log=b0,v.log10=i1,v.log2=R0,v.max=A1,v.min=a1,v.mod=U1,v.mul=D1,v.pow=P1,v.random=Y1,v.round=$1,v.sign=T1,v.sin=J1,v.sinh=v2,v.sqrt=H1,v.sub=R1,v.tan=v1,v.tanh=e2,v.trunc=t2,T===void 0&&(T={}),T&&T.defaults!==!0)for(y=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],a=0;a<y.length;)T.hasOwnProperty(w=y[a++])||(T[w]=this[w]);return v.config(T),v}(x1)).default=r.Decimal=r,$=new r($),e0=new r(e0),W2.exports?(typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"&&(l[Symbol.for("nodejs.util.inspect.custom")]=l.toString,l[Symbol.toStringTag]="Decimal"),W2.exports=r):(A||(A=typeof self!="undefined"&&self&&self.self==self?self:window),_1=A.Decimal,r.noConflict=function(){return A.Decimal=_1,r},A.Decimal=r),r}(I3)});W2.exports=A2})(d3);var K3={exports:{}},b3={exports:{}};(function(W2){var A2=d3.exports;(function(){var A=A2.getCore(),r=A.PARSER,F=A.groups.N,_1=A.groups.P,N1=A.groups.S,T0=A.groups.EX,X1=A.groups.FN,N0=A.groups.PL,$=A.groups.CP,e0=A.groups.CB,x1=A.Utils.keys,A0=A.Utils.even,f1=A.Utils.variables,X0=A.Utils.format,o1=A.Utils.round,$0=A.Frac,z0=A.Utils.isInt,p0=A.Symbol,q1=A.Settings.CONST_HASH,F1=A.Utils.importFunctions();A.Utils.evaluate;function c1(i,h,l){if(A.Utils.isSymbol(i))this.parse(i),this.variable=this.variable||h;else if(isNaN(i))typeof i=="string"&&this.parse(r.parse(i));else{if(l=l||0,h===void 0)throw new A.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[l]=i,this.fill(i)}}c1.fromArray=function(i,h){if(typeof h=="undefined")throw new A.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var l=new c1;return l.coeffs=i,l.variable=h,l},c1.fit=function(i,h,l,f,d,E){var L=new Array(d+1),x=l-h;L[0]=h,L[d]=i,x-=i*Math.pow(f,d);for(var H=d-1;H>0;H--){var u0=Math.pow(f,H),q0=x/u0,d0=Math.sign(q0),Q0=d0*Math.floor(Math.abs(q0));x-=Q0*u0,L[H]=Q0}if(x!==0)return null;for(var H=0;H<L.length;H++)L[H]=new $0(L[H]);return c1.fromArray(L,E)},c1.prototype={parse:function(i,h){if(this.variable=f1(i)[0],!i.isPoly())throw A.exceptions.NerdamerTypeError("Polynomial Expected! Received "+A.Utils.text(i));if(h=h||[],i.power.absEquals(1)||(i=r.expand(i)),i.group===A.groups.N)h[0]=i.multiplier;else if(i.group===A.groups.S)h[i.power.toDecimal()]=i.multiplier;else for(var l in i.symbols){var f=i.symbols[l],d=f.power;if(A.Utils.isSymbol(d))throw new A.exceptions.NerdamerTypeError("power cannot be a Symbol");d=f.group===F?0:d.toDecimal(),f.symbols?this.parse(f,h):h[d]=f.multiplier}this.coeffs=h,this.fill()},fill:function(i){i=Number(i)||0;for(var h=this.coeffs.length,l=0;l<h;l++)this.coeffs[l]===void 0&&(this.coeffs[l]=new $0(i));return this},trim:function(){for(var i=this.coeffs.length;i--;){var h=this.coeffs[i],l=h.equals(0);if(h&&l){if(i===0)break;this.coeffs.pop()}else break}return this},modP:function(i){for(var h=this.coeffs.length,l=0;l<h;l++){var f=this.coeffs[l];if(f<0){for(var d,E=l;E<h;E++)if(this.coeffs[E]>0){d=this.coeffs[E];break}if(d){for(E;E>l;E--)this.coeffs[E]=this.coeffs[E].subtract(new $0(1)),this.coeffs[E-1]=this.coeffs[E-1].add(new $0(i));f=this.coeffs[l]}}var L=f.mod(i),x=f.subtract(L).divide(i);if(!x.equals(0)){var H=l+1,u0=this.coeffs[H]||new $0(0);u0=u0.add(x),this.coeffs[H]=new $0(u0),this.coeffs[l]=new $0(L)}}return this},add:function(i){for(var h=Math.max(this.coeffs.length,i.coeffs.length),l=0;l<h;l++){var f=this.coeffs[l]||new $0(0),d=i.coeffs[l]||new $0(0);this.coeffs[l]=f.add(d)}return this},subtract:function(i){for(var h=Math.max(this.coeffs.length,i.coeffs.length),l=0;l<h;l++){var f=this.coeffs[l]||new $0(0),d=i.coeffs[l]||new $0(0);this.coeffs[l]=f.subtract(d)}return this},divide:function(i){for(var h=this.variable,l=A.Utils.arrayClone(this.coeffs),f=A.Utils.arrayClone(i.coeffs),d=l.length,E=f.length-1,L=[],x=0;x<d;x++){var H=d-(x+1),u0=H-E,q0=l[H].divide(f[E]);if(u0<0)break;L[u0]=q0;for(var d0=0;d0<=E;d0++)l[d0+u0]=l[d0+u0].subtract(f[d0].multiply(q0))}var Q0=c1.fromArray(l,h||"x").trim(),t1=c1.fromArray(L,h||"x");return[t1,Q0]},multiply:function(i){for(var h=this.coeffs.length,l=i.coeffs.length,f=[],d=0;d<h;d++)for(var E=this.coeffs[d],L=0;L<l;L++){var x=d+L,H=i.coeffs[L],u0=f[x]||new $0(0);f[x]=u0.add(E.multiply(H))}return this.coeffs=f,this},isZero:function(){for(var i=this.coeffs.length,h=0;h<i;h++){var l=this.coeffs[h];if(!l.equals(0))return!1}return!0},sub:function(i){for(var h=new $0(0),l=this.coeffs.length,f=0;f<l;f++){var d=this.coeffs[f];d.equals(0)||(h=h.add(d.multiply(new $0(Math.pow(i,f)))))}return h},clone:function(){var i=new c1;return i.coeffs=this.coeffs,i.variable=this.variable,i},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var i=this.lc(),h=this.coeffs.length,l=0;l<h;l++)this.coeffs[l]=this.coeffs[l].divide(i);return this},gcd:function(i){var h=this.coeffs.length-1,l=i.coeffs.length-1,f;if(h<l)return i.gcd(this);for(var d=this;!i.isZero();){var E=i.clone();d=d.clone(),f=d.divide(E),i=f[1],d=E}var L=A.Math2.QGCD.apply(null,d.coeffs);if(!L.equals(1))for(var x=d.coeffs.length,H=0;H<x;H++)d.coeffs[H]=d.coeffs[H].divide(L);return d},diff:function(){for(var i=[],h=this.coeffs.length,l=1;l<h;l++)i.push(this.coeffs[l].multiply(new $0(l)));return this.coeffs=i,this},integrate:function(){for(var i=[0],h=this.coeffs.length,l=0;l<h;l++){var f=new $0(l+1);i[f]=this.coeffs[l].divide(f)}return this.coeffs=i,this},gcf:function(i){for(var h=function(x){for(var H=0;H<x.length;H++)if(!x[H].equals(0))return H},l=[],f=0;f<this.coeffs.length;f++){var d=this.coeffs[f];!d.equals(0)&&l.indexOf(d)===-1&&l.push(d)}var E=[A.Math2.QGCD.apply(void 0,l),h(this.coeffs)].toDecimal();if(i){var L=[];L[E[1]-1]=E[0],E=c1.fromArray(L,this.variable).fill()}return E},quad:function(i){var h=[];if(this.coeffs.length>3)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(this.coeffs.length===0)throw new Error("Polynomial array has no terms");var l=this.coeffs[2]||0,f=this.coeffs[1]||0,d=this.coeffs[0],E=f*f-4*l*d;return E<0&&!i||(h[0]=(-f+Math.sqrt(E))/(2*l),h[1]=(-f-Math.sqrt(E))/(2*l)),h},squareFree:function(){for(var i=this.clone(),h=1,l=i.clone().diff(),f=i.clone().gcd(l),d=i.divide(f)[0],E=c1.fromArray([new $0(1)],i.variable);!f.equalsNumber(1);){var L=d.gcd(f),x=d.divide(L)[0];if(!x.equalsNumber(1)&&h>1){for(var H=x.clone(),u0=1;u0<h;u0++)H.multiply(x.clone());x=H}E=E.multiply(x),h++,d=L,f=f.divide(L)[0]}return[E,d,h]},toSymbol:function(){var i=this.coeffs.length,h=this.variable;if(i===0)return new A.Symbol(0);for(var l=i-1,f="",d=0;d<i;d++){var E=d===l?"":"+",L=this.coeffs[d];L.equals(0)||(f+=L+"*"+h+"^"+d+E)}return r.parse(f)},equalsNumber:function(i){return this.trim(),this.coeffs.length===1&&this.coeffs[0].toDecimal()===String(i)},toString:function(){return this.toSymbol().toString()}},p0.prototype.coeffs=function(i,h){h&&!this.isPoly(!0)&&r.error("Polynomial expected when requesting coefficients with order"),i=i||[];var l=this.clone().distributeMultiplier();if(l.isComposite())for(var f in l.symbols){var d=l.symbols[f];d.isComposite()?d.clone().distributeMultiplier().coeffs(i,h):h?i[d.isConstant()?0:d.power.toDecimal()]=d.multiplier:i.push(d.multiplier)}else if(h)i[l.isConstant(!0)?0:l.power.toDecimal()]=l.multiplier;else if(l.group===e0&&l.isImaginary()){var E=new p0(l.multiplier);l.each(function(x){(x.isConstant(!0)||x.imaginary)&&(E=r.multiply(E,x))}),i.push(E)}else i.push(l.multiplier);if(h)for(var L=0;L<i.length;L++)i[L]===void 0&&(i[L]=new p0(0));return i},p0.prototype.tBase=function(i){if(typeof i=="undefined")throw new Error("Symbol.tBase requires a map object!");for(var h=[],l=this.collectSymbols(null,null,null,!0),f=l.length,d=0;d<f;d++){var E=l[d],L=E.group,x=new Z0(E.multiplier,[],i);if(L===e0)for(var H in E.symbols){var u0=E.symbols[H];x.terms[i[H]]=u0.power}else x.terms[i[E.value]]=E.power;h.push(x.fill()),x.updateCount()}return h},p0.prototype.altVar=function(i){var h=this.multiplier.toString(),l=this.power.toString();return(h==="1"?"":h+"*")+i+(l==="1"?"":"^"+l)},p0.prototype.sameVars=function(i){if(!(this.symbols||this.group===i.group))return!1;for(var h in this.symbols){var l=this.symbols[h],f=i.symbols[h];if(!f||l.value!==f.value)return!1}return!0},p0.prototype.groupTerms=function(i){i=String(i);var h,l,f,d=[];return this.each(function(E){if(E.group===N0){f=E.groupTerms(i);for(var L=0;L<f.length;L++){var x=f[L];x&&(d[L]=x)}}else h=A.Utils.decompose_fn(E,i,!0),l=h.x.value===i?Number(h.x.power):0,d[l]=r.add(d[l]||new p0(0),h.a)}),d},p0.prototype.collectFactors=function(){var i=[];return this.group===e0?this.each(function(h){i.push(h.clone())}):i.push(this.clone()),i};function b1(){this.factors={},this.length=0}b1.prototype.getNumberSymbolics=function(){var i=0;return this.each(function(h){h.isConstant(!0)||i++}),i},b1.prototype.add=function(i){if(i.equals(0))return this;if(i.equals(-1)&&this.length>0){var h=A.Utils.firstObject(this.factors,null,!0);return this.add(r.symfunction(A.Settings.PARENTHESIS,[h.obj]).negate()),delete this.factors[h.key],this.length--,this}if(i.group===e0){var l=this;i.multiplier.equals(1)||l.add(new p0(i.multiplier)),i.each(function(E){l.add(E)})}else{this.preAdd&&(i=this.preAdd(i)),this.pFactor&&(i=r.pow(i,new p0(this.pFactor)));var f=i.isConstant();if(f&&i.equals(1))return this;var d=f?i.value:i.text();d in this.factors?(this.factors[d]=r.multiply(this.factors[d],i),this.factors[d].equals(1)&&(delete this.factors[d],this.length--)):(this.factors[d]=i,this.length++)}return this},b1.prototype.toSymbol=function(){for(var i=new p0(1),h=Object.values(this.factors).sort(function(L,x){return L.group>x.group}),l=0,f=h.length;l<f;l++){var d=h[l],E=d.power.equals(1)&&d.fname!==""?r.symfunction(A.PARENTHESIS,[d]):d;i=r.multiply(i,E)}return i.fname===""&&(i=p0.unwrapPARENS(i)),i},b1.prototype.merge=function(i){for(var h in i)h in this.factors?this.factors[h]=r.multiply(this.factors[h],i[h]):this.factors[h]=i[h];return this},b1.prototype.each=function(i){for(var h in this.factors){var l=this.factors[h];l.fname===A.PARENTHESIS&&l.isLinear()&&(l=l.args[0]),i.call(this,l,h)}return this},b1.prototype.count=function(){return x1(this.factors).length},b1.prototype.clean=function(){try{var i=A.Settings.CONST_HASH;this.factors[i].lessThan(0)&&(this.factors[i].equals(-1)?delete this.factors[i]:this.factors[i].negate(),this.each(function(h){h.negate()}))}catch{}},b1.prototype.toString=function(){return this.toSymbol().toString()};function Z0(i,h,l){this.terms=h||[],this.coeff=i,this.map=l,this.sum=new A.Frac(0),this.image=void 0}Z0.prototype.updateCount=function(){this.count=this.count||0;for(var i=0;i<this.terms.length;i++)this.terms[i].equals(0)||this.count++;return this},Z0.prototype.getVars=function(){for(var i=[],h=0;h<this.terms.length;h++){var l=this.terms[h];this.getRevMap(),l.equals(0)||i.push(this.rev_map[h])}return i.join(" ")},Z0.prototype.len=function(){return typeof this.count=="undefined"&&this.updateCount(),this.count},Z0.prototype.toSymbol=function(i){i=i||this.getRevMap();for(var h=new p0(this.coeff),l=0;l<this.terms.length;l++){var f=i[l],d=this.terms[l];if(!(d.equals(0)||f===q1)){var E=new p0(f);E.power=d,h=r.multiply(h,E)}}return h},Z0.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var i={};for(var h in this.map)i[this.map[h]]=h;return this.rev_map=i,i},Z0.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},Z0.prototype.getImg=function(){return this.image||this.generateImage(),this.image},Z0.prototype.fill=function(){for(var i=this.map.length,h=0;h<i;h++)typeof this.terms[h]=="undefined"?this.terms[h]=new A.Frac(0):this.sum=this.sum.add(this.terms[h]);return this},Z0.prototype.divide=function(i){for(var h=this.coeff.divide(i.coeff),l=this.terms.length,f=new Z0(h,[],this.map),d=0;d<l;d++)f.terms[d]=this.terms[d].subtract(i.terms[d]),f.sum=f.sum.add(f.terms[d]);return f},Z0.prototype.multiply=function(i){for(var h=this.coeff.multiply(i.coeff),l=this.terms.length,f=new Z0(h,[],this.map),d=0;d<l;d++)f.terms[d]=this.terms[d].add(i.terms[d]),f.sum=f.sum.add(f.terms[d]);return f},Z0.prototype.isZero=function(){return this.coeff.equals(0)},Z0.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},A.Utils.toMapObj=function(i){for(var h=0,l={},f=0;f<i.length;f++){var d=i[f];typeof l[d]=="undefined"&&(l[d]=h,h++)}return l.length=h,l},A.Utils.filledArray=function(i,h,l){for(var f=[];h--;)f[h]=l?new l(i):i;return f},A.Utils.arrSum=function(i){for(var h=0,l=i.length,f=0;f<l;f++)h+=i[f];return h},A.Utils.haveIntersection=function(i,h){var l;return h.length>i.length&&(l=h,h=i,i=l),i.some(function(f){return h.indexOf(f)>-1})},A.Utils.subFunctions=function(i,h){h=h||{};var l=[];return i.each(function(f){if(f.group===X1||f.previousGroup===X1){var d=A.Utils.text(f,"hash"),E=h[d];if(E)l.push(f.altVar(E));else{var L=f.fname+x1(h).length;h[d]=L,l.push(f.altVar(L))}}else f.group===e0||f.group===N0||f.group===$?l.push(A.Utils.subFunctions(f,h)):l.push(f.text())}),i.group===$||i.group===N0?i.altVar(A.Utils.inBrackets(l.join("+"))):i.group===e0?i.altVar(A.Utils.inBrackets(l.join("*"))):i.text()},A.Utils.getFunctionsSubs=function(i){var h={};for(var l in i)h[i[l]]=r.parse(l);return h};var Z=A.Algebra={version:"1.4.6",proots:function(i,h){h=h||7;var l=0,f=[],d=function(M0,n1,m1){for(var _=s0(M0,n1,m1).concat(f),S=0;S<l;S++)_.unshift(0);return _};if(i instanceof p0&&i.isPoly()){if(i.distributeMultiplier(),i.group===N0){var E=A.Utils.arrayMin(x1(i.symbols)),L=i.symbols[E].clone().toUnitMultiplier();i=r.expand(r.divide(i,L)),f.push(0)}if(i.group===A.groups.S)return[0];if(i.group===A.groups.PL)var d0=x1(i.symbols),x=A.Utils.arrayMin(d0),i=A.PARSER.divide(i,A.PARSER.parse(i.value+"^"+x));for(var H=x1(i.symbols).sort().pop(),u0=i.group===A.groups.PL?i.symbols:i.symbols[H],q0=u0.group,d0=q0===N1?[u0.power.toDecimal()]:x1(u0.symbols),Q0=[],t1=A.Utils.arrayMax(d0),l1=1;l1<=t1;l1++){var r0=0;d0.indexOf(l1+"")!==-1&&(q0===N1?r0=u0.multiplier:r0=u0.symbols[l1].multiplier),Q0.unshift(r0)}return Q0.push(i.symbols[q1].multiplier),u0.group===N1&&(Q0[0]=u0.multiplier),d(Q0,d0,t1)}else if(A.Utils.isArray(i)){for(var w0=i,Q0=[],d0=[],I0=0,l1=0;l1<w0.length;l1++){for(var i0=w0[l1][0],k0=w0[l1][1],d1=k0-I0-1,H0=0;H0<d1;H0++)Q0.unshift(0);Q0.unshift(i0),k0!==0&&d0.push(k0),I0=k0}var t1=Math.max.apply(void 0,d0);return d(Q0,d0,t1)}else throw new A.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!");function s0(M0,n1,m1){var _=100,S=M0.slice(0);if(M0.unshift(m1),m1>_)throw new A.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to "+_+". ");var O=[],W={};for(W.Degree=m1,l1=0;l1<m1;l1++)O.push(0);var X=O.slice(0);function f0(_0,y0,G0,b0,R0,i1){R0[0]=i1.b=b0[0],R0[1]=i1.a=-(y0*i1.b)+b0[1];for(var A1=2;A1<_0;A1++)R0[A1]=-(y0*i1.a+G0*i1.b)+b0[A1],i1.b=i1.a,i1.a=R0[A1]}function c0(_0,y0,G0,b0,R0,i1,A1,a1,U1){var D1=new Object,P1=3;return D1.b=D1.a=0,f0(y0,A1,a1,i1,U1,D1),R0.c=D1.a,R0.d=D1.b,Math.abs(R0.c)<=100*_0*Math.abs(i1[y0-1])&&Math.abs(R0.d)<=100*_0*Math.abs(i1[y0-2])||(R0.h=a1*b0,Math.abs(R0.d)>=Math.abs(R0.c)?(P1=2,R0.e=G0/R0.d,R0.f=R0.c/R0.d,R0.g=A1*b0,R0.a3=R0.e*(R0.g+G0)+R0.h*(b0/R0.d),R0.a1=-G0+R0.f*b0,R0.a7=R0.h+(R0.f+A1)*G0):(P1=1,R0.e=G0/R0.c,R0.f=R0.d/R0.c,R0.g=R0.e*A1,R0.a3=R0.e*G0+(R0.g+R0.h/R0.c)*b0,R0.a1=-(G0*(R0.d/R0.c))+b0,R0.a7=R0.g*R0.d+R0.h*R0.f+G0)),P1}function O0(_0,y0,G0,b0,R0,i1,A1,a1,U1){var D1;if(G0==3){A1[1]=A1[0]=0;for(var P1=2;P1<y0;P1++)A1[P1]=a1[P1-2];return}if(D1=G0==1?R0:b0,Math.abs(i1.a1)>10*_0*Math.abs(D1)){i1.a7/=i1.a1,i1.a3/=i1.a1,A1[0]=U1[0],A1[1]=-(U1[0]*i1.a7)+U1[1];for(var P1=2;P1<y0;P1++)A1[P1]=-(U1[P1-1]*i1.a7)+a1[P1-2]*i1.a3+U1[P1]}else{A1[0]=0,A1[1]=-(U1[0]*i1.a7);for(var P1=2;P1<y0;P1++)A1[P1]=-(U1[P1-1]*i1.a7)+a1[P1-2]*i1.a3}}function Y(_0,y0,G0,b0,R0,i1,A1,a1,U1,D1,P1,Y1,$1,T1,J1,v2,H1){var R1,v1,e2,t2,C,T,a,w,y;y0.b=y0.a=0,_0!=3&&(_0!=2?(R1=G0+$1*A1+Y1*D1,v1=a1+($1+T1*D1)*U1):(R1=(G0+P1)*D1+Y1,v1=(D1+$1)*a1+T1*U1),e2=-(J1[v2-1]/H1[v2]),t2=-(J1[v2-2]+e2*H1[v2-1])/H1[v2],C=T1*t2*b0,T=e2*i1,a=e2*e2*R0,w=-(T+a)+C,y=-w+v1+e2*R1,y!=0&&(y0.a=-(($1*(a+T)+T1*(e2*b0+t2*i1))/y)+$1,y0.b=T1*(1+w/y)))}function q(_0,y0,G0,b0){var R0,i1,A1;if(b0.sr=b0.si=b0.lr=b0.li=0,_0==0){b0.sr=y0!=0?-(G0/y0):b0.sr;return}if(G0==0){b0.lr=-(y0/_0);return}R0=y0/2,Math.abs(R0)<Math.abs(G0)?(A1=G0>=0?_0:-_0,A1=-A1+R0*(R0/Math.abs(G0)),i1=Math.sqrt(Math.abs(A1))*Math.sqrt(Math.abs(G0))):(A1=-(_0/R0*(G0/R0))+1,i1=Math.sqrt(Math.abs(A1))*Math.abs(R0)),A1>=0?(i1=R0>=0?-i1:i1,b0.lr=(-R0+i1)/_0,b0.sr=b0.lr!=0?G0/b0.lr/_0:b0.sr):(b0.lr=b0.sr=-(R0/_0),b0.si=Math.abs(i1/_0),b0.li=-b0.si)}function J(_0,y0,G0,b0,R0,i1,A1,a1,U1,D1,P1,Y1){var $1=new Object,T1,J1,v2,H1,R1,v1,e2,t2,C,T,a,w=0,y,v=0;G0.NZ=0,v1=b0,t2=R0;do{if($1.li=$1.lr=$1.si=$1.sr=0,q(1,v1,t2,$1),G0.szr=$1.sr,G0.szi=$1.si,G0.lzr=$1.lr,G0.lzi=$1.li,Math.abs(Math.abs(G0.szr)-Math.abs(G0.lzr))>.01*Math.abs(G0.lzr))break;for(f0(A1,v1,t2,U1,i1,a1),J1=Math.abs(-(G0.szr*a1.b)+a1.a)+Math.abs(G0.szi*a1.b),T=Math.sqrt(Math.abs(t2)),T1=2*Math.abs(i1[0]),R1=-(G0.szr*a1.b),a=1;a<y0;a++)T1=T1*T+Math.abs(i1[a]);if(T1=T1*T+Math.abs(R1+a1.a),T1=(9*T1+2*Math.abs(R1)-7*(Math.abs(a1.a+R1)+T*Math.abs(a1.b)))*_0,J1<=20*T1){G0.NZ=2;break}if(w++,w>20)break;if(w>=2&&H1<=.01&&J1>=v2&&!v){for(H1=H1<_0?Math.sqrt(_0):Math.sqrt(H1),v1-=v1*H1,t2+=t2*H1,f0(A1,v1,t2,U1,i1,a1),a=0;a<5;a++)y=c0(_0,y0,a1.a,a1.b,P1,Y1,v1,t2,D1),O0(_0,y0,y,a1.a,a1.b,P1,Y1,D1,i1);v=1,w=0}v2=J1,y=c0(_0,y0,a1.a,a1.b,P1,Y1,v1,t2,D1),O0(_0,y0,y,a1.a,a1.b,P1,Y1,D1,i1),y=c0(_0,y0,a1.a,a1.b,P1,Y1,v1,t2,D1),Y(y,a1,a1.a,P1.a1,P1.a3,P1.a7,a1.b,P1.c,P1.d,P1.f,P1.g,P1.h,v1,t2,Y1,y0,U1),e2=a1.a,C=a1.b,C!=0&&(H1=Math.abs((-t2+C)/C),v1=e2,t2=C)}while(C!=0)}function k(_0,y0,G0,b0,R0,i1,A1,a1,U1){var D1,P1,Y1,$1,T1,J1,v2,H1,R1,v1,e2,t2=b0-1;for(y0.NZ=e2=R1=0,v2=G0.a;;){for(J1=R0[0],A1[0]=J1,v1=1;v1<i1;v1++)A1[v1]=J1=J1*v2+R0[v1];for(Y1=Math.abs(J1),$1=Math.abs(v2),D1=.5*Math.abs(A1[0]),v1=1;v1<i1;v1++)D1=D1*$1+Math.abs(A1[v1]);if(Y1<=20*_0*(2*D1-Y1)){y0.NZ=1,y0.szr=v2,y0.szi=0;break}if(e2++,e2>10)break;if(e2>=2&&Math.abs(H1)<=.001*Math.abs(-H1+v2)&&Y1>T1){R1=1,y0.a=v2;break}for(T1=Y1,U1[0]=P1=a1[0],v1=1;v1<b0;v1++)U1[v1]=P1=P1*v2+a1[v1];if(Math.abs(P1)>Math.abs(a1[t2])*10*_0)for(H1=-(J1/P1),a1[0]=A1[0],v1=1;v1<b0;v1++)a1[v1]=H1*U1[v1-1]+A1[v1];else for(a1[0]=0,v1=1;v1<b0;v1++)a1[v1]=U1[v1-1];for(P1=a1[0],v1=1;v1<b0;v1++)P1=P1*v2+a1[v1];H1=Math.abs(P1)>Math.abs(a1[t2])*10*_0?-(J1/P1):0,v2+=H1}return R1}function S0(_0,y0,G0,b0,R0,i1,A1,a1,U1,D1,P1,Y1){var $1=new Object,T1=new Object,J1=new Array(y0),v2=new Array(y0),H1,R1,v1,e2,t2,C,T,a,w,y,v,U,b,R,z,Q,a0,g0,e,u=1,m,N,B,o0,x0,n0;for(Y1.NZ=0,e2=v1=.25,t2=b0,a=R0,$1.b=$1.a=0,f0(U1,P1,R0,a1,D1,$1),H1=$1.a,R1=$1.b,T1.h=T1.g=T1.f=T1.e=T1.d=T1.c=T1.a7=T1.a3=T1.a1=0,o0=c0(_0,A1,H1,R1,T1,i1,P1,R0,J1),m=0;m<G0;m++){if(g0=1,O0(_0,A1,o0,H1,R1,T1,i1,J1,D1),o0=c0(_0,A1,H1,R1,T1,i1,P1,R0,J1),Y(o0,$1,H1,T1.a1,T1.a3,T1.a7,R1,T1.c,T1.d,T1.f,T1.g,T1.h,P1,R0,i1,A1,a1),z=$1.a,a0=Q=$1.b,y=i1[A1-1]!=0?-(a1[A1]/i1[A1-1]):0,v=b=1,m!=0&&o0!=3&&(b=a0!=0?Math.abs((a0-a)/a0):b,v=y!=0?Math.abs((y-t2)/y):v,R=b<T?b*T:1,U=v<C?v*C:1,x0=R<e2?1:0,N=U<v1?1:0,N||x0)){for(e=0;e<A1;e++)v2[e]=i1[e];for(w=y,B=n0=0;;){if(!(g0&&(g0=0)==0&&N&&(!x0||U<R))){if(J(_0,A1,Y1,z,Q,D1,U1,$1,a1,J1,T1,i1),H1=$1.a,R1=$1.b,Y1.NZ>0)return;if(u=n0=1,e2*=.25,B||!N)u=0;else for(e=0;e<A1;e++)i1[e]=v2[e]}if(u!=0){if($1.a=w,u=k(_0,Y1,$1,A1,a1,U1,D1,i1,J1),w=$1.a,Y1.NZ>0)return;if(B=1,v1*=.25,u!=0){z=-(w+w),Q=w*w;continue}}for(e=0;e<A1;e++)i1[e]=v2[e];if(!x0||n0)break}f0(U1,P1,R0,a1,D1,$1),H1=$1.a,R1=$1.b,o0=c0(_0,A1,H1,R1,T1,i1,P1,R0,J1)}a=a0,t2=y,T=b,C=v}}function E0(_0,y0,G0,b0){var R0=_0.Degree,i1=3.141592653589793/180,A1=Math.LN2,a1=_0.Degree+1,U1=new Array(a1),D1=new Array(a1),P1=new Array(a1),Y1=new Array(a1),$1=new Object,T1=new Object,J1,v2,H1,R1,v1,e2,t2,C,T,a,w,y,v,U,b,R,z,Q,a0,g0,e,u,m,N;y=1;do v2=y,y/=2,v=1+y;while(v>1);var B=Number.MIN_VALUE/v2,o0=Math.cos(94*i1),x0=Math.sin(94*i1),n0=Math.sqrt(.5),W0=-n0;for(T1.NZ=a0=0,T1.szr=T1.szi=T1.lzr=T1.lzi=0;y0[R0]==0;)G0[a0]=b0[a0]=0,R0--,a0++;for(m=R0+1;R0>=1;){if(R0<=2){R0<2?(G0[_0.Degree-1]=-(y0[1]/y0[0]),b0[_0.Degree-1]=0):($1.li=$1.lr=$1.si=$1.sr=0,q(y0[0],y0[1],y0[2],$1),G0[_0.Degree-2]=$1.sr,b0[_0.Degree-2]=$1.si,G0[_0.Degree-1]=$1.lr,b0[_0.Degree-1]=$1.li);break}for(t2=0,C=Number.MAX_VALUE,V0=0;V0<m;V0++)a=Math.abs(y0[V0]),a>t2&&(t2=a),a!=0&&a<C&&(C=a);if(T=B/C,(T<=1&&t2>=10||T>1&&Number.MAX_VALUE/T>=t2)&&(T=T==0?Number.MIN_VALUE:T,e=Math.floor(Math.log(T)/A1+.5),v1=Math.pow(2,e),v1!=1))for(V0=0;V0<m;V0++)y0[V0]*=v1;for(var V0=0;V0<m;V0++)D1[V0]=Math.abs(y0[V0]);D1[R0]=-D1[R0],u=R0-1,a=Math.exp((Math.log(-D1[R0])-Math.log(D1[0]))/R0),D1[u]!=0&&(w=-D1[R0]/D1[u],a=w<a?w:a),w=a;do{a=w,w=.1*a,e2=D1[0];for(var V0=1;V0<m;V0++)e2=e2*w+D1[V0]}while(e2>0);R1=a;do{H1=e2=D1[0];for(var V0=1;V0<R0;V0++)e2=a*e2+D1[V0],H1=a*H1+e2;e2=a*e2+D1[R0],R1=e2/H1,a-=R1}while(Math.abs(R1/a)>.005);J1=a;for(var V0=1;V0<R0;V0++)U1[V0]=(R0-V0)*y0[V0]/R0;for(U1[0]=y0[0],y=y0[R0],v=y0[u],N=U1[u]==0?1:0,g0=0;g0<5;g0++)if(U=U1[u],N){for(var V0=0;V0<u;V0++)a0=u-V0,U1[a0]=U1[a0-1];U1[0]=0,N=U1[u]==0?1:0}else{R=-y/U;for(var V0=0;V0<u;V0++)a0=u-V0,U1[a0]=R*U1[a0-1]+y0[a0];U1[0]=y0[0],N=Math.abs(U1[u])<=Math.abs(v)*v2*10?1:0}for(var V0=0;V0<R0;V0++)Y1[V0]=U1[V0];for(g0=1;g0<=20;g0++)if(Q=-(x0*W0)+o0*n0,W0=x0*n0+o0*W0,n0=Q,b=J1*n0,z=-(2*b),S0(v2,a1,20*g0,b,J1,U1,R0,y0,m,P1,z,T1),T1.NZ!=0){a0=_0.Degree-R0,G0[a0]=T1.szr,b0[a0]=T1.szi,m=m-T1.NZ,R0=m-1;for(var V0=0;V0<m;V0++)y0[V0]=P1[V0];T1.NZ!=1&&(G0[a0+1]=T1.lzr,b0[a0+1]=T1.lzi);break}else for(var V0=0;V0<R0;V0++)U1[V0]=Y1[V0];if(g0>20){_0.Degree-=R0;break}}}E0(W,S,X,O);var U0=O.length;for(l1=0;l1<U0;l1++){var h0=o1(O[l1],h+8),l0=o1(X[l1],h+8);l0=h-String(l0).length>2?l0:X[l1];var F0=h0<0?"-":"";l0===0&&(l0=""),h0===0&&(h0=""),h0=Math.abs(h0)===1?F0+"i":h0?h0+"*i":"";var L0=l0&&h0?l0+"+"+h0:l0+h0;X[l1]=L0.replace(/\+\-/g,"-")}return X}},roots:function(i){if(i.isConstant(!0,!0))return A.Utils.nroots(i);var h=Z.proots(i).map(function(l){return r.parse(l)});return A.Vector.fromArray(h)},froot:function(i,h,l){var f=function(d){for(var E=1e-12,L=l||A.Utils.build(A.Calculus.diff(i.clone())),x=i instanceof Function?i:A.Utils.build(i),H=1e4,u0=!1,q0=0;!u0;){var d0=d-x(d)/L(d),Q0=Math.abs(d0)-Math.abs(d),t1=Math.abs(Q0);d=d0,t1<E?u0=!0:q0>H&&(d=null,u0=!0),q0++}return d};return f(Number(h))},quad:function(i,h,l){var f=function(d,E,L,x){return r.parse("-("+E+"+"+x+"*sqrt(("+E+")^2-4*("+d+")*("+L+")))/(2*"+d+")")};return[f(i,h,l,1),f(i,h,l,-1)]},sumProd:function(i,h){return Z.quad(-h,i,-1).map(function(l){return l.invert()})},coeffs:function(i,h,l){h=String(h),i=r.expand(i),l=l||[new p0(0)],i.group===T0&&i.contains(h,!0)&&r.error("Unable to get coefficients using expression "+i.toString());var f=f1(i);if(f.length===1&&f[0]===h&&!i.isImaginary())for(var d=new c1(i).coeffs.map(function(d0){return new p0(d0)}),E=0,L=d.length;E<L;E++){var x=d[E],H=l[E];H&&(x=r.add(H,x)),l[E]=x}else if(h||r.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),f.indexOf(h)===-1)l[0]=r.add(i,l[0]);else if(l=l||[new p0(0)],i.group===e0){var u0=i.symbols[h];u0||r.error("Expression is not a polynomial!");var q0=Number(u0.power);x=r.divide(i.clone(),u0.clone()),(x.contains(h,!0)||q0<0||!z0(q0))&&r.error("Expression is not a polynomial!");var H=l[q0];H&&(x=r.add(H,x)),l[q0]=x}else i.group===$&&i.each(function(d0){Z.coeffs(d0.clone(),h,l)},!0);for(var E=0,L=l.length;E<L;E++)typeof l[E]=="undefined"&&(l[E]=new p0(0));return l},polyPowers:function(i,h,l){l=l||[];var f=f=i.group;if(f===N0&&h===i.value)l=l.concat(x1(i.symbols));else if(f===$)for(var d in i.symbols){var E=i.symbols[d],f=E.group,L=E.value;if(f===N1&&h===L)l.push(E.power);else if(f===N0||f===$)l=Z.polyPowers(E,h,l);else if(f===e0&&E.contains(h)){var x=E.symbols[h];x&&l.push(x.power)}else(f===F||h!==L)&&l.push(0)}else f===e0&&i.contains(h)&&l.push(A.Utils.decompose_fn(i,h,!0).x.power);return A.Utils.arrayUnique(l).sort()},Factor:{split:function(i){var h=new p0(1),l=new p0(1);return Z.Factor.factor(i,new b1).each(function(f){var d=r.parse(f);f.isConstant(!0)?h=r.multiply(h,d):l=r.multiply(l,d)}),[h,l]},mix:function(i,h){for(var l=x1(i),f=l.length,d=[],E=0;E<f;E++){for(var L=l[E],x=i[L],H=d.length,u0=0;u0<H;u0++){var q0=d[u0]*L;d.push(q0),h&&d.push(-q0)}for(var u0=1;u0<=x;u0++)d.push(Math.pow(L,u0))}return d},common:function(i,h){try{if(i.group===$){for(var l=r.expand(i.clone(),!0).collectSymbols(null,null,function(q0,d0){return(d0.length||1)-(q0.length||1)}),f={},d=[],E=0;E<l.length;E++){var L=l[E];d.push(L.multiplier.clone()),L.each(function(q0){var d0=Number(q0.power);if(isNaN(d0))throw new Error("exiting");q0.value in f?(d0<f[q0.value][0]&&(f[q0.value][0]=d0),f[q0.value][1].push(q0)):f[q0.value]=[d0,[q0]]})}var x=new p0(1);for(var H in f)f[H][1].length===l.length&&(x=r.multiply(x,r.pow(new p0(H),new p0(f[H][0]))));var u0=A.Math2.QGCD.apply(null,d);if(!u0.equals(1)){h.add(new p0(u0));for(var E=0;E<l.length;E++)l[E].multiplier=l[E].multiplier.divide(u0)}if(!x.equals(1)){h.add(x),i=new p0(0);for(var E=0;E<l.length;E++)i=r.add(i,r.divide(l[E],x.clone()))}}}catch{}return i},zeroes:function(i,h){var l=function(){throw new A.exceptions.ValueLimitExceededError("Exiting")};try{var f,d,E,L,x;i=r.expand(i.clone()),x=i.toString(),f=f1(i),E=new p0(0);for(var H=[],u0=[],q0=0,d0=f.length;q0<f.length;q0++){for(var Q0={},t1=0;t1<d0;t1++)q0!==t1&&(Q0[f[t1]]=0);d=r.parse(x,Q0);var l1=d.power;z0(l1)||l(),H.push(d),u0.push(d.power)}if(A.Utils.allSame(u0)){var r0=i.length,w0=H.length;w0===2&&(L=new $0(u0[0]/(r0-1))),w0===3&&(L=new $0(u0[0]/Math.round((Math.sqrt(8*r0-1)-3)/2)))}else L=A.Math2.QGCD.apply(null,u0);z0(L)||l();for(var q0=0;q0<H.length;q0++){var I0=H[q0],i0=I0.power.clone().divide(L);I0.multiplier=new $0(Math.pow(I0.multiplier,1/i0)),I0.power=L.clone(),E=r.add(E,I0)}if(E.group!==$)return i;for(;;){var k0=Z.div(i.clone(),E.clone());if(k0[1].equals(0)){if(i=k0[0],h.add(E.clone()),i.equals(1))break}else break}}catch{}return i},factor:function(i,h){if(i.isConstant())return A.Math2.factor(i);var l=r.parse(i),f=Z.Factor._factor(l,h);if(f.equals(i))return f;if(f.group===e0){var d=new p0(1),E=r.parse(f.power),L=r.parse(f.multiplier);f.toUnitMultiplier(),f.multiplier.lessThan(0)&&(d.negate(),f.negate()),f.each(function(x){var H=r.parse(Z.Factor._factor(x));H.group===e0?(L=r.multiply(L,p0.create(H.multiplier)),H.each(function(u0){var q0=r.parse(Z.Factor._factor(u0));d=r.multiply(d,q0),q0.group===e0&&(L=r.multiply(L,p0.create(q0.multiplier)))})):d=r.multiply(d,H)}),f=r.pow(r.multiply(L,d),E)}return f},quadFactor:function(i,h){if(i.isPoly()&&Z.degree(i.equals(2))){var l=A.Utils.variables(i)[0],f=Z.coeffs(i,l),d=Z.Factor._factor(f[2].clone());if(d.group===e0){var E=d.collectSymbols();if(E.length>2)return i;var L=r.multiply(r.parse(f[0]),r.parse(E[0])),x=r.parse(f[1]).negate(),H=r.parse(E[1]),u0=Z.quad(H,x,L).filter(function(Q0){if(A.Utils.isInt(Q0))return Q0});if(u0.length===1){var q0=u0[0],d0=r.divide(f[0],r.parse(q0));A.Utils.isInt(d0)&&(h.add(r.parse(X0("({0})*({1})+({2})",E[1],l,d0))),h.add(r.parse(X0("({0})*({1})+({2})",E[0],l,q0))),i=new p0(1))}}}return i},cubeFactor:function(i,h){if(i.isComposite()){var l=i.collectSymbols();if(l.length===2){var f=l[0].sign(),d=l[0].clone().abs(),E=l[1].sign(),L=l[1].clone().abs();if(d.isCube()&&L.isCube()){f<E&&([f,E]=[E,f],[d,L]=[L,d]);var x=r.parse(d.getNth(3)),H=r.parse(L.getNth(3)),u0=r.multiply(r.expand(r.pow(d.clone().toUnitMultiplier(),r.parse("1/3"))),x),q0=r.multiply(r.expand(r.pow(L.clone().toUnitMultiplier(),r.parse("1/3"))),H);f===1&&E===-1?(h.add(r.parse(X0("(({0})-({1}))",u0,q0))),h.add(r.parse(X0("(({0})^2+({0})*({1})+({1})^2)",u0,q0))),i=p0(1)):f===1&&E===1&&(h.add(r.parse(X0("(({0})+({1}))",u0,q0))),h.add(r.parse(X0("(({0})^2-({0})*({1})+({1})^2)",u0,q0))),i=p0(1))}}}return i},_factor:function(i,h){if(i.group,i.group===X1){var l=i.args[0];if(l.group===N1&&l.isSimple())return i}else if(i.group===N1&&i.isSimple())return i;if(i.group===$){i.distributeMultiplier(!0);var f=new p0(0);i.each(function(X){(X.group===$&&X.power.greaterThan(1)||X.group===e0)&&(X=r.expand(X)),f=r.add(f,X)}),f.power=i.power,i=f}i.group===X1&&i.fname!=="sqrt"&&(i=A.Utils.evaluate(i));var d=i.clone();try{if(i.group===e0){var r0=r.parse(i.power),E,L,x,H,u0,q0;if(E=Z.Simplify.strip(i.getDenom()),L=Z.Simplify.strip(i.getNum()),x=E.pop(),H=L.pop(),H.equals(i))return i;q0=Z.Factor.factor(H),u0=Z.Factor.factor(x);var d0=Z.Simplify.unstrip(L,q0),Q0=Z.Simplify.unstrip(E,u0),t1=r.divide(d0,Q0);return t1}if(i.group===N1)return i;if(i.isConstant()){if(i.equals(1))return i.clone();var l1=A.Math2.factor(i);return l1}var r0=i.power.clone();if(z0(r0)&&!(r0.lessThan(0)&&i.group===X1)){var w0=r0.sign();i.toLinear(),h=h||new b1;var I0={};i=r.parse(A.Utils.subFunctions(i,I0)),x1(I0).length>0&&(h.preAdd=function(f0){var c0=r.parse(f0,A.Utils.getFunctionsSubs(I0));return c0}),i.isLinear()||(h.pFactor=i.power.toString(),i.toLinear());var i0=f1(i);i.isImaginary()&&i0.push(A.Settings.IMAGINARY);var k0=i0.length>1;if(k0){var d1=!0,H0=!0;if(i.each(function(f0){f0.group!==N1&&(d1=!1),f0.multiplier.equals(1)||(H0=!1)}),d1&&H0)return r.pow(r.parse(i,A.Utils.getFunctionsSubs(I0)),r.parse(r0))}var s0=new b1;i=Z.Factor.coeffFactor(i,s0),s0.each(function(f0){A0(r0)&&f0.lessThan(0)&&f0.negate(),w0<0&&f0.invert(),h.add(f0)});var M0=new b1;if(i=Z.Factor.powerFactor(i,M0),M0.each(function(f0){w0<0&&f0.invert(),h.add(f0)}),k0)i=Z.Factor.cubeFactor(i,h),i=Z.Factor.mfactor(i,h),h.each(function(f0){w0<0&&f0.power.negate()});else{var n1=i0[0];i=Z.Factor.squareFree(i,h,n1);var m1=new b1;i=Z.Factor.trialAndError(i,m1,n1);var _=m1.toSymbol();if(_.equals(d))return _;for(var S in m1.factors){var O=m1.factors[S];h.add(r.pow(O,r.parse(r0)))}i.equals(d)&&(i=Z.Factor.quadFactor(i,h))}i=r.parse(i,A.Utils.getFunctionsSubs(I0));var W=h.length===1;h.add(r.pow(i,r.parse(r0)));var t1=h.toSymbol();return W&&i.equals(1)&&t1.isLinear()&&(t1=r.pow(t1,r.parse(r0))),t1}return i}catch{return d}},reduce:function(i,h){if(i.group===$&&i.length===2){var l=i.collectSymbols().sort(function(d0,Q0){return Q0.multiplier-d0.multiplier});if(l[0].power.equals(l[1].power)){var f=r.parse(l[0].power),d=l[0].clone().toLinear(),E=l[1].clone().toLinear();h.add(r.add(d.clone(),E.clone())),E.negate();for(var L=Number(f),x=new p0(0),H=1;H<=L;H++){var u0=r.pow(d.clone(),r.subtract(f.clone(),new p0(H))),q0=r.pow(E.clone(),r.subtract(new p0(H),new p0(1)));x=r.add(x,r.multiply(u0,q0))}return x}}return i},squareFree:function(i,h,l){if(i.isConstant()||i.group===N1)return i;var f=new c1(i,l),d=f.squareFree(),E=d[2];if(E!==1){var L=d[1].toSymbol();L.power=L.power.multiply(new $0(E)),h.add(Z.Factor.factor(L));var x=Z.Factor.squareFree(d[0].toSymbol(),h);return x}return i},powerFactor:function(i,h){if(i.group!==N0||i.previousGroup===T0)return i;var l=x1(i.symbols);if(!A.Utils.allNumeric(l))return i;var f=A.Utils.arrayMin(l),d=new p0(0),E=r.parse(i.value+"^"+f);return i.each(function(L){L=r.divide(L,E.clone()),d=r.add(d,L)}),h.add(E),d},coeffFactor:function(i,h){if(i.isComposite()){var l=A.Math2.QGCD.apply(null,i.coeffs());if(!l.equals(1))i.each(function(L){L.isComposite()?L.each(function(x){x.multiplier=x.multiplier.divide(l)}):L.multiplier=L.multiplier.divide(l)}),i.updateHash();else{var f=function(L){var x;return L.group===e0?(x=0,L.each(function(H){x+=H.power})):x=Number(L.power),x},d=i.collectSymbols(null,null,null,!0).sort(function(L,x){return L.isConstant(!0)?1:x.power-L.power}),E=d[0];(f(E)>f(d[1])||d[1].isConstant(!0))&&E.multiplier.lessThan(0)&&(h.add(new p0(-1)),i.each(function(L){L.negate()},!0))}h&&h.add(new p0(l))}return i},trialAndError:function(i,h,l){var f=i.clone();try{var d=[];if(i.isConstant()||i.group===N1)return i;for(var E=new c1(i,l),L=E.coeffs[0],x=A.Math2.ifactor(L),H=Z.proots(i),u0=0;u0<H.length;u0++){var q0=H[u0],d0=1;if(!isNaN(q0)){for(var Q0 in x){var t1=A.Utils.round(Math.log(Q0)/Math.log(Math.abs(q0)),8);if(z0(t1)){q0=Q0,d0=t1;break}}var l1=new $0(q0),r0=[new $0(l1.num).negate()];r0[d0]=new $0(l1.den);var w0=c1.fromArray(r0,E.variable).fill(),I0=E.divide(w0);I0[1].equalsNumber(0)&&(E=I0[0],d.push(w0.toSymbol()))}}return E.equalsNumber(1)||(E=Z.Factor.search(E,h)),d.forEach(function(i0){h.add(i0)}),E.toSymbol()}catch{return f}},search:function(i,h,l){l=l||10;var f=i.variable,d=function(k0,d1,H0,s0){var M0=c1.fit(k0,d1,H0,l,s0,f);if(M0&&M0.coeffs.length>1){var n1=i.divide(M0);if(n1[1].equalsNumber(0))return h.add(M0.toSymbol()),[n1[0],M0]}return null},E=i.coeffs[0],L=A.Math2.ifactor(E),x=i.lc(),H=A.Math2.ifactor(x),u0=i.sub(l),q0=A.Math2.ifactor(u0),d0=Z.Factor.mix(q0,u0<0),Q0=Math.ceil(i.coeffs.length/2),t1=x.lessThan(0),l1=E.lessThan(0);for(H[1]=1,L[1]=1;Q0--;)for(var r0 in H)for(var w0 in L)for(var I0=0;I0<d0.length;I0++){var i0=d(r0,w0,d0[I0],Q0);if(i0)return i=i0[0],A.Utils.isPrime(i.sub(l))||(i=Z.Factor.search(i,h)),i;i0||(t1&&l1?i0=d(-r0,-w0,d0[I0],Q0):t1?i0=d(-r0,w0,d0[I0],Q0):l1&&(i0=d(r0,-w0,d0[I0],Q0)))}return i},mSqfrFactor:function(i,h){if(i.group!==X1)for(var l=f1(i).reverse(),f=0;f<l.length;f++)do{if(l[f]===i.value){h.add(i),i=new p0(1);continue}var d=A.Calculus.diff(i,l[f]),E=Z.Factor.coeffFactor(d);if(E.equals(0))break;var L=!0;if(E.isConstant()&&i.isComposite()&&i.each(function(u0){u0.multiplier%E!==0&&(L=!1)},!0),L){var x=Z.div(i,E.clone()),H=x[1].equals(0);if(i.equals(x[0])&&x[1].equals(0))break;if(x[0].isConstant()){h.add(x[0]);break}}else H=!1;H&&(h.add(x[0]),i=E)}while(H);return i},sqdiff:function(i,h){if(i.isConstant("all"))return i;try{var l=function(q0){return A.Utils.block("POSITIVE_MULTIPLIERS",function(){return p0.unwrapPARENS(F1.sqrt(F1.abs(q0)))},!0)},f=A.Utils.separate(i.clone()),d=[];for(var E in f)E!=="constants"&&d.push(f[E]);if(d.sort(function(q0,d0){return d0.power-q0.power}),d.length===2){var L,x;if(L=d.pop(),x=d.pop(),A0(L.power)&&A0(x.power)&&L.sign()===x.sign()&&L.group===N1&&x.group===N1)throw new Error("Unable to factor");if(L.isComposite()&&x.power.equals(2)){x=l(x);var H=Z.Factor.factor(r.add(L,f.constants));H.power.equals(2)&&(H.toLinear(),h.add(r.subtract(H.clone(),x.clone())),h.add(r.add(H,x)),i=new p0(1))}else if(L=L.powSimp(),x=x.powSimp(),(L.group===N1||L.fname==="")&&L.power.equals(2)&&(x.group===N1||x.fname==="")&&x.power.equals(2)&&!f.constants){if(L.multiplier.lessThan(0)){var u0=x;x=L,L=u0}L.multiplier.greaterThan(0)&&(L=l(L),x=l(x)),h.add(r.subtract(L.clone(),x.clone())),h.add(r.add(L,x)),i=new p0(1)}}}catch{}return i},mfactor:function(i,h){if(i.group===X1)if(i.fname==="sqrt"){var l=new b1,f=Z.Factor.common(i.args[0].clone(),l);f=Z.Factor.coeffFactor(f,l),i=r.multiply(r.symfunction("sqrt",[f]),r.parse(i.multiplier)),l.each(function(m1){i=r.multiply(i,r.parse(A.Utils.format("sqrt({0})",m1)))})}else h.add(i);else{i=Z.Factor.mSqfrFactor(i,h);for(var d=f1(i),E=i.collectSymbols().map(function(m1){return p0.unwrapSQRT(m1)}),L={},x={},H=d.length,u0=E.length,q0=0;q0<H;q0++){var d0=d[q0];L[d0]=new p0(0);for(var Q0=0;Q0<u0;Q0++){var t1=E[Q0];if(t1.contains(d0)){var l1=t1.value===d0?t1.power.toDecimal():t1.symbols[d0].power.toDecimal();(!x[d0]||l1<x[d0])&&(x[d0]=l1),L[d0]=r.add(L[d0],t1.clone())}}}for(var r0 in L){var w0=r.parse(r0+"^"+x[r0]),I0=r.divide(L[r0],w0),i0=r.expand(I0);if(i0.equals(1))break;var k0=Z.div(i.clone(),i0);if(k0[0].equals(0))break;if(k0[1].equals(0)){var d1=!1;if(k0[0].each(function(m1){z0(m1.multiplier)||(d1=!0)}),d1){k0[1]=r.expand(r.multiply(k0[1],i0));break}}var H0=z0(i0)&&i0.lessThan(0);if(k0[1].equals(0)&&!H0){var s0=Z.div(i.clone(),k0[0].clone()),w0=s0[0];if(w0.equals(0)||(i=s0[1],w0.equals(-1)&&!i.equals(0)))return i;var M0=k0[0];if(i.equals(M0)){var n1=Z.Factor.reduce(M0,h);return i.equals(n1)?n1:Z.Factor.mfactor(n1,h)}else if(h.add(M0),i.equals(0))return w0;return w0.isConstant("all")?(h.add(w0),w0):Z.Factor.mfactor(w0,h)}}}return i=Z.Factor.sqdiff(i,h),i=Z.Factor.zeroes(i,h),i}},allLinear:function(i){for(var h=i.length,l=0;l<h;l++)if(!Z.isLinear(i[l]))return!1;return!0},isLinear:function(i){var h=!1,l=i.group;if(l===N0||l===$){h=!0;for(var f in i.symbols){var d=i.symbols[f],E=d.group;if((E===X1||E===T0)&&(h=!1),E===e0)h=f1(d).length===1;else if(E===N0||E===$)h=Z.isLinear(d);else if(d.group!==F&&d.power.toString()!=="1"){h=!1;break}}}else l===N1&&i.power===1&&(h=!0);return h},gcd:function(){var i;if(arguments.length===1&&arguments[0]instanceof A.Vector?i=arguments[0].elements:i=A.Utils.arguments2Array(arguments),i.length===0)return new p0(1);if(i.length===1)return i[0];for(var h=[],l=!1,f=0;f<i.length;f++)if(i[f].group===X1&&i[f].fname==="gcd")i=i.concat(arguments[f].args),i.splice(f,1);else{var d=f1(i[f]);if(A.Utils.haveIntersection(d,h)){l=!0;break}else h=h.concat(d)}if(l||h.length===0)if(i.every(function(L){return L.getDenom().equals(1)})){for(var E=i[0],f=1;f<i.length;f++)E=Z.gcd_(i[f],E);return E}else return r.divide(Z.gcd.apply(null,i.map(function(L){return L.getNum()})),Z.lcm.apply(null,i.map(function(L){return L.getDenom()})));else return r.symfunction("gcd",i)},gcd_:function(i,h){if((i.group===X1||i.group===_1)&&(i=A.Utils.block("PARSE2NUMBER",function(){return r.parse(i)})),h.group===X1&&(h=A.Utils.block("PARSE2NUMBER",function(){return r.parse(h)})),i.isConstant()&&h.isConstant())return new p0(A.Math2.QGCD(new $0(+i),new $0(+h)));var l=r.multiply(i.getDenom()||new p0(1),h.getDenom()||new p0(1)).invert();if(i=r.multiply(i.clone(),l.clone()),h=r.multiply(h.clone(),l.clone()),i=r.expand(i),h=r.expand(h),i.group===e0||h.group===e0){var f=r.divide(i.clone(),h.clone()),d=r.multiply(h.clone(),f.getDenom().invert());if(!d.equals(1))return d}if(i.group===T0||h.group===T0){var E=new p0(A.Math2.GCD(i.multiplier,h.multiplier)),L=Z.gcd_(i.value===q1?new p0(1):r.parse(i.value),h.value===q1?new p0(1):r.parse(h.value)),x=Z.gcd_(r.parse(i.power),r.parse(h.power));return r.multiply(E,r.pow(L,x))}if(i.length<h.length){var d=i;i=h,h=d}var H=f1(i),u0=f1(h);if(H.length===u0.length&&H.length===1&&H[0]===u0[0]||H.length===1&&u0.length===0||H.length===0&&u0.length===1)return i=new c1(i),h=new c1(h),r.divide(i.gcd(h).toSymbol(),l);var q0=[];i.each(function(t1){q0.push(t1.multiplier)}),h.each(function(t1){q0.push(t1.multiplier)});for(var d0;!h.equals(0);){var d=h.clone();if(i=i.clone(),d0=Z.div(i,d),h=d0[1],d0[0].equals(0))return r.divide(new p0(A.Math2.QGCD(i.multiplier,h.multiplier)),l);i=d}var Q0=A.Math2.QGCD.apply(void 0,q0);return Q0.equals(1)||i.each(function(t1){t1.multiplier=t1.multiplier.divide(Q0)}),i.equals(1)&&!i.isConstant()&&!h.isConstant()?r.divide(r.symfunction("gcd",arguments),l):r.divide(i,l)},lcm:function(){var i;arguments.length===1?arguments[0]instanceof A.Vector?i=arguments[0].elements:r.error("lcm expects either 1 vector or 2 or more arguments"):i=A.Utils.arguments2Array(arguments);var h=i.reduce(function(E,L){return r.multiply(E,L.clone())},new p0(1)),l=function(E,L){L=Number(L);var x=[],H,u0,q0,d0=Math.pow(2,E.length);for(u0=L;u0<d0;u0++){H=[],q0=E.length-1;do(u0&1<<q0)!==0&&H.push(E[q0]);while(q0--);H.length===L&&x.push(H)}return x}(arguments,arguments.length-1).map(function(E){return E.reduce(function(L,x){return r.multiply(L,x.clone())},new p0(1))}),f;i.every(function(E){return A.Utils.isVariableSymbol(E)})?f=r.symfunction("gcd",A.Utils.arrayUnique(l)):f=Z.gcd.apply(null,l);var d=r.divide(h,f);return d},divide:function(i,h){var l,f,d,E;return d=A.Algebra.Factor.factor(i.clone()),E=d.getDenom(),E.isConstant("all")?E=new p0(1):i=r.expand(p0.unwrapPARENS(r.multiply(d,E.clone()))),l=Z.div(i,h),f=r.divide(l[1],h),r.divide(r.add(l[0],f),E)},div:function(i,h){var l=[new p0(0),i.clone()];try{if(h.isConstant("all"))return i.each(function(L0){L0.multiplier=L0.multiplier.divide(h.multiplier)}),[i,new p0(0)];if(i=r.expand(i),h=r.expand(h),i.group===N1&&h.group===$){var f=i.value,d=A.Utils.decompose_fn(h.clone(),f,!0);if(i.isLinear()&&d.x&&d.x.isLinear()&&h.isLinear()){var E=p0.create(i.multiplier);return[r.divide(E.clone(),d.a.clone()),r.divide(r.multiply(E,d.b),d.a).negate()]}}if(i.group===N1&&h.group===N1){var L=r.divide(i.clone(),h.clone());return L.isConstant()?[L,new p0(0)]:[new p0(0),i.clone()]}var x=i.hasFunc(),H=h.hasFunc(),u0=!1;if(x||H){u0=!0;var q0={},i=r.parse(A.Utils.subFunctions(i,q0)),h=r.parse(A.Utils.subFunctions(h,q0)),d0=A.Utils.getFunctionsSubs(q0)}var Q0=A.Utils.arrayUnique(f1(i).concat(f1(h))),t1,l1;if((i.isImaginary()||h.isImaginary())&&Q0.push(A.Settings.IMAGINARY),Q0.length===1){var r0=new c1(i).divide(new c1(h));t1=r0[0].toSymbol(),l1=r0[1].toSymbol()}else{Q0.push(q1);var w0=function(L0){for(var _0=new p0(0),y0=0;y0<L0.length;y0++){var G0=L0[y0].toSymbol();_0=r.add(_0,G0)}return _0},I0=function(L0,_0){var y0=Math.max.apply(null,L0.terms),G0=0,b0;if(!_0){for(var R0=0;R0<L0.terms.length;R0++)if(L0.terms[R0].equals(y0)&&(b0=R0,G0++),G0>1)return}if(_0){for(R0=0;R0<L0.terms.length;R0++)if(L0.terms[R0].equals(y0)){b0=R0;break}}return[y0,b0,L0]},i0=function(L0,_0){_0=_0||0;var y0=L0[_0],G0=L0.length;if(!!y0){for(var b0=I0(y0),R0=_0+1;R0<G0;R0++){var i1=L0[R0],A1=y0.sum.equals(i1.sum);if(!A1&&b0)break;if(A1){for(var a1,U1,D1,P1,Y1=y0.terms.length,$1=0;$1<Y1;$1++){var T1=y0.terms[$1],J1=i1.terms[$1];(typeof a1=="undefined"||T1.greaterThan(a1))&&(a1=T1,D1=$1),(typeof U1=="undefined"||J1.greaterThan(U1))&&(U1=J1,P1=$1)}var v2=a1.subtract(i1.terms[D1]),H1=U1.subtract(y0.terms[P1]);if(H1>v2){b0=[U1,P1,i1];break}if(v2>H1){b0=[a1,D1,y0];break}}else if(b0=I0(i1),b0)break;b0=I0(i1)}if(!b0)return I0(L0[0],!0);for(var R1,v1,R0=0;R0<M0.length;R0++){var e2=M0[R0].terms;if(v1=b0[1],v1===e2.length-1)return;if(R1=e2[v1],!R1.equals(0))break}return R1.equals(0)?i0(L0,++_0):b0}},k0=A.Utils.toMapObj(Q0),d1=function(L0,_0){return _0.sum.subtract(L0.sum)},H0=function(L0,_0){if(!L0||!_0)return!1;for(var y0=0;y0<L0.terms.length;y0++)if(L0.terms[y0].lessThan(_0.terms[y0]))return!1;return!0},s0=i.tBase(k0).sort(d1),M0=h.tBase(k0).sort(d1),n1=H0(s0[0],M0[0])&&s0[0].count>M0[0].count?M0:s0,m1=i0(n1),_=[];if(m1){var S=m1[1],O=function(L0,_0){return L0[0].sum.equals(_0[0].sum)?L0.length>=_0.length:!0},W=function(L0,_0,y0){for(var G0=[],b0=0;b0<L0.length;b0++)for(var R0=L0[b0],i1=0;i1<R0.terms.length;i1++){var A1=G0[i1],a1=R0.terms[i1];b0===0?G0[i1]=a1:A1&&!A1.equals(a1)&&(G0[i1]=void 0)}for(var b0=0;b0<G0.length;b0++){var R0=G0[b0];if(R0&&!R0.equals(0))return b0}return y0},X=function(L0,_0){var y0=L0.len(),G0=_0.len(),b0=_0.terms[S],R0=L0.terms[S];return G0>y0&&b0.greaterThan(R0)?G0-y0:b0.subtract(R0)};S=W(s0,M0,S),s0.sort(X),M0.sort(X);var f0=M0[0],c0=s0[0],O0=new Z0(new $0(1),[],c0.map);if(f0.sum.greaterThan(c0.sum)&&c0.len()>1)for(var Y=0;Y<c0.terms.length;Y++){var q=f0.terms[Y].subtract(c0.terms[Y]);if(q.equals(0))O0.terms[Y]=new $0(0);else{var J=q.add(new $0(1));O0.terms[Y]=q;for(var k=0;k<s0.length;k++)s0[k].terms[Y]=s0[k].terms[Y].add(J)}}for(var S0=H0(s0[0],M0[0]),E0=0,U0=200;S0&&O(s0,M0);){if(E0++>U0)throw new A.exceptions.InfiniteLoopError("Unable to compute!");var r0=s0[0].divide(M0[0]);_.push(r0),s0.shift();for(var Y=1;Y<M0.length;Y++){var h0=M0[Y].multiply(r0).generateImage(),l0=s0.length;l0===0&&(h0.coeff=h0.coeff.neg(),s0.push(h0),s0.sort(X));for(var k=0;k<l0;k++){var F0=s0[k];if(F0.getImg()===h0.getImg()){F0.coeff=F0.coeff.subtract(h0.coeff),F0.coeff.equals(0)&&(A.Utils.remove(s0,k),k--);break}k===l0-1&&(h0.coeff=h0.coeff.neg(),s0.push(h0),s0.sort(X))}}if(S0=H0(s0[0],M0[0]),!S0&&s0.length>=M0.length){for(var Y=1;Y<s0.length;Y++)if(S0=H0(s0[Y],M0[0]),S0){s0.unshift(A.Utils.remove(s0,Y));break}}}}t1=w0(_),l1=w0(s0),typeof O0!="undefined"&&(O0=O0.toSymbol(),t1=r.divide(t1,O0.clone()),l1=r.divide(l1,O0))}return u0&&(t1=r.parse(t1.text(),d0),l1=r.parse(l1.text(),d0)),[t1,l1]}catch{return l}},line:function(i,h,l){A.Utils.isArray(i)&&(i=A.Utils.convertToVector(i)),A.Utils.isArray(h)&&(h=A.Utils.convertToVector(h)),l=r.parse(l||"x"),(!A.Utils.isVector(i)||!A.Utils.isVector(h))&&r.error('Line expects a vector! Received "'+i+'" & "'+h+'"');var f=r.subtract(h.e(1).clone(),i.e(1).clone()),d=r.subtract(h.e(2).clone(),i.e(2).clone()),E=r.divide(d,f),L=r.multiply(l,E.clone()),x=r.multiply(i.e(1).clone(),E);return r.add(r.subtract(L,x),i.e(2).clone())},PartFrac:{createTemplate:function(i,h,l,f){i=Z.Factor.factor(i),i.each(function(w0,I0){if(w0.group===X1&&w0.fname===""&&w0.args[0].group===N1){var i0=w0.args[0];this.symbols?(delete this.symbols[I0],this.symbols[i0.value]=i0):i=w0.args[0]}});var d,E,L,x,H,u0,q0;d=h.collectFactors(),E=[],u0=[],q0=new p0(1);for(var d0=0;d0<d.length;d0++){var Q0=p0.unwrapPARENS(d[d0]);if(Q0.power.greaterThan(1)){x=Number(Q0.power),L=Q0.clone().toLinear(),H=Number(Z.degree(L,f));for(var t1=0;t1<x;t1++){var l1=r.pow(L.clone(),new p0(t1+1));l.push(l1.clone());var r0=r.divide(i.clone(),l1.clone());u0.push(H),E.push(r0)}}else{H=Number(Z.degree(Q0,f)),l.push(Q0);var r0=r.divide(i.clone(),Q0.clone());r0=r.expand(p0.unwrapPARENS(r0)),u0.push(H),E.push(r0)}}return l=l.map(function(w0){return r.multiply(w0,q0.clone())}),[l,E,u0]},partfrac:function(i,h,l){var f=f1(i);h=h||r.parse(f[0]);try{var d,E,L,d1,x,H,u0,q0,d0,Q0,t1,l1,r0,w0,I0,i0,k0,d1;if(d=r.expand(i.getNum()),E=r.expand(i.getDenom().toUnitMultiplier()),d.multiplier=i.multiplier,H=d.groupTerms(h),Number(Z.degree(d,h))>=Number(Z.degree(E,h))?(r0=Z.div(d.clone(),r.expand(E.clone())),w0=r0[0],d=r0[1],H=d.groupTerms(h)):w0=new p0(0),Number(Z.degree(E,h))===1){var H0=r.divide(d,E);return l?[w0,H0]:r.add(w0,H0)}x=Z.Factor.factor(E),k0=Z.PartFrac.createTemplate(E.clone(),x,[],h),d1=k0[0],I0=k0[1],u0=k0[2],l1=[H.length],q0=[],L=[],i0=[];var s0,M0;I0.map(function(X,f0){s0=d1[f0],M0=u0[f0];for(var c0=0;c0<M0;c0++){L.push(s0.clone());var O0=p0.create(h,c0),Y=r.expand(r.multiply(X,O0.clone())).groupTerms(h),q=Y.length;l1.push(q),q0.push(Y),i0.push(O0.clone())}}),d0=A.Utils.arrayMax(l1),t1=new A.Matrix(A.Utils.fillHoles(H,d0)).transpose(),Q0=new A.Matrix;for(var n1=0;n1<q0.length;n1++)Q0.elements.push(A.Utils.fillHoles(q0[n1],d0));var m1=r.multiply(Q0.transpose().invert(),t1),_=l?[w0]:w0;return m1.each(function(X,f0){var c0=r.multiply(i0[f0],r.divide(X,L[f0]));l?_.push(c0):_=r.add(_,c0)}),_}catch{try{if(i.isComposite()){var S={};i.each(function(f0){var c0=f0.getDenom(),O0=f0.getNum(),Y=S[c0];S[c0]=Y?r.add(Y,O0):O0});var O=new p0(0);for(var W in S)O=r.add(O,r.divide(S[W],r.parse(W)));i=O}}catch{}}return i}},degree:function(i,h,l){if(l=l||{nd:[],sd:[],depth:0},!h){var f=f1(i);if(f.length>1)throw new Error("You must specify the variable for multivariate polynomials!");if(f.length===0)return new p0(0);h=r.parse(f[0])}var d=i.group;i.isComposite()?(i=i.clone(),i.distributeExponent(),i.each(function(L){l.depth++,Z.degree(L,h,l),l.depth--})):i.group===e0?i.each(function(L){l.depth++,Z.degree(L,h,l),l.depth++}):d===T0&&i.value===h.value?l.sd.push(i.power.clone()):d===N1&&i.value===h.value?l.nd.push(r.parse(i.power)):l.nd.push(new p0(0));var E=l.nd.length>0?A.Utils.arrayMax(l.nd):void 0;return l.depth===0&&l.sd.length>0?(E!==void 0&&l.sd.unshift(E),r.symfunction("max",l.sd)):(A.Utils.isSymbol(E)||(E=r.parse(E)),E)},sqComplete:function(i,h,l){A.Utils.isSymbol(h)||(h=r.parse(h));var f=function(r0){throw r0=r0||"Stopping",new A.exceptions.ValueLimitExceededError(r0)};i.isPoly(!0)||f("Must be a polynomial!");var d,E,L,x,H,u0,q0,d0,Q0,t1,l1;return Q0=A.Utils.inBrackets,i=i.clone(),d=A.Algebra.degree(i,h),d.equals(2)||f("Cannot complete square for degree "+d),q0=A.Algebra.coeffs(i,h),E=q0[2],d0=q0[1].sign(),L=r.divide(q0[1],new p0(2)),x=r.pow(L.clone(),new p0(2)),l?[E,L,H]:(l1=F1.sqrt(E),u0=r.divide(F1.sqrt(x),l1.clone()),H=r.subtract(q0[0],r.pow(u0.clone(),new p0(2))),t1=r.parse(Q0(l1.clone()+"*"+h+(d0<0?"-":"+")+u0)),{a:t1,c:H,f:r.add(r.pow(t1.clone(),new p0(2)),H.clone())})},Simplify:{strip:function(i){var h=r.parse(i.multiplier);i.toUnitMultiplier();var l=r.parse(i.power);return i.toLinear(),[h,l,i]},unstrip:function(i,h){var l=i[0],f=i[1];return r.multiply(l,r.pow(h,f))},complexSimp:function(i,h){var l,f,d,E,L,x,H,u0,q0;return x=i.realpart(),u0=i.imagpart(),H=h.realpart(),q0=h.imagpart(),l=r.multiply(x.clone(),H.clone()),f=r.multiply(u0.clone(),q0.clone()),d=r.multiply(H.clone(),u0),E=r.multiply(x,q0.clone()),L=r.add(r.pow(H,new p0(2)),r.pow(q0,new p0(2))),r.divide(r.add(r.add(l,f),r.multiply(r.subtract(d,E),p0.imaginary())),L)},trigSimp:function(i){if(i.containsFunction(["cos","sin","tan"])){i=i.clone();var h=Z.Simplify.strip(i);i=h.pop();var l=i.clone();if(i.group===$){var f=new p0(0);i.each(function(x){var H=Z.Simplify.trigSimp(x.fnTransform());f=r.add(f,H)},!0),l=r.pow(r.multiply(new p0(i.multiplier),f),new p0(i.power))}else if(i.group===e0){var d=i.getNum(),E=i.getDenom();if(d.fname==="sin"&&E.fname==="cos"&&d.args[0].equals(E.args[0])&&d.power.equals(E.power)&&(l=r.parse(A.Utils.format("({0})*({1})*tan({2})^({3})",E.multiplier,d.multiplier,d.args[0],d.power))),l.group===e0){var L=new p0(1);l.each(function(x){x.fname==="tan"&&(x=r.parse(A.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",x.multiplier,Z.Simplify.simplify(x.args[0]),x.power))),L=r.multiply(L,x)}),l=L}}l=Z.Simplify.unstrip(h,l).distributeMultiplier(),i=l}return i},fracSimp:function(i){var h=i.getDenom(),l=i.getNum();if(l.isImaginary()&&h.isImaginary()&&(i=Z.Simplify.complexSimp(l,h)),i.isComposite()){i.power>1&&(i=r.expand(i));var f=i.collectSymbols(),d,E,L,x,H,u0,q0,d0,Q0,t1,l1,h,l;for(E=f.pop();f.length;)L=f.pop(),x=r.parse(E.getDenom()),H=r.parse(L.getDenom()),u0=E.getNum(),q0=L.getNum(),l1=r.multiply(x.clone(),H.clone()),Q0=r.multiply(u0,H),t1=r.multiply(q0,x),d0=r.add(Q0,t1),E=r.divide(d0,l1);return h=r.expand(E.getDenom()),l=r.expand(E.getNum()),l.isImaginary()&&h.isImaginary()?d=Z.Simplify.complexSimp(l,h):d=r.divide(l,h),d.equals(i)?i:Z.Simplify.simplify(d)}return i},ratSimp:function(i){if(i.group===e0){var h=i.getDenom(),l=i.getNum().distributeMultiplier(),f=Z.Simplify.fracSimp(h),d=Z.Simplify.fracSimp(l);i=r.divide(d,f)}return i},sqrtSimp:function(i,h){var l;if(i.isSQRT()){var f=Z.Factor.factor(i.args[0].clone()),d=r.parse(f.multiplier),E=d.sign(),l=r.sqrt(d.abs()),L;if(z0(l)){if(f.group===e0){var x=new p0(1);f.each(function(q0){if(q0.group===F){var d0=r.sqrt(q0.clone());z0(d0)?l=r.multiply(l,d0):x=r.multiply(x,q0)}else x=r.multiply(x,q0)});var H=r.multiply(x,r.parse(E));L=r.sqrt(H.clone()),L.isImaginary&&(L=r.sqrt(r.expand(H.clone())))}else L=r.sqrt(f.clone().toUnitMultiplier());return r.multiply(l,L)}}else i.isComposite()&&i.isLinear()?(l=new p0(0),i.each(function(u0){l=r.add(l,Z.Simplify.sqrtSimp(u0))},!0),l=r.multiply(l,r.parse(i.multiplier))):i.group===e0&&(l=r.parse(i.multiplier),i.each(function(u0){var q0=Z.Simplify.sqrtSimp(u0);l=r.multiply(l,q0)},!0),l=r.pow(l,r.parse(i.power)));return l||r.parse(i)},patternSub:function(i){var h={},l=function(d){var E=!1;return d.each(function(L){L.group===$?E=!0:L.symbols&&(E=l(L))}),E},f=function(d){d.each(function(E){if(!(!E.symbols&&E.group!==X1)){if(l(E))f(E);else if(!h[E.value]){var L=A.Utils.getU(i);h[E.value]=L,i=i.sub(E.value,L)}}},!0)};return f(i),[i,h]},simplify:function(i){var h=Z.Simplify.strip(i);if(i=h.pop(),i=Z.Simplify.fracSimp(i),i.isConstant()||i.group===A.groups.S){h.push(i);var l=Z.Simplify.unstrip(h,i);return l}var f=i.clone();if(f=Z.Simplify.trigSimp(f),f=Z.Simplify.ratSimp(f),f=Z.Factor.factor(f),f.group===A.groups.CP&&f.isLinear()){var d=f.multiplier.clone();f.toUnitMultiplier();var E=new p0(0);f.each(function(x){var H=Z.Simplify.simplify(x);E=r.add(E,H)}),f=E,E.multiplier=E.multiplier.multiply(d)}var L=Z.Simplify.unstrip(h,f);return L}},Classes:{Polynomial:c1,Factors:b1,MVTerm:Z0}};A.Expression.prototype.simplify=function(){return Z.Simplify.simplify(this.symbol)},A2.useAlgebraDiv=function(){var i=Z.divideFn=r.divide,h=0;r.divide=function(l,f){h++;var d;return h===1?d=A.Algebra.divide(l,f):d=i(l,f),h=0,d}},A2.useParserDiv=function(){Z.divideFn&&(r.divide=Z.divideFn),delete Z.divideFn},A2.register([{name:"factor",visible:!0,numargs:1,build:function(){return Z.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return Z.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return Z.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return Z.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return Z.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return Z.divide}},{name:"div",visible:!0,numargs:2,build:function(){return Z.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return Z.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return Z.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){var i=function(){var h=Z.coeffs.apply(Z,arguments);return new A.Vector(h)};return i}},{name:"line",visible:!0,numargs:[2,3],build:function(){return Z.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){var i=function(h,l){try{l=l||f1(h)[0];var f=Z.sqComplete(h.clone(),l);return f.f}catch{return h}};return i}}]),A2.updateAPI()})()})();(function(W2){if(typeof A2=="undefined")var A2=d3.exports;(function(){var A=A2.getCore(),r=A.PARSER,F=A.Frac,_1=A.Settings,N1=A.Utils.isSymbol,o1=A.groups.FN,T0=A.Symbol,X1=A.Utils.text,N0=A.Utils.inBrackets,$=A.Utils.isInt,e0=A.Utils.format,x1=A.Utils.even,A0=A.Utils.evaluate,f1=A.groups.N,X0=A.groups.S,o1=A.groups.FN,$0=A.groups.PL,z0=A.groups.CP,p0=A.groups.CB,q1=A.groups.EX,F1=A.groups.P,c1=_1.LOG,b1="exp",Z0="abs",Z="sqrt",i="sin",h="cos",l="tan",f="sec",d="csc",E="cot",L="asin",x="acos",H="atan",u0="asec",q0="acsc",d0="acot",Q0="sinh",t1="cosh",l1="tanh",r0="csch",w0="sech",I0="coth",i0="asech",k0="acsch",d1="acoth";function H0(O){this.message=O||""}H0.prototype=new Error,T0.prototype.hasIntegral=function(){return this.containsFunction("integrate")},T0.prototype.fnTransform=function(){if(this.group!==o1)return this;var O,W=this.args[0],X=new T0(this.multiplier),f0=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case Q0:O=r.parse(e0("(e^({0})-e^(-({0})))/2",W));break;case t1:O=r.parse(e0("(e^({0})+e^(-({0})))/2",W));break;case l1:O=r.parse(e0("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",W));break;case l:O=r.parse(e0("sin({0})/cos({0})",W));break;case d:O=r.parse(e0("1/sin({0})",W));break;case f:O=r.parse(e0("1/cos({0})",W));break;default:O=f0}else if(this.power.equals(2))switch(this.fname){case i:O=r.parse(e0("1/2-cos(2*({0}))/2",W));break;case h:O=r.parse(e0("1/2+cos(2*({0}))/2",W));break;case l:O=r.parse(e0("sin({0})^2/cos({0})^2",W));break;case t1:O=r.parse(e0("1/2+cosh(2*({0}))/2",W));break;case Q0:O=r.parse(e0("-1/2+cosh(2*({0}))/2",W));break;case l1:O=r.parse(e0("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",W));break;case f:O=r.parse(e0("(1-cos(2*({0})))/(1+cos(2*({0})))+1",W));break;default:O=f0}else if(this.fname===f)O=r.parse(e0("1/cos({0})^({1})",this.args[0],this.power));else if(this.fname===d)O=r.parse(e0("1/sin({0})^({1})",this.args[0],this.power));else if(this.fname===l)this.power.lessThan(0)?O=r.parse(e0("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):O=r.parse(e0("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power));else if(this.fname===i&&this.power.lessThan(0))O=r.parse(e0("csc({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===h&&this.power.lessThan(0))O=r.parse(e0("sec({0})^(-({1}))",this.args[0],this.power.negate()));else if(this.fname===i&&this.power.equals(3))O=r.parse(e0("(3*sin({0})-sin(3*({0})))/4",this.args[0]));else if(this.fname===h&&this.power.equals(3))O=r.parse(e0("(cos(3*({0}))+3*cos({0}))/4",this.args[0]));else if((this.fname===h||this.fname===i)&&x1(this.power)){var c0=this.power/2,O0=r.pow(this.clone().toLinear(),r.parse(2)).fnTransform(),Y=r.expand(r.pow(O0,r.parse(c0)));O=new T0(0),Y.each(function(q){var J=q.fnTransform();O=r.add(O,J)},!0)}else O=f0;return r.multiply(O,X)},T0.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===X0)return!1;if(this.fname&&(A.Utils.in_trig(this.fname)||A.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols){for(var O in this.symbols)if(this.symbols[O].hasTrig())return!0}return!1},A.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},A.Utils.toCommonDenominator=function(O){if(O.isComposite()&&O.isLinear()){var W=new T0(O.multiplier),X=new T0(1),f0=new T0(0);O.each(function(O0){X=r.multiply(X,O0.getDenom())},!0),O.each(function(O0){var Y=O0.getNum(),q=O0.getDenom(),J=r.multiply(Y,r.divide(X.clone(),q));f0=r.add(f0,J)});var c0=r.multiply(W,A.Algebra.divide(r.expand(f0),r.expand(X)));return c0}return O},A.Utils.in_inverse_trig=function(O){var W=[L,x,H,q0,u0,d0];return W.indexOf(O)!==-1},A.Utils.in_trig=function(O){var W=[h,i,l,f,d,E];return W.indexOf(O)!==-1},A.Utils.in_htrig=function(O){var W=[Q0,t1,l1,k0,i0,d1];return W.indexOf(O)!==-1},A.Matrix.jacobian=function(O,W){var X=new A.Matrix;return W||(W=A.Utils.arrayGetVariables(O)),W.forEach(function(f0,c0){O.forEach(function(O0,Y){var q=A.Calculus.diff(O0.clone(),f0);X.set(Y,c0,q)})}),X},A.Matrix.prototype.max=function(){var O=new T0(0);return this.each(function(W){var X=W.abs();X.gt(O)&&(O=X)}),O},A.Matrix.cMatrix=function(O,W){var X=new A.Matrix;return W.forEach(function(f0,c0){X.set(c0,0,r.parse(O))}),X};var s0=A.Utils.all_functions=function(O){for(var W=0,X=O.length;W<X;W++)if(O[W].group!==o1)return!1;return!0},M0=A.Utils.cosAsinBtranform=function(O,W){var X,f0;return X=O.args[0],f0=W.args[0],r.parse(e0("(sin(({0})+({1}))-sin(({0})-({1})))/2",X,f0))},n1=A.Utils.cosAsinAtranform=function(O,W){if(Number(W.power)!==1)return r.multiply(O,W);var X;return X=O.args[0],r.parse(e0("(sin(2*({0})))/2",X))},m1=A.Utils.cosAsinBtranform=function(O,W){var X,f0;return X=O.args[0],f0=W.args[0],r.parse(e0("(cos(({0})+({1}))-cos(({0})-({1})))/2",X,f0))},_=A.Utils.trigTransform=function(O){for(var W={},X,f0,c0=new T0(1),O0=0,Y=O.length;O0<Y;O0++)if(X=O[O0],X.group===o1){var q=X.fname;q===h&&W[i]?(W[i].args[0].toString()!==X.args[0].toString()?f0=M0(X,W[i]):f0=n1(X,W[i]),delete W[i],c0=r.multiply(c0,f0)):q===i&&W[h]?(W[h].args[0].toString()!==X.args[0].toString()?f0=M0(X,W[h]):f0=n1(X,W[h]),delete W[h],c0=r.multiply(c0,f0)):q===i&&W[i]?(W[i].args[0].toString()!==X.args[0].toString()?(f0=m1(X,W[i]),delete W[i]):(f0=r.multiply(X,W[i]),delete W[i]),c0=f0):W[q]=X}else c0=r.multiply(c0,X);for(var J in W)c0=r.multiply(c0,W[J]);return c0};A.Settings.integration_depth=10,A.Settings.max_lim_depth=10;var S=A.Calculus={version:"1.4.6",sum:function(O,W,X,f0){if(W.group!==A.groups.S)throw new A.exceptions.NerdamerTypeError("Index must be symbol. "+X1(W)+" provided");W=W.value;var c0;if(A.Utils.isNumericSymbol(X)&&A.Utils.isNumericSymbol(f0)){var O0=f0-X<200?"":"PARSE2NUMBER";X=Number(X),f0=Number(f0),c0=A.Utils.block(O0,function(){for(var Y=O.text(),q={"~":!0},J=new A.Symbol(0),k=X;k<=f0;k++){q[W]=new T0(k);var S0=r.parse(Y,q);J=r.add(J,S0)}return J})}else c0=r.symfunction("sum",arguments);return c0},product:function(O,W,X,f0){if(W.group!==A.groups.S)throw new A.exceptions.NerdamerTypeError("Index must be symbol. "+X1(W)+" provided");W=W.value;var c0;if(A.Utils.isNumericSymbol(X)&&A.Utils.isNumericSymbol(f0)){var O0=f0-X<200?"":"PARSE2NUMBER";c0=A.Utils.block(O0,function(){X=Number(X),f0=Number(f0.multiplier);for(var Y=O.text(),q={},J=new A.Symbol(1),k=X;k<=f0;k++)q[W]=new T0(k),J=r.multiply(J,r.parse(Y,q));return J})}else c0=r.symfunction("product",arguments);return c0},diff:function(O,W,X){if(A.Utils.isVector(O)){var f0=new A.Vector([]);return O.each(function(l0){f0.elements.push(S.diff(l0,W,X))}),f0}else if(A.Utils.isMatrix(O)){var c0=new A.Matrix;return O.each(function(l0,F0,L0){c0.set(F0,L0,S.diff(l0,W,X))}),c0}var O0=N1(W)?W.text():W;if(X=N1(X)?X.multiplier:X||1,O0===void 0&&(O0=A.Utils.variables(O)[0]),O.group===o1&&O.fname===Z){var Y=O.args[0],q=O.power.clone();(Y.group!==f1||Y.group!==F1)&&(Y.power=N1(Y.power)?r.multiply(Y.power,r.multiply(new T0(1/2)),q):Y.power.multiply(new F(.5)).multiply(q),Y.multiplier=Y.multiplier.multiply(O.multiplier)),O=Y}if(O.group===o1&&!N1(O.power)){var J=E0(r.parse(O)),k=S.diff(O.args[0].clone(),O0);O=r.multiply(J,k)}else O=E0(O);return X>1&&(X--,O=S.diff(O,W,X)),O;function S0(l0){return(l0.value===O0||l0.contains(O0,!0))&&(l0.multiplier=l0.multiplier.multiply(l0.power),l0.power=l0.power.subtract(new F(1)),l0.power.equals(0)&&(l0=T0(l0.multiplier))),l0}function E0(l0){var F0=l0.group,L0,_0;if(F0===f1||F0===X0&&l0.value!==O0||F0===F1)l0=T0(0);else if(F0===X0)l0=S0(l0);else if(F0===p0){var y0=l0.multiplier.clone();l0.toUnitMultiplier();var G0=r.multiply(h0(l0),S0(l0));return G0.multiplier=G0.multiplier.multiply(y0),G0}else if(F0===o1&&l0.power.equals(1))switch(l0.fname){case c1:_0=l0.clone(),l0=l0.args[0].clone(),l0.power=l0.power.negate(),l0.multiplier=_0.multiplier.divide(l0.multiplier);break;case h:l0.fname=i,l0.multiplier.negate();break;case i:l0.fname=h;break;case l:l0.fname=f,l0.power=new F(2);break;case f:l0=U0(l0,l);break;case d:l0=U0(l0,"-cot");break;case E:l0.fname=d,l0.multiplier.negate(),l0.power=new F(2);break;case L:l0=r.parse("(sqrt(1-("+X1(l0.args[0])+")^2))^(-1)");break;case x:l0=r.parse("-(sqrt(1-("+X1(l0.args[0])+")^2))^(-1)");break;case H:l0=r.parse("(1+("+X1(l0.args[0])+")^2)^(-1)");break;case Z0:y0=l0.multiplier.clone(),l0.toUnitMultiplier(),L0=l0.args[0].clone(),L0.toUnitMultiplier(),l0=r.parse(N0(X1(l0.args[0]))+"/abs"+N0(X1(L0))),l0.multiplier=y0;break;case"parens":l0=T0(1);break;case"cosh":l0.fname="sinh";break;case"sinh":l0.fname="cosh";break;case l1:l0.fname=w0,l0.power=new F(2);break;case w0:l0=U0(l0,"-tanh");break;case r0:var b0=String(l0.args[0]);return r.parse("-coth("+b0+")*csch("+b0+")");case I0:var b0=String(l0.args[0]);return r.parse("-csch("+b0+")^2");case"asinh":l0=r.parse("(sqrt(1+("+X1(l0.args[0])+")^2))^(-1)");break;case"acosh":l0=r.parse("(sqrt(-1+("+X1(l0.args[0])+")^2))^(-1)");break;case"atanh":l0=r.parse("(1-("+X1(l0.args[0])+")^2)^(-1)");break;case i0:var b0=String(l0.args[0]);l0=r.parse("-1/(sqrt(1/("+b0+")^2-1)*("+b0+")^2)");break;case d1:l0=r.parse("-1/(("+l0.args[0]+")^2-1)");break;case k0:var b0=String(l0.args[0]);l0=r.parse("-1/(sqrt(1/("+b0+")^2+1)*("+b0+")^2)");break;case u0:var b0=String(l0.args[0]);l0=r.parse("1/(sqrt(1-1/("+b0+")^2)*("+b0+")^2)");break;case q0:var b0=String(l0.args[0]);l0=r.parse("-1/(sqrt(1-1/("+b0+")^2)*("+b0+")^2)");break;case d0:l0=r.parse("-1/(("+l0.args[0]+")^2+1)");break;case"S":var b0=String(l0.args[0]);l0=r.parse("sin((pi*("+b0+")^2)/2)");break;case"C":var b0=String(l0.args[0]);l0=r.parse("cos((pi*("+b0+")^2)/2)");break;case"Si":var b0=l0.args[0];l0=r.parse("sin("+b0+")/("+b0+")");break;case"Shi":var b0=l0.args[0];l0=r.parse("sinh("+b0+")/("+b0+")");break;case"Ci":var b0=l0.args[0];l0=r.parse("cos("+b0+")/("+b0+")");break;case"Chi":var b0=l0.args[0];l0=r.parse("cosh("+b0+")/("+b0+")");break;case"Ei":var b0=l0.args[0];l0=r.parse("e^("+b0+")/("+b0+")");break;case"Li":var b0=l0.args[0];l0=r.parse("1/"+_1.LOG+"("+b0+")");break;case"erf":l0=r.parse("(2*e^(-("+l0.args[0]+")^2))/sqrt(pi)");break;case"atan2":var R0=String(l0.args[0]),i1=String(l0.args[1]);l0=r.parse("("+i1+")/(("+i1+")^2+("+R0+")^2)");break;case"sign":l0=new T0(0);break;case"sinc":l0=r.parse(e0("(({0})*cos({0})-sin({0}))*({0})^(-2)",l0.args[0]));break;case _1.LOG10:l0=r.parse("1/(("+l0.args[0]+")*"+_1.LOG+"(10))");break;default:l0=r.symfunction("diff",[l0,W])}else if(F0===q1||F0===o1&&N1(l0.power)){var A1;F0===q1?A1=l0.value:F0===o1&&l0.contains(O0)?A1=l0.fname+N0(X1(l0.args[0])):A1=l0.value+N0(X1(l0.args[0])),r.multiply(r.parse(c1+N0(A1)),l0.power.clone()),L0=S.diff(r.multiply(r.parse(c1+N0(A1)),l0.power.clone()),O0),l0=r.multiply(l0,L0)}else if(F0===o1&&!l0.power.equals(1))L0=l0.clone(),L0.toLinear(),L0.toUnitMultiplier(),l0=r.multiply(S0(l0.clone()),E0(L0));else if(F0===z0||F0===$0){var a1=l0.clone(),U1=new T0(0);for(var D1 in l0.symbols)U1=r.add(U1,S.diff(l0.symbols[D1].clone(),O0));l0=r.multiply(S0(a1),U1)}return l0.updateHash(),l0}function U0(l0,F0,L0){return r.multiply(l0,r.parse(F0+N0(L0||X1(l0.args[0]))))}function h0(l0){for(var F0=l0.collectSymbols(),L0=new T0(0),_0=F0.length,y0=0;y0<_0;y0++){for(var G0=S.diff(F0[y0].clone(),O0),b0=0;b0<_0;b0++)y0!==b0&&(G0=r.multiply(G0,F0[b0].clone()));L0=r.add(L0,G0)}return L0}},integration:{u_substitution:function(O,W){function X(i1,A1,a1){var U1=S.diff(A1,W),D1=a1?a1(i1,A1):r.divide(i1.clone(),U1);return D1.contains(W,!0)?null:D1}function f0(i1,A1){var a1=S.integrate(r.symfunction(i1,[new T0(J)]),J,0);return a1=a1.sub(new T0(J),A1),a1.updateHash(),a1}var c0=O[0].clone(),O0=O[1].clone(),Y=c0.group,q=O0.group,J="__u__",k;if(Y===o1&&q!==o1){var S0=c0.args[0];if(k=X(O0,S0.clone()),k)return r.multiply(k,f0(c0.fname,S0));if(k=X(O0,c0),k)return S.integration.poly_integrate(c0)}else if(q===o1&&Y!==o1){var S0=O0.args[0];if(k=X(c0,S0.clone()),k)return r.multiply(k,f0(O0.fname,S0))}else if(Y===o1&&q===o1){if(k=X(c0.clone(),O0.clone()),k||(k=X(O0.clone(),c0.clone()),k))return r.multiply(S.integration.poly_integrate(O0),k)}else if(Y===q1&&q!==q1){var E0=c0.power;if(k=X(O0,E0.clone()),!k){var U0=S.integration.decompose_arg(E0.clone(),W),h0=S.diff(U0[2].clone(),W),l0=S.integration.decompose_arg(h0.clone(),W);if(r.multiply(U0[1],l0[1]).power.equals(O0.power)){var F0=r.divide(U0[0].clone(),l0[0].clone()),L0=r.multiply(F0.clone(),r.pow(new T0(c0.value),r.multiply(U0[0],new T0(J))));return L0=r.multiply(L0,new T0(J)),S.integration.by_parts(L0,J,0,{}).sub(J,U0[1].clone())}}var _0=S.integrate(c0.sub(E0.clone(),new T0(J)),J,0),y0=r.multiply(_0.sub(new T0(J),E0),k);return y0}else if(q===q1&&Y!==q1){var E0=O0.power;k=X(c0,E0.clone());var _0=S.integrate(O0.sub(E0,new T0(J)),J,0);return r.multiply(_0.sub(new T0(J),E0),k)}else if(c0.isComposite()||O0.isComposite()){var G0=function(i1,A1){var a1=S.diff(A1,W),U1=A.Algebra.Factor.factor(i1),D1=A.Algebra.Factor.factor(a1),P1=r.divide(U1,D1);return P1},b0=c0.isComposite()?c0.clone().toLinear():c0.clone(),R0=O0.isComposite()?O0.clone().toLinear():O0.clone();if(k=X(b0.clone(),R0.clone(),G0),k)return r.multiply(S.integration.poly_integrate(O0),k);if(k=X(R0.clone(),b0.clone(),G0),k)return r.multiply(S.integration.poly_integrate(c0),k)}},poly_integrate:function(O){var W=O.power.toString(),X=O.multiplier.toDecimal(),f0=O.toUnitMultiplier().toLinear();return Number(W)===-1?r.multiply(new T0(X),r.symfunction(c1,[f0])):r.parse(e0("({0})*({1})^(({2})+1)/(({2})+1)",X,f0,W))},stop:function(O){throw O=O||"Unable to compute integral!",A.Utils.warn(O),new H0(O)},partial_fraction:function(O,W,X,f0){N1(W)||(W=r.parse(W));var c0,O0;return c0=new T0(0),O0=A.Algebra.PartFrac.partfrac(O,W),O0.group===p0&&O0.isLinear()?(O0.each(function(Y){Y.isLinear()||S.integration.stop()}),O0.each(function(Y){c0=r.add(c0,S.integrate(Y,W,X,f0))})):c0=r.add(c0,S.integrate(O0,W,X,f0)),c0},get_udv:function(O){var W=[[],[],[],[],[]],X=function(S0){var E0=S0.group;if(E0===o1){var U0=S0.fname;A.Utils.in_trig(U0)||A.Utils.in_htrig(U0)?W[3].push(S0):A.Utils.in_inverse_trig(U0)?W[1].push(S0):U0===c1?W[0].push(S0):S.integration.stop()}else E0===X0||S0.isComposite()&&S0.isLinear()||E0===p0&&S0.isLinear()?W[2].push(S0):E0===q1||S0.isComposite()&&!S0.isLinear()?W[4].push(S0):S.integration.stop()};O.group===p0?O.each(function(S0){X(T0.unwrapSQRT(S0,!0))}):X(O);for(var f0,c0=new T0(1),O0=0;O0<5;O0++){var Y=W[O0],q,J=Y.length;if(J>0){if(J>1){q=new T0(1);for(var k=0;k<J;k++)q=r.multiply(q,Y[k].clone())}else q=Y[0].clone();f0?c0=r.multiply(c0,q):(f0=q,f0.multiplier=f0.multiplier.multiply(O.multiplier))}}return[f0,c0]},trig_sub:function(O,W,X,f0,c0,O0){c0=c0||S.integration.decompose_arg(O.clone().toLinear(),W),c0[3],c0[2];var Y=c0[0],q=c0[1];if(q.power.equals(2)&&Y.greaterThan(0)){var J=A.Utils.getU(O),k=r.parse(l+N0(J)),S0=r.parse(f+N0(J)+"^2"),E0=r.multiply(O.sub(q,k),S0),U0=S.integrate(E0,J,X,f0).sub(k,q);return A.Utils.clearU(k),U0}},by_parts:function(O,W,X,f0){f0.previous=f0.previous||[];var c0,O0,Y,q,J,k,S0,E0,U0,h0,l0,F0;if(c0=S.integration.get_udv(O),O0=c0[0],Y=c0[1],q=T0.unwrapSQRT(r.expand(S.diff(O0.clone(),W)),!0),l0=q.clone().stripVar(W),q=r.divide(q,l0.clone()),J=S.integrate(Y.clone(),W,X||0),k=r.multiply(J.clone(),q),F0=k.toString(),f0.previous.indexOf(F0)!==-1&&A.Utils.in_trig(O0.fname)&&Y.isE())return f0.is_cyclic=!0,new T0(1);if(f0.previous.push(F0),S0=r.multiply(O0,J),h0=k.multiplier.clone(),k.toUnitMultiplier(),U0=r.multiply(S.integrate(k.clone(),W,X,f0),l0),U0.multiplier=U0.multiplier.multiply(h0),E0=r.subtract(S0,U0),f0.is_cyclic&&(f0.previous.pop(),f0.previous.length===0)){E0=r.expand(E0);var L0=new T0(0);E0.each(function(_0){_0.contains(W)||(L0=r.add(L0,_0.clone()))}),E0=r.divide(r.subtract(E0,L0.clone()),r.subtract(new T0(1),L0))}return E0},decompose_arg:A.Utils.decompose_fn},integrate:function(O,W,X,f0){if(!W){var c0=A.Utils.variables(O);c0.length===1&&(W=c0[0]),W=W||"x"}if(A.Utils.isVector(O)){var O0=new A.Vector([]);return O.each(function(Y){O0.elements.push(S.integrate(Y,W))}),O0}return isNaN(W)||r.error("variable expected but received "+W),O.isConstant(!0)?r.multiply(O.clone(),r.parse(W)):(f0=f0||{},A.Utils.block("PARSE2NUMBER",function(){X=X||0;var Y=N1(W)?W.toString():W,q=T0.unwrapSQRT(O.clone(),!0),J=q.group,k;try{if(++X>A.Settings.integration_depth&&S.integration.stop("Maximum depth reached. Exiting!"),!q.contains(Y,!0))k=r.multiply(q.clone(),r.parse(Y));else if(J===X0)k=S.integration.poly_integrate(q,Y,X);else if(J===q1)if(q.previousGroup===o1&&!(q.fname==="sqrt"||q.fname===_1.PARENTHESIS)&&S.integration.stop(),q.contains(Y)&&q.previousGroup!==o1)if(q.power.contains(Y))S.integration.stop();else{var S0=S.diff(q.clone().toLinear(),Y);S0.contains(Y)&&S.integration.stop(),k=S.integration.poly_integrate(q,Y,X)}else{var E0=S.diff(q.power.clone(),Y);if(E0.contains(Y)){var U0=E0.stripVar(Y),h0=r.divide(E0.clone(),U0.clone());if(h0.group===X0&&h0.isLinear())return U0.multiplier=U0.multiplier.divide(new F(2)),r.parse(e0("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",U0,Y,q.multiplier));S.integration.stop()}if(q.isE())E0.isLinear()?k=q:E0.isE()&&E0.power.group===X0&&E0.power.power.equals(1)?k=r.multiply(r.symfunction("Ei",[q.power.clone()]),q.power):S.integration.stop();else{var l0=r.symfunction(c1,[r.parse(q.value)]);k=r.divide(q,l0)}k=r.divide(k,E0)}else if(q.isComposite()&&q.isLinear()){var F0=r.parse(q.multiplier);q.toUnitMultiplier(),k=new T0(0),q.each(function(V2){k=r.add(k,S.integrate(V2,Y,X))}),k=r.multiply(F0,k)}else if(J===z0)if(q.power.greaterThan(1)&&(q=r.expand(q)),q.power.equals(1))k=new T0(0),q.each(function(V2){k=r.add(k,S.integrate(V2,Y,X))},!0);else{var L0=Number(q.power),F0=q.multiplier.clone();q.toUnitMultiplier();var _0=q.clone().toLinear(),y0=S.integration.decompose_arg(_0,Y),G0=y0[3],b0=y0[2],E0=y0[0],h0=y0[1];if(L0===-1&&h0.group!==$0&&h0.power.equals(2)){var R0=$(G0)?G0>0:!0;if(h0.group===X0&&h0.power.equals(2)&&R0){var i1=function(p3){var J2=new T0(1);return p3.each(function(t3){J2=r.multiply(J2,t3.fname==="abs"?t3.args[0]:t3)}),J2},A1=E0.clone(),a1=G0.clone();A1=r.pow(A1,new T0(1/2)),a1=r.pow(a1,new T0(1/2));var l0=r.multiply(i1(a1),i1(A1)),U1=r.symfunction(H,[r.divide(r.multiply(E0,h0.toLinear()),l0.clone())]);k=r.divide(U1,l0)}else if(h0.group===X0&&h0.isLinear())k=r.divide(S.integration.poly_integrate(q),E0);else if(h0.power.equals(4)){var A1,a1,D1,P1,Y1,$1,T1,J1,v2,H1,R1,v1,e2=N0;A1=r.parse(Z+e2(E0)+"*"+Y+"^2"),a1=r.parse(Z+e2(2)+"*"+e2(E0)+"^"+e2("1/4")+"*"+e2(G0)+"^"+e2("1/4")+"*"+Y),D1=r.parse(Z+e2(G0)),T1=r.add(r.add(A1.clone(),a1.clone()),D1.clone()),J1=r.add(r.subtract(A1,a1),D1),P1=r.parse(Z+e2(2)+"*"+e2(G0)+"^"+e2("3/4")),Y1=r.parse(Z+e2(G0)+"*"+e2(G0)+"^"+e2("1/4")+"*"+Y),$1=r.parse(2+"*"+e2(G0)+"*"+Z+e2(2)+"*"+e2(G0)+"^"+e2("1/4")),R1=r.divide(r.subtract(P1.clone(),Y1.clone()),r.multiply($1.clone(),J1)),v1=r.divide(r.add(P1,Y1),r.multiply($1,T1.clone())),k=r.add(S.integrate(R1,Y,X,f0),S.integrate(v1,Y,X,f0))}else k=S.integration.partial_fraction(q,Y,X)}else if(L0===-1/2)if(h0.group===X0&&h0.power.equals(2))if(b0.multiplier.lessThan(0)&&!G0.multiplier.lessThan(0))if(E0.negate(),G0.isConstant()&&E0.isConstant()){var l0=r.symfunction(Z,[E0.clone()]),t2=r.symfunction(Z,[r.multiply(E0.clone(),G0)]);k=r.divide(r.symfunction(L,[r.divide(b0.toLinear(),t2)]),l0)}else{var C=r.symfunction(Z,[E0]),T=r.multiply(C.clone(),h0.clone().toLinear());k=r.divide(r.symfunction(H,[r.divide(T,r.symfunction(Z,[_0.clone()]))]),C)}else S.integration.stop();else S.integration.stop();else if(L0===1/2&&h0.power.equals(2)&&E0.greaterThan(0))S.integration.stop();else if(h0.isLinear()&&h0.group!==$0)k=r.divide(S.integration.poly_integrate(q),E0);else if(h0.power.equals(2)&&E0.greaterThan(0)){var a,w,y,v,z,Q,U,b,R;a=r.parse(Z+N0(E0)),w=r.parse(Z+N0(G0)),y=r.multiply(a.clone(),w.clone()).invert(),v=r.pow(G0,new T0(q.power)),R=A.Utils.getU(q),U=r.multiply(y,h0.clone().toLinear()),b=r.parse(H+N0(U));var z=(Math.abs(q.power)-1)*2,Q=S.integrate(r.parse(h+N0(R)+"^"+z));return A.Utils.clearU(R),r.multiply(Q.sub(R,b),v)}else if(q.group!==p0&&!q.power.lessThan(0))k=S.integration.by_parts(q,Y,X,f0);else{var U1=q.clone().toLinear(),a0=A.Algebra.Factor.factor(U1),g0=a0.toString()!==U1.toString();if(A.Algebra.degree(U1,r.parse(Y)).equals(2)&&!g0)try{var T1,e,U,u;u=A.Algebra.sqComplete(U1,Y),U=A.Utils.getU(U1),T1=u.f.sub(u.a,U),e=r.pow(T1,r.parse(q.power)),k=S.integrate(e,U).sub(U,u.a)}catch{S.integration.stop()}else k=S.integration.partial_fraction(q,Y,X,f0)}k.multiplier=k.multiplier.multiply(F0)}else if(J===o1){var m=q.args[0],F0=q.multiplier.clone();q.toUnitMultiplier();var y0=S.integration.decompose_arg(m,Y),E0=y0[0],h0=y0[1],N=q.fname;if(N===c1||N===L||N===x||N===H&&h0.isLinear()){var L0=q.power.toString();if($(L0)&&(X=X-L0),!m.isComposite())k=r.multiply(r.parse(F0),S.integration.by_parts(q,Y,X,f0));else{var U=A.Utils.getU(q),U1=r.pow(r.parse(c1+N0(U)),new T0(L0)),B=S.diff(m,Y),o0=r.multiply(U1,B),Q=S.integrate(o0,U,X,f0);k=r.multiply(r.parse(F0),Q.sub(U,m))}}else if(N===l&&q.power.lessThan(0)){var x0=q.clone();return x0.power.negate(),x0.fname=E,r.multiply(r.parse(F0),S.integrate(x0,Y,X))}else{if(!E0.contains(Y,!0)&&q.isLinear())if(N===Z0){var h0=r.divide(m.clone(),E0.clone());if(h0.group===X0&&!h0.power.lessThan(0))if(A.Utils.even(h0.power))k=S.integrate(m,Y,X);else{var n0=S.integrate(h0,Y,X);n0.power=n0.power.subtract(new F(1)),k=r.multiply(r.multiply(r.symfunction(Z0,[h0.toLinear()]),n0),E0)}else S.integration.stop()}else{var W0=q.args[0].group,V0=S.integration.decompose_arg(m,Y);switch((!(W0===z0||W0===X0||W0===p0)||!V0[1].power.equals(1)||m.hasFunc())&&S.integration.stop(),N){case h:k=r.symfunction(i,[m]);break;case i:k=r.symfunction(h,[m]),k.negate();break;case l:k=r.parse(e0(_1.LOG+"(sec({0}))",m));break;case f:k=r.parse(e0(_1.LOG+"(tan({0})+sec({0}))",m));break;case d:k=r.parse(e0("-"+_1.LOG+"(csc({0})+cot({0}))",m));break;case E:k=r.parse(e0(_1.LOG+"(sin({0}))",m));break;case Q0:k=r.symfunction(t1,[m]);break;case t1:k=r.symfunction(Q0,[m]);break;case l1:k=r.parse(e0(_1.LOG+"(cosh({0}))",m));break;case u0:k=S.integration.by_parts(q,Y,X,f0);break;case q0:k=S.integration.by_parts(q,Y,X,f0);break;case d0:k=S.integration.by_parts(q,Y,X,f0);break;case i0:k=S.integration.by_parts(q,Y,X,f0);break;case k0:k=S.integration.by_parts(q,Y,X,f0);break;case d1:k=S.integration.by_parts(q,Y,X,f0);break;case w0:k=r.parse(e0("atan(sinh({0}))",m));break;case r0:k=r.parse(e0(_1.LOG+"(tanh(({0})/2))",m));break;case I0:k=r.parse(e0(_1.LOG+"(sinh({0}))",m));break;case b1:k=S.integrate(r.parse(e0("e^({0})",m)),Y,X);break;case"S":var m=q.args[0].clone(),O1=S.integration.decompose_arg(m,Y),D0=O1[1],G=O1[0],K0=O1[3];k=r.parse(e0("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",G,K0,h0));break;case"C":var m=q.args[0].clone(),O1=S.integration.decompose_arg(m,Y),D0=O1[1],G=O1[0],K0=O1[3];k=r.parse(e0("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",G,K0,D0));break;case"erf":var m=q.args[0].clone(),O1=S.integration.decompose_arg(m,Y),D0=O1[1],G=O1[0];k=r.parse(e0("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",G,D0,m));break;case"sign":k=r.multiply(q.clone(),m.clone());break;default:S.integration.stop()}k=r.divide(k,E0)}else if(h0.isLinear())if(N===h||N===i){var L0=Number(q.power);if(L0<0)q.fname=N===i?d:f,q.invert().updateHash(),k=S.integrate(q,Y,X);else{var m=q.args[0],I1=q.clone(),Z1=q.clone(),B1=new T0((L0-1)/L0),z1=r.multiply(E0.clone(),new T0(L0)).invert();I1.power=I1.power.subtract(new F(1)),Z1.power=Z1.power.subtract(new F(2));var S0=r.symfunction(N===h?i:h,[m.clone()]);N===i&&S0.negate(),k=r.add(r.multiply(r.multiply(z1,I1),S0),r.multiply(B1,S.integrate(r.parse(Z1),Y,X)))}}else if(N===l||N===E){if(q.args[0].isLinear(Y)){var z=q.power.subtract(new F(1)).toString(),w1=q.clone().toUnitMultiplier(),L1=r.parse(e0((N===E?"-":"")+"1/({2}*{0})*{3}({1})^({0})",z,m,E0,N));w1.power=w1.power.subtract(new F(2)),w1.power.equals(0)&&(w1=r.parse(w1)),k=r.subtract(L1,S.integrate(w1,Y,X))}}else if(N===f||N===d){var c2=q.power.subtract(new F(1)).toString(),i2=q.power.subtract(new F(2)).toString(),J1=N===f?l:E,w1=q.clone().toUnitMultiplier(),b2=e0((N===d?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",E0,c2,i2,m,N,J1),L1=r.parse(b2);w1.power=w1.power.subtract(new F(2)),w1.power.equals(0)&&(w1=r.parse(w1)),k=r.add(L1,r.multiply(new T0(i2/c2),S.integrate(w1,Y,X)))}else(N===t1||N===Q0)&&q.power.equals(2)?k=S.integrate(q.fnTransform(),Y,X):S.integration.stop();else S.integration.stop();k.multiplier=k.multiplier.multiply(F0)}}else if(J===$0)k=S.integration.partial_fraction(q,Y,X);else if(J===p0){var K1=q.getDenom();K1.group===X0&&(q=r.expand(q));var t=q.stripVar(Y),p=r.divide(q.clone(),t.clone());if(t.contains(Y)&&(p=r.multiply(p,t),t=new T0(1)),p.group!==p0){if(p.equals(1))return S.integrate(r.expand(q),Y,X);p.clone().toLinear().isPoly(!0)&&A.Utils.variables(p).length>1&&(p=A.Algebra.Factor.factor(p)),k=S.integrate(p,Y,X)}else{var M=p.collectSymbols().sort(function(V2,x2){return V2.group===x2.group?Number(V2.power)===Number(x2.power)?V2<x2?1:-1:x2.power-V2.power:x2.group-V2.group}).map(function(V2){var x2=T0.unwrapSQRT(V2,!0);return x2.fname===b1?r.parse(e0("({1})*e^({0})",x2.args[0],x2.multiplier)):x2}),I=M.length;if(q.power<0){if(I===2)return S.integrate(r.expand(q),Y,X,f0)}else if(I===2){try{k=S.integration.u_substitution(M,Y)}catch{}if(!k){var D=M[0].group,t0=M[1].group,j=M[0],C0=M[1],j0=j.fname,J0=C0.fname;if(q=r.multiply(j.clone(),C0.clone()),D===o1&&t0===o1)if(j0===c1||J0===c1)k=S.integration.by_parts(q.clone(),Y,X,f0);else{M.sort(function(x2,l3){return l3.fname>x2.fname});var e1=j.args[0];(!e1.isLinear()||!(e1.group===z0||e1.group===p0||e1.group===X0))&&S.integration.stop();var y0=S.integration.decompose_arg(e1,Y);h0=y0[1],E0=y0[0],h0.isLinear()||S.integration.stop();var s=C0.args[0];if(e1.equals(s))if(j0===i&&J0===h||j0===h&&J0===i)if(j.power.lessThan(0)&&S.integration.stop(),j0===i&&j.power.add(C0.power).equals(0))j.fname=l,j.updateHash(),k=S.integrate(j,Y,X);else if(x1(j.power)&&J0===h&&C0.power.lessThan(0)){var z=Number(j.power)/2,c=r.parse(e0("(1-cos({0})^2)^({1})",j.args[0],z));k=S.integrate(r.expand(r.multiply(c,C0.clone())),Y,X,f0)}else if(x1(j.power)&&J0===i&&C0.power.lessThan(0)){var z=Number(j.power)/2,c=r.parse(e0("(1-sin({0})^2)^({1})",j.args[0],z));k=S.integrate(r.expand(r.multiply(c,C0.clone())),Y,X,f0)}else{var P=A.Utils.even(j.power),V=A.Utils.even(C0.power);if(k=new T0(0),!P||!V){var U,w1,r1;P?(U=j,w1=C0):(U=C0,w1=j);var m0=U.fname===h?-1:1,z=w1.power,P0=(z-1)/2,r1=r.parse("(1-"+U.fname+A.Utils.inBrackets(e1)+"^2)^"+P0),x0=r.expand(r.multiply(new T0(m0),r.multiply(U.clone(),r1)));x0.each(function(J2){k=r.add(k,S.integration.poly_integrate(J2.clone()))})}else{var y1=function(J2){var t3=J2.power,g3=t3/2,S3;return J2.fname===h?S3="((1/2)+(cos(2*("+J2.args[0]+"))/2))^"+g3:S3="((1/2)-(cos(2*("+J2.args[0]+"))/2))^"+g3,r.parse(S3)},E0=y1(j),G0=y1(C0),S0=r.multiply(E0,G0),x0=r.expand(S0);return x0.each(function(J2){k=r.add(k,S.integrate(J2,Y,X))}),r.multiply(k,t)}}else if(j0===f&&J0===l&&h0.isLinear()&&C0.isLinear())k=r.parse(e0("sec({0})^({1})/({1})",j.args[0],j.power));else if(j0===l&&J0===f&&h0.isLinear())if(j.isLinear()&&C0.isLinear())k=r.divide(r.symfunction(f,[e1.clone()]),E0);else if(x1(j.power)){var L0=Number(j.power)/2,S0=r.parse(e0("(sec({0})^2-1)^({1})",j.args[0],L0));k=S.integrate(r.expand(r.multiply(S0,C0)),Y,X)}else S.integration.stop();else if(j0===f&&J0===h)j.fname=h,j.invert().updateHash(),k=S.integrate(r.multiply(j,C0),Y,X);else if(j0===i&&J0===d)C0.fname=i,C0.invert().updateHash(),k=S.integrate(r.multiply(j,C0),Y,X);else if(j0===l&&(J0===h||J0===i)&&C0.power.lessThan(0)){var S0=r.multiply(j.fnTransform(),C0);k=S.integrate(r.expand(S0),Y,X)}else{var S0=r.multiply(j.fnTransform(),C0.fnTransform());k=S.integrate(r.expand(S0),Y,X)}else if((j0===i||j0===h)&&(J0===i||J0===h))if(j.isLinear()&&C0.isLinear())if(j.args[0].isLinear()&&C0.args[0].isLinear()){var b0,u1;J0===i?(b0=j.args[0],u1=C0.args[0]):(u1=j.args[0],b0=C0.args[0]),U1=r.parse(e0("(sin(({1})+({0}))+sin(({1})-({0})))/2",b0.toString(),u1.toString())),k=S.integrate(U1,Y,X)}else{var s1=_(M);k=S.integrate(r.expand(s1),Y,X)}else{var s1=new T0(1);M.map(function(X2){var p3=X2.fnTransform();s1=r.multiply(s1,p3)});var S0=r.expand(s1);k=S.integrate(S0,Y,X),k.hasIntegral()&&(k=S.integrate(_(s1.collectSymbols()),Y,X))}else S.integration.stop()}else if(D===o1&&t0===X0){var C1=j.isLinear();if(j.fname===h&&C1&&C0.power.equals(-1))k=r.symfunction("Ci",[j.args[0]]);else if(j.fname===h&&C0.power.equals(-1))k=S.integrate(r.multiply(j.fnTransform(),C0.clone()),Y,X);else if(j.fname===t1&&C1&&C0.power.equals(-1))k=r.symfunction("Chi",[j.args[0]]);else if(j.fname===t1&&C0.power.equals(-1))k=S.integrate(r.multiply(j.fnTransform(),C0.clone()),Y,X);else if(j.fname===i&&C1&&C0.power.equals(-1))k=r.symfunction("Si",[j.args[0]]);else if(j.fname===i&&C0.power.equals(-1))k=S.integrate(r.multiply(j.fnTransform(),C0.clone()),Y,X);else if(j.fname===Q0&&C1&&C0.power.equals(-1))k=r.symfunction("Shi",[j.args[0]]);else if(j.fname===Q0&&C0.power.equals(-1))k=S.integrate(r.multiply(j.fnTransform(),C0.clone()),Y,X);else if(j.fname===c1&&C0.power.equals(-1))k=S.integration.poly_integrate(j,Y,X);else if(j.fname==="erf"){if(C0.power.equals(1)){var O1=S.integration.decompose_arg(j.args[0],Y),G=O1[0],D0=O1[1],m=j.args[0].toString();k=r.parse(e0("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",G,D0,m))}}else k=S.integration.by_parts(q,Y,X,f0)}else if(D===q1&&t0===X0){var h0=j0===c1?S.integration.decompose_arg(j.args[0],Y)[1]:null;j.isE()&&(j.power.group===X0||j.power.group===p0)&&C0.power.equals(-1)?k=r.symfunction("Ei",[j.power.clone()]):j0===c1&&h0.value===C0.value?k=S.integration.poly_integrate(j,Y,X):k=S.integration.by_parts(q,Y,X,f0)}else if(D===$0&&t0===X0){if(C0.value===j.value&&j.power.equals(-1)){var g1=Math.min.apply(null,A.Utils.keys(j.symbols)),f2=Math.min(g1,C0.power),k1=C0.clone();k1.power=new F(f2),C0=r.divide(C0,k1.clone());var S0=new T0(0);j.each(function(x2){S0=r.add(S0,r.divide(x2.clone(),k1.clone()))}),S0.multiplier=j.multiplier,q=r.divide(C0,S0)}else q=r.expand(q);k=S.integration.partial_fraction(q,Y,X)}else if(D===z0&&t0===X0){var U1=j.clone().toLinear(),h1=A.Algebra.degree(U1,r.parse(Y)).equals(1);if(j.power.equals(-1/2)){var y0=S.integration.decompose_arg(j.clone().toLinear(),Y),E0=y0[0].negate(),h0=y0[1],G0=y0[3],Q1=Number(j.power),p2=Number(C0.power);if($(p2)&&A.Utils.even(p2)&&h0.power.equals(2)){var a2=r.divide(r.multiply(r.pow(G0.clone(),new T0(2)),r.symfunction(Z,[r.divide(G0.clone(),E0.clone())])),r.pow(E0.clone(),new T0(2)));a2=r.multiply(a2,r.symfunction(Z,[G0]).invert());var W1=r.parse("sin(u)");W1.power=W1.power.multiply(C0.power);var Q=S.integrate(W1,"u",X),r2=r.parse(L+"("+Z+"("+E0+"/"+G0+")*"+Y+")");k=r.multiply(a2,Q.sub(new T0("u"),r2))}else if(Q1===-1/2){var o2=function(J2,t3){var g3=r.parse(S.integrate(J2,Y,X,f0).sub(Y,e0(t3,Y)));if(!g3.hasIntegral())return g3};p2===-1?k=o2(r.expand(r.expand(r.pow(r.multiply(j.invert(),C0.invert()),new T0(2)))).invert(),"sqrt(1-1/({0})^2)"):p2===-2&&(k=o2(r.sqrt(r.expand(r.divide(r.pow(q,new T0(2)).invert(),r.pow(new T0(Y),new T0(2))).negate())).invert(),"sqrt(1-1/({0})^2)"))}}else if(j.power.equals(-1)&&C0.isLinear()&&h1)k=S.integration.partial_fraction(q,Y,X);else if(!j.power.lessThan(0)&&$(j.power)){var h2=r.expand(j);k=new T0(0),h2.each(function(x2){x2.group===$0?x2.each(function(l3){k=r.add(k,S.integrate(r.multiply(C0.clone(),l3),Y,X))}):k=r.add(k,S.integrate(r.multiply(C0.clone(),x2),Y,X))})}else if(j.power.lessThan(-2))k=S.integration.by_parts(q,Y,X,f0);else if(j.power.lessThan(0)&&C0.power.greaterThan(1)){var y0=S.integration.decompose_arg(j.clone().toLinear(),Y),E0=y0[0].negate(),h0=y0[1],G0=y0[3],_0=j.clone().toLinear();if(h0.group!==$0&&h0.isLinear()){var L0=Number(C0.power),B="_u_",U=new T0(B),M1=r.expand(r.divide(r.pow(r.subtract(U.clone(),G0.clone()),new T0(L0)),U.clone())),u2={};u2[B]=_0;var s2=r.parse(M1,u2);k=S.integrate(s2,Y,0)}else if(C0.power.greaterThan(h0.power)||C0.power.equals(h0.power)){var l2=new A.Algebra.Classes.Factors;j=A.Algebra.Factor.coeffFactor(j.invert(),l2);var S2=A.Algebra.divide(C0,j);S2.group!==p0?(k=new T0(0),S2.each(function(t3){k=r.add(k,S.integrate(t3,Y,X))}),l2.each(function(t3){k=r.divide(k,t3)}),k=r.expand(k)):k=S.integration.by_parts(q,Y,X,f0)}else k=S.integration.partial_fraction(q,Y,X)}else if(j.power.den.equals(2)){var O1=S.integration.decompose_arg(j.clone().toLinear(),Y),E0=O1[3],h0=O1[1],G0=O1[0],u1=O1[2];if(h0.power.equals(2)&&G0.lessThan(0)){E0.equals(1)||(t=r.multiply(t,r.pow(E0,new T0(2))));var U=Y,a2=r.divide(r.pow(G0.clone().negate(),new T0(1/2)),r.pow(E0,new T0(1/2))),B=r.symfunction(h,[new T0(U)]),N2=r.pow(r.symfunction(h,[new T0(U)]),new T0(j.power.num)),M2=r.pow(r.symfunction(i,[new T0(U)]),new T0(C0.power)),C2=r.multiply(r.multiply(N2,B),M2),Q=S.integrate(C2,U,X);k=Q.sub(U,r.symfunction(L,[r.multiply(new T0(Y),a2)]))}else k=S.integration.partial_fraction(q,Y,X,f0)}else h1&&(k=S.integration.partial_fraction(q,Y,X))}else if(j.isComposite()&&C0.isComposite())if(k=new T0(0),j.power.greaterThan(0)&&C0.power.greaterThan(0)){var x0=r.expand(q);x0.each(function(x2){k=r.add(k,S.integrate(x2,Y,X))},!0)}else{var Q1=Number(j.power),p2=Number(C0.power);if(Q1<0&&p2>0){var S0=j;j=C0,C0=S0}Q1===-1&&p2===-1?k=S.integration.partial_fraction(q,Y):j.each(function(l3){var X2=r.multiply(l3,C0.clone()),p3=S.integrate(X2,Y,X);k=r.add(k,p3)})}else if(D===z0&&M[0].power.greaterThan(0))j=r.expand(j),k=new T0(0),j.each(function(V2){k=r.add(k,S.integrate(r.multiply(V2,C0.clone()),Y,X))},!0);else if(D===o1&&t0===q1&&A.Utils.in_htrig(j.fname))j=j.fnTransform(),k=S.integrate(r.expand(r.multiply(j,C0)),Y,X);else if(D===o1&&t0===z0||t0===o1&&D===z0){if(t0===o1&&D===z0){var S0=j;j=C0,C0=S0}var B,k2,L0,B1,j2,Y2;if(B=T0.unwrapSQRT(S.diff(j.clone(),Y),!0),k2=T0.unwrapSQRT(C0,!0),B.power.equals(k2.power)){if(L0=new T0(C0.power),j2=B.clone().toLinear(),Y2=C0.clone().toLinear(),B1=A.Algebra.divide(j2.toLinear(),Y2),B1.isConstant()){var e3=r.pow(B1,L0.negate());k=r.multiply(e3,S.integration.poly_integrate(j.clone()))}}else k=S.integration.by_parts(q,Y,X,f0)}else{var c3=j.clone().toLinear(),G2=C0.clone().toLinear();D===q1&&t0===q1&&j.power.contains(Y)&&C0.power.contains(Y)&&!c3.contains(Y)&&!G2.contains(Y)?k=r.parse(e0("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",c3.toString(),G2.toString(),j.power.multiplier.toString(),C0.power.multiplier.toString(),Y)):k=S.integration.by_parts(q,Y,X,f0)}}}else if(I===3&&(M[2].group===X0&&M[2].power.lessThan(2)||M[0].group===z0)){var Q2=M[0];if(Q2.group===z0){Q2.power.greaterThan(1)&&(Q2=r.expand(Q2));var w1=r.multiply(M[1],M[2]);k=new T0(0),Q2.each(function(x2){var l3=r.multiply(x2,w1.clone()),X2=S.integrate(l3,Y,X);k=r.add(k,X2)},!0)}else k=S.integration.by_parts(q,Y,X,f0)}else if(s0(M)){for(var S0=new T0(1),a3=0,I=M.length;a3<I;a3++)S0=r.multiply(S0,M[a3].fnTransform());S0=r.expand(S0),k=S.integrate(S0,Y,X)}else{var s1=_(M);k=S.integrate(r.expand(s1),Y,X)}}k=r.multiply(k,t)}if(k)return k}catch(V2){if(!(V2 instanceof H0||V2 instanceof A.exceptions.DivisionByZero))throw V2}return r.symfunction("integrate",[O,W])},!1))},defint:function(O,W,X,f0){f0=f0||"x";var c0=function(l0,F0,L0){try{return r.parse(l0,F0)}catch{var _0=S.Limit.limit(l0,f0,L0);return _0}},O0=A.Utils.variables(O),Y=O.hasTrig(),q,J;if(O0.length===1&&!f0&&(f0=O0[0]),Y||(J=S.integrate(O,f0)),!Y&&!J.hasIntegral()){var k={},S0={},E0,U0;k[f0]=X,S0[f0]=W,E0=c0(J,k,X),U0=c0(J,S0,W),q=r.subtract(E0,U0)}else if(O0.length===1&&W.isConstant()&&X.isConstant()){var h0=A.Utils.build(O);q=new T0(A.Math2.num_integrate(h0,Number(W),Number(X)))}else q=r.symfunction("defint",[O,W,X,f0]);return q},Limit:{interval:function(O,W){return r.parse(e0("[{0}, {1}]",O,W))},diverges:function(){return S.Limit.interval("-Infinity","Infinity")},divide:function(O,W,X,f0,c0){if(!(c0++>_1.max_lim_depth)){O.clone();var O0=W.clone();if(W.fname===Z0){var Y=O.sign(),q=f0.sign();if(f0.isInfinity)return r.multiply(new T0(Y),new T0(q));if(f0.equals(0)){var J=r.parse(O.multiplier),k=r.parse(W.multiplier);return r.divide(r.multiply(J,S.Limit.interval("-1","1")),k)}else S.Limit.diverges()}var S0=function(R0){if(A.Utils.isVector(R0)){for(var i1=0;i1<R0.elements.length;i1++)if(!R0.elements[i1].isInfinity)return!1;return!0}return R0.isInfinity},E0=function(R0,i1){return A.Utils.isVector(R0)?!1:R0.equals(i1)},U0;do{var h0=A0(S.Limit.limit(O.clone(),X,f0,c0)),l0=A0(S.Limit.limit(W.clone(),X,f0,c0)),F0=S0(h0)&&S0(l0)||E0(h0,0)&&E0(l0,0);if(F0){var L0=S.diff(O.clone(),X),_0=S.diff(W.clone(),X),y0=r.expand(r.divide(L0,_0));O=y0.getNum(),W=y0.getDenom()}}while(F0);var G0=l0.equals(0),b0=Number(O0.power);return f0.isConstant(!0)&&G0?U0=T0.infinity(A.Utils.even(b0)&&h0.lessThan(0)?-1:void 0):G0?U0=S.Limit.diverges():U0=r.divide(h0,l0),U0}},rewriteToLog:function(O){var W=O.power.clone();return O.toLinear(),r.pow(new T0("e"),r.multiply(W,r.symfunction(_1.LOG+"",[O])))},getSubbed:function(O,W,X){var f0;O.group===q1&&(O=S.rewriteToLog(O));try{f0=O.sub(W,X)}catch{f0=O}return f0},isInterval:function(O){return A.Utils.isVector(O)},isConvergent:function(O){return!(S.Limit.isInterval(O)&&O.elements[0].isInfinity&&O.elements[1].isInfinity||O.containsFunction("limit"))},limit:function(O,W,X,f0){if(O.isLinear()&&O.isComposite()){var c0=new T0(0);return O.each(function(C){c0=r.add(c0,S.Limit.limit(C,W,X,f0))},!0),c0}if(O=A.Algebra.Simplify.simplify(O),f0=f0||1,!(f0++>_1.max_lim_depth)){var O0=r.parse(O.multiplier);O.toUnitMultiplier();try{var Y;if(O.isConstant(!0))Y=O;else{var q={};q[W]=X;try{var J=r.parse(O.sub(W,X),q);(J.isConstant(!0)||J.isInfinity)&&(Y=J)}catch{}if(!Y){var k=O.getNum(),S0=O.getDenom();if(S0.isConstant(!0)){if(O.group===q1){var E0=O.clone().toLinear(),U0=O.power.clone(),h0=E0.getNum(),l0=E0.getDenom(),F0=A.Utils.decompose_fn(l0,W,!0);if(h0.group===X0&&h0.multiplier.isOne()&&F0.ax.group===X0&&F0.b.isConstant(!0)&&F0.a.isOne()&&F0.b.isConstant(!0))Y=r.parse(e0("(1/e^({0}))",F0.b));else{var L0=S.Limit.rewriteToLog(O.clone()),_0=L0.power.clone(),y0=L0.clone().toLinear(),G0=S.Limit.limit(y0,W,X,f0),b0=S.Limit.limit(_0,W,X,f0);Y=r.pow(G0,b0)}}else if(O.group===o1&&O.args.length===1){var R0,i1=S.Limit.limit(O.args[0],W,X,f0);if(A.Utils.isVector(i1))return Y=i1.map(function(C){var T=O.clone();return T.args[0]=C,S.Limit.limit(r.symfunction(O.fname,[C]),W,X,f0)}),r.multiply(O0,Y);if(i1.isConstant(!0)){var A1=r.symfunction(O.fname,[i1]);try{A0(A1),R0=!0}catch{R0=!1}}if(R0)Y=A1;else if(S.Limit.isConvergent(i1)){if(O.fname===c1)switch(i1.toString()){case"0":Y=T0.infinity().negate();break;case"Infinity":Y=T0.infinity();break;case"-Infinity":Y=T0.infinity();break}else if((O.fname===h||O.fname===i)&&X.isInfinity)Y=S.Limit.interval(-1,1);else if(O.fname===l){var a1=O.args[0],U1=a1.getNum(),D1=a1.getDenom(),P1=U1.toUnitMultiplier();(X.isInfinity||P1.equals("pi")&&D1.equals(2))&&(Y=divergent())}else if(O.fname===_1.FACTORIAL&&i1.isInfinity)return T0.infinity()}}else if(O.group===X0){if(O.power>0)return r.parse(O,q);A.Utils.even(O.power)?Y=T0.infinity():Y=S.Limit.diverges()}else if(O.group===p0){var Y1,$1,T1=O.collectSymbols().sort(function(T,a){return T.group-a.group}),E0=T1.pop();for(Y1=A0(S.Limit.limit(E0,W,X,f0));T1.length;){var J1=T1.pop();$1=A0(S.Limit.limit(J1,W,X,f0)),Y1.isInfinity||!S.Limit.isConvergent(Y1)&&$1.equals(0)||Y1.equals(0)&&S.Limit.isConvergent($1)?(J1.containsFunction(c1)&&(J1=[E0,E0=J1][0]),J1.invert(),Y1.isInfinity&&$1.isInfinity?Y1=T0.infinity():Y1=S.Limit.divide(E0,J1,W,X,f0)):(Y1=r.multiply(Y1,$1),E0=r.multiply(E0,J1))}Y=Y1}else if(O.isComposite()){var v2;O.isLinear()||(O=r.expand(O)),Y=new T0(0);for(var T1=O.collectSymbols().sort(function(T,a){return a.group-T.group}),H1=[],R1=new T0(0),v1=0,e2=T1.length;v1<e2;v1++){var t2=T1[v1].clone();t2.group===o1||t2.group===p0&&t2.hasFunc()?R1=r.add(R1,t2):H1.push(t2)}H1.unshift(R1),H1.length!==1&&(T1=H1);for(var v1=0,e2=T1.length;v1<e2;v1++){var t2=T1[v1];try{v2=S.Limit.limit(t2,W,X,f0)}catch{v2=S.Limit.diverges()}try{Y=r.add(Y,v2)}catch{if(f0++>_1.max_lim_depth)return;Y=S.Limit.limit(S.diff(O,W),W,X,f0)}}}}else Y=S.Limit.divide(k,S0,W,X,f0)}}Y||(Y=r.symfunction("limit",[O,W,X]))}catch{Y=r.symfunction("limit",[O,W,X])}return r.multiply(O0,Y)}}},Fresnel:{S:function(O){return O.isConstant(!0)?S.defint(r.parse("sin(pi*x^2/2)"),T0(0),O,"x"):r.symfunction("S",arguments)},C:function(O){return O.isConstant(!0)?S.defint(r.parse("cos(pi*x^2/2)"),T0(0),O,"x"):r.symfunction("C",arguments)}}};A2.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return S.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return S.sum}},{name:"product",visible:!0,numargs:4,build:function(){return S.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return S.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return S.defint}},{name:"S",visible:!0,numargs:1,build:function(){return S.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return S.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return S.Limit.limit}}]),A2.updateAPI()})()})();(function(W2){var A2=function(H1){var r=new w,F=H1.bigInt,_1=H1.bigDec;_1.set({precision:250});var N1={},T0=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],X1={},N0={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["\u03C0"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{\u03C0:"pi","\u221E":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};(function(){N0.CACHE.roots={};for(var e=2;e<=40;e++)for(var u=2;u<=40;u++){var m=F(e).pow(u);N0.CACHE.roots[m+"-"+u]=e}})();function $(e){function u(m){this.name=e,this.message=m!==void 0?m:"",(m=new Error(this.message)).name=this.name,this.stack=m.stack}return u.prototype=Object.create(Error.prototype),u}function e0(e){return H.indexOf(e)!==-1}function x1(e){return e instanceof t2}function A0(e){return(e=i0(e)?e.multiplier:e).lessThan(0)}function f1(e){return Math.min.apply(void 0,e)}function X0(e,u){if(m1(e))for(var m=e.length,N=0;N<m;N++)u.call(e,N);else for(var B in e)e.hasOwnProperty(B)&&u.call(e,B)}function o1(e){for(var u=e.length,m=[],N=0;N<u;N++){var B=e[N];m.indexOf(B)===-1&&m.push(B)}return m}function $0(e){for(var u=T0[T0.length-1]||2;u<e;u++)r0(u)&&T0.push(u)}var z0=N1.N=1,p0=N1.P=2,q1=N1.S=3,F1=N1.EX=4,c1=N1.FN=5,b1=N1.PL=6,Z0=N1.CB=7,Z=N1.CP=8,i=N0.CONST_HASH="#",h=N0.PARENTHESIS,l=N0.SQRT,f=N0.ABS,d=N0.FACTORIAL,E=N0.DOUBLEFACTORIAL,L=[],x={},H=[],u0=[],q0=function(e,u){if(!N0.suppress_errors)throw new(u||Error)(e)},d0=function(e){for(var u=e[0],m=1,N=e.length;m<N;m++)if(!e[m].equals(u))return!1;return!0},Q0=function(e){u0.push(e),N0.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},t1=function(e,u){if(u=u||"variable",N0.ALLOW_CHARS.indexOf(e)===-1&&!N0.VALIDATION_REGEX.test(e))throw new Y1(e+" is not a valid "+u+" name")},l1=function(e){var u,m,N,B=Math.sign(e);return e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)&&(N=(N=(m=String(e).toLowerCase().split("e")).pop())/(u=Math.abs(N)),m=m[0].split("."),e=N==-1?(u-=m[0].length)<0?m[0].slice(0,u)+"."+m[0].slice(u)+(m.length===2?m[1]:""):"0."+new Array(u+1).join("0")+m.join(""):((N=m[1])&&(u-=N.length),u<0?m[0]+N.slice(0,u)+"."+N.slice(u):m.join("")+new Array(u+1).join("0"))),B<0?"-"+e:e},r0=function(e){for(var u=Math.floor(Math.sqrt(e)),m=2;m<=u;m++)if(e%m==0)return!1;return!0},w0=function(e){return/^\d+\.?\d*$/.test(e)},I0=function(e){return i0(e)?I0(e.multiplier.toDecimal()):e%1!=0},i0=function(e){return e instanceof a},k0=function(e,u,m){if(m=m||{c:[],add:function(n0){this.c.indexOf(n0)===-1&&isNaN(n0)&&this.c.push(n0)}},i0(e)){var N=e.group,B=e.previousGroup;if(N===F1&&k0(e.power,u,m),N===Z||N===Z0||B===Z||B===Z0)for(var o0 in e.symbols)k0(e.symbols[o0],u,m);else if(N===q1||B===q1)e.value!=="e"&&e.value!=="pi"&&e.value!==N0.IMAGINARY&&m.add(e.value);else if(N===b1||B===b1)k0(f0(e.symbols),u,m);else if(N===F1)isNaN(e.value)||m.add(e.value),k0(e.power,u,m);else if(N===c1&&!u)for(var x0=0;x0<e.args.length;x0++)k0(e.args[x0],u,m)}return m.c.sort()},d1=function(e,u){e=r.expand(e),u=u||{};function m(N,B){u[N]||(u[N]=new a(0)),u[N]=r.add(u[N],B.clone())}return e.each(function(N){if(N.isConstant("all"))m("constants",N);else if(N.group===q1)m(N.value,N);else if(N.group!==c1||N.fname!==f&&N.fname!==""){if(N.group===F1||N.group===c1)throw new Error("Unable to separate. Term cannot be a function!");m(k0(N).join(" "),N)}else d1(N.args[0])}),u},H0=function(e){return e instanceof U},s0=function(e){return e instanceof b},M0=function(e){return e instanceof R},n1=function(e){return e.group===z0||e.group===p0},m1=function(e){return Array.isArray(e)},_=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},S=function(e){return e&&String(e)},O=function(e){return"("+e+")"},W=function(){var e=[].slice.call(arguments);return e.shift().replace(/{(\d+)}/g,function(u,m){return m=e[m],typeof m=="function"?m():m})},X=Object.keys,f0=function(e,u,m){for(var N in e)break;return u?N:m?{key:N,obj:e[N]}:e[N]},c0=function(e,u,m){return t1(e),e0(e)?null:(u=u||k0(r.parse(m)),r.functions[e]=[r.mapped_function,u.length,{name:e,params:u,body:m}],m)},O0=function(e,u,m){var N,B;return u=String(u),e.group===Z?(B=r.expand(e.clone()).stripVar(u),N=r.subtract(e.clone(),B.clone()),B=B):N=e.clone(),e=N.stripVar(u),u=r.divide(N.clone(),e.clone()),B=B||new a(0),m?{a:e,x:u,ax:N,b:B}:[e,u,N,B]},Y=function(e,u){return _(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(u=u===void 0?14:u,Math.round(e*Math.pow(10,u))/Math.pow(10,u))},q=function(e){return e%2==0},J=function(e){return 1/(e%1)%2==0},k=function(e,u){var m=typeof u;m=="function"&&m!="undefined"||(u=function(W0,V0){return W0===V0});for(var N=[];e.length;){var B=e[0];if(e.length===1){N.push(B);break}var o0=[];N.push(B);for(var x0=1;x0<e.length;x0++){var n0=e[x0];u(B,n0)||o0.push(n0)}e=o0}return N},a0=function(e){function u(m){H.indexOf(m)===-1&&H.push(m)}typeof e=="string"?u(e):X0(e,function(m){u(m)})},S0=function(e,u){var m;return m1(e)?m=e.splice(u,1)[0]:(m=e[u],delete e[u]),m},E0=function(e,u,m,N){var B=N0[e];return N0[e]=m===void 0||!!m,N=u.call(N),N0[e]=B,N},U0=function(e){return[].slice.call(e)},h0=function(e,u){return E0("PARSE2NUMBER",function(){return r.parse(e,u)},!0)},l0=function(e){if(m1(e)){for(var u=new U([]),m=0;m<e.length;m++)u.elements.push(l0(e[m]));return u}return i0(e)?e:r.parse(e)},F0=function(e){for(var u=0;u<e.length;u++)if(e[u].group!==z0)return!1;return!0},L0=function(e){for(var u=0;u<e.length;u++)if(!e[u].isPi()&&!e[u].isE()&&!e[u].isConstant(!0))return!1;return!0},_0=function(e,u,m){(u.isComposite()&&!e.isComposite()||u.isLinear()&&!e.isLinear())&&([e,u]=[u,e]);var N=new a(0);return e.isLinear()?e.each(function(B){var o0;u.isComposite()?u.isLinear()?u.each(function(x0){x0=r.multiply(r.parse(B),r.parse(x0)),x0=r.expand(r.parse(x0),m),N=r.add(N,x0)},!0):N=r.add(N,r.multiply(B,r.parse(u))):(o0=r.multiply(r.parse(B),r.parse(u)),N=r.add(N,r.expand(o0,m)))},!0):N=r.multiply(e,u),N},y0=$("DivisionByZero"),G0=$("ParseError"),b0=$("UndefinedError"),R0=$("OutOfFunctionDomainError"),i1=$("MaximumIterationsReached"),A1=$("NerdamerTypeError"),a1=$("ParityError"),U1=$("OperatorError"),D1=$("OutOfRangeError"),P1=$("DimensionError"),Y1=$("InvalidVariableNameError"),$1=$("ValueLimitExceededError"),T1=$("NerdamerValueError"),J1=$("SolveError"),H1=$("InfiniteLoopError"),v2=$("UnexpectedTokenError"),H1={DivisionByZero:y0,ParseError:G0,OutOfFunctionDomainError:R0,UndefinedError:b0,MaximumIterationsReached:i1,NerdamerTypeError:A1,ParityError:a1,OperatorError:U1,OutOfRangeError:D1,DimensionError:P1,InvalidVariableNameError:Y1,ValueLimitExceededError:$1,NerdamerValueError:T1,SolveError:J1,InfiniteLoopError:H1,UnexpectedTokenError:v2},R1={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var u=1/(1+.5*Math.abs(e)),u=1-u*Math.exp(-e*e-1.26551223+u*(1.00002368+u*(.37409196+u*(.09678418+u*(u*(.27886807+u*(u*(1.48851587+u*(.17087277*u-.82215223))-1.13520398))-.18628806)))));return 0<=e?u:-u},diff:function(e){return function(u){return(e(u+.001)-e(u-.001))/.002}},median:function(...e){e.sort(function(m,N){return m-N});var u=Math.floor(e.length/2);return e.length%2?e[u]:(e[u-1]+e[u])/2},fromContinued:function(e){for(var u=e.fractions.slice(),m=1/u.pop(),N=0,B=u.length;N<B;N++)m=1/(u.pop()+m);return e.sign*(e.whole+m)},continuedFraction:function(e,u){u=u||20;for(var m=Math.sign(e),N=Math.abs(e),B=Math.floor(N),o0=N-B,x0=0,n0=!1,W0={whole:B,sign:m,fractions:[]};!n0&&o0!==0;){var V0=1/o0,K0=Math.floor(V0);if(1e7<K0&&R1.fromContinued(W0)-e<=Number.EPSILON)break;W0.fractions.push(K0),((o0=V0-K0)<=1e-14||u-1<=x0)&&(n0=!0),x0++}return m=W0.fractions.length-1,W0.fractions[m]===1&&(W0.fractions.pop(),W0.fractions[--m]++),W0},bigpow:function(e,u){e instanceof T||(e=T.create(e)),u instanceof T||(u=T.create(u));var m,N=new T(0);return u.isInteger()?(N.num=e.num.pow(u.toString()),N.den=e.den.pow(u.toString())):(m=T.create(Math.pow(e.num,u.num)),e=T.create(Math.pow(e.den,u.num)),N.num=R1.nthroot(m,u.den.toString()),N.den=R1.nthroot(e,u.den)),N},gamma:function(e){var u=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*R1.gamma(1-e));--e;for(var m=u[0],N=1;N<9;N++)m+=u[N]/(e+N);var B=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(B,e+.5)*Math.exp(-B)*m},bigfactorial:function(e){for(var u=new F(1),m=2;m<=e;m++)u=u.times(m);return new T(u)},bigLog:function(e){var u=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(u[e])return T.quick.apply(null,u[e].split("/"));e=new T(e);for(var n0=new T(0),m=e.subtract(new T(1)),N=e.add(new T(1)),B=0;B<80;B++)var o0=new T(2*B+1),x0=R1.bigpow(m.divide(N),o0),x0=o0.clone().invert().multiply(x0),n0=n0.add(x0);return n0.multiply(new T(2))},factorial:function(e){var u=e%1==0;if(u&&e<0)return NaN;if(!u)return R1.gamma(e+1);for(var m=1,N=2;N<=e;N++)m*=N;return m},dfactorial:function(e){if(_(e)){var u=e%2==0,m=u?e/2:(e+1)/2,N=new T(1);if(u)for(var B=1;B<=m;B++)N=N.multiply(new T(2).multiply(new T(B)));else for(B=1;B<=m;B++)N=N.multiply(new T(2).multiply(new T(B)).subtract(new T(1)))}else N=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*R1.gamma(1+e/2);return N},GCD:function(){for(var e=o1([].slice.call(arguments).map(function(B){return Math.abs(B)})).sort(),u=Math.abs(e.shift()),m=e.length;0<m--;)for(var N=Math.abs(e.shift());;){if((u%=N)===0){u=N;break}if((N%=u)===0)break}return u},QGCD:function(){for(var e=[].slice.call(arguments),u=e[0],m=1;m<e.length;m++){var N=e[m],B=u.isNegative()&&N.isNegative()?-1:1,u=N.gcd(u);B<0&&u.negate()}return u},LCM:function(e,u){return e*u/R1.GCD(e,u)},pow:function(e,u){return e<0&&Math.abs(u)<1?1/u%2==0?NaN:-Math.pow(Math.abs(e),u):Math.pow(e,u)},factor:function(e){e=Number(e);var u=Math.sign(e);e=Math.abs(e);var m,N=R1.ifactor(e),B=new a;for(m in B.symbols={},B.group=Z0,N){var o0=new a(1);o0.group=p0,o0.value=m,o0.power=new a(N[m]),B.symbols[m]=o0}return B.updateHash(),e===1&&(B=new a(e)),u<0&&B.negate(),B},sfactor:function(e,u){u=u||{};var m=Math.floor(Math.sqrt(e));T0[T0.length-1]<m&&e<1e6&&$0(m);for(var N=T0.length,B=0;B<N;B++)for(var o0=T0[B];e%o0==0;)e/=o0,u[o0]=(u[o0]||0)+1;return 1<e&&(u[e]=1),u},ifactor:function(e){var u=new F(e);if((e=String(e))==="0")return{0:1};var m=(e=new F(e)).sign?-1:1;e=e.abs();var N={};if(e.lt("65536"))N=R1.sfactor(e,N);else{var B=function(W0){W0.isPrime()?N[W0]=(N[W0]||0)+1:N=R1.sfactor(W0,N)};try{for(var o0=1e3,x0=0;!e.abs().equals(1);){if(e.isPrime()){B(e);break}var n0=function W0(V0){for(var K0=new F(V0),O1=2,D0=new F(V0),G=new F(1);G.equals(1);){for(var I1=0;I1<=O1&&G.equals(1);I1++){if(x0++>o0)throw new Error("stopping");D0=D0.pow(2).add(1).mod(e),G=F.gcd(D0.minus(K0).abs(),e)}O1*=2,K0=D0}return G.equals(e)?W0(V0+1):G}(2);B(n0),e=e.divide(n0)}}catch{N={},B(u)}}return m==-1&&(m=f1(X(N)),N["-"+m]=N[m],delete N[m]),N},boxfactor:function(e,u){u=u||200;for(var m,N,B=Math.floor(5/12*e),o0=0,x0=!1;m=Math.floor(e/B),(N=e%B)!=0;){if(x0)return[e,1];B=Math.max(N,B-N),x0=u<++o0}return[m,B,o0]},fib:function(e){var u=Math.sign(e);e=Math.abs(e);for(var u=q(e)?u:Math.abs(u),m=0,N=1,B=1,o0=2;o0<=e;o0++)B=m+N,m=N,N=B;return B*u},mod:function(e,u){return e%u},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,u,m,N){function B(O1,D0,G){var I1=O1(D0);return I1=isNaN(I1)?O1(G===1?D0+1e-12:D0-1e-12):I1}N=N||1e-4;var o0=Math.abs(Math.floor((m-u)/N));o0%2!=0&&o0++;for(var x0=(m-u)/o0,n0=B(e,u,1),W0=!1,V0=u+x0,K0=1;K0<o0;K0++)n0+=(W0?2:4)*B(e,V0,1),W0=!W0,V0+=x0;return(n0+B(e,V0,2))*(x0/3)},num_integrate:function(e,u,m,N,B){if(B<0)throw new Error("max depth cannot be negative");function o0(n0,W0,V0,B1,O1){var D0={maxDepthCount:0,nanEncountered:!1};B1===void 0&&(B1=1e-9),O1===void 0&&(O1=45);var G=n0(W0),I1=n0(.5*(W0+V0)),Z1=n0(V0),B1=function z1(w1,L1,c2,i2,b2,K1,t,p,M,I,D){if(D.nanEncountered)return NaN;var t0,j,C0,j0=c2-L1,J0=w1(L1+.25*j0),e1=w1(c2-.25*j0);if(isNaN(J0))D.nanEncountered=!0;else if(isNaN(e1))D.nanEncountered=!0;else if(t=((j=(C0=j0*(i2+4*J0+b2)/12)+(t0=j0*(b2+4*e1+K1)/12))-t)/15,!(D.maxDepthCount>1e3*M))return M<I?(D.maxDepthCount++,j+t):Math.abs(t)<p?j+t:(C0=z1(w1,L1,j0=L1+.5*j0,i2,J0,b2,C0,.5*p,M,I+1,D),isNaN(C0)?(D.nanEncountered=!0,NaN):(I=z1(w1,j0,c2,b2,e1,K1,t0,.5*p,M,I+1,D),isNaN(I)?(D.nanEncountered=!0,NaN):C0+I))}(n0,W0,V0,G,I1,Z1,(G+4*I1+Z1)*(V0-W0)/6,B1,O1,1,D0);if(0<D0.maxDepthCount&&Q0("integrate-adaptive-simpson: Warning: maximum recursion depth ("+O1+") reached "+D0.maxDepthCount+" times"),D0.nanEncountered)throw new Error("Function does not converge over interval!");return B1}var x0;try{x0=o0(e,u,m,N,B)}catch{return R1.simpson(e,u,m)}return Y(x0,12)},Ci:function(e){for(var u=0,m=1;m<20;m++){var N=2*m;u+=Math.pow(-1,m)*Math.pow(e,N)/(N*R1.factorial(N))}return Math.log(e)+.5772156649015329+u},Si:function(e){for(var u=0,m=0;m<20;m++){var N=2*m;u+=Math.pow(-1,m)*Math.pow(e,1+N)/((1+N)*R1.factorial(1+N))}return u},Ei:function(e){if(Number(e)===0)return-1/0;for(var u=0,m=1;m<30;m++)u+=Math.pow(e,m)/(m*R1.factorial(m));return .5772156649015329+Math.abs(Math.log(e))+u},Shi:function(e){for(var u,m,N=0,B=0;B<30;B++)m=1+(u=2*B),N+=Math.pow(e,m)/(m*m*R1.factorial(u));return N},Chi:function(e){var u=function(m){return(Math.cosh(m)-1)/m};return Math.log(e)+.5772156649015329+R1.num_integrate(u,.002,e,.001)},Li:function(e){return R1.Ei(R1.bigLog(e))},gamma_incomplete:function(e,u){for(var m=e-1,N=0,u=u||0,B=0;B<m;B++)N+=Math.pow(u,B)/R1.factorial(B);return R1.factorial(m)*Math.exp(-u)*N},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return(e=Math.abs(e))===.5?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,u){if(e instanceof T||(e=new T(e.toString())),(u=u instanceof T?u:new T(u.toString())).equals(1))return e;var m=e.divide(new T(2)),N=new T(1e-15),B=u.clone().invert(),o0=u.subtract(new T(1));do{var x0=R1.bigpow(m,o0),n0=B.multiply(e.divide(x0).subtract(m)).toDecimal(25),x0=T.create(n0);if(W0)break;var m=m.add(x0),n0=x0.toDecimal(),W0=!!V0&&V0===n0,V0=n0}while(x0.abs().gte(N));return m},sqrt:function(e){var u,m,N;e instanceof T||(e=new T(e));var B=0,o0=!1,x0=new T(1e-20),n0=e.divide(new T(2));do if(1e3<B)throw new Error("Unable to calculate square root for "+e);while(n0=n0.add(e.divide(n0)).divide(new T(2)),n0=new T(n0.decimal(30)),u=e.subtract(n0.multiply(n0)),N=!!m&&m.equals(u),(u.clone().abs().lessThan(x0)||N)&&(o0=!0),m=u,B++,!o0);return n0}};function v1(e,u,m,N){var B=u==="hash",o0=void 0,x0=B?void 0:u,n0=x0==="decimal"||x0==="decimals";function W0(i2){switch(u){case"decimals":case"decimal":return o0=o0||function(s){return!1},i2.valueOf();case"recurring":o0=o0||function(s){return s.indexOf("'")!==-1};var e1=i2.toString();if((J0=/^-?\d+(?:\/\d+)?$/.exec(e1)).length===0)return e1;var C0=J0[0].split("/"),b2=!1,K1=Number(C0[0]);K1<0&&(K1=-K1,b2=!0);var t=(t=Number(C0[1]))||1,p=10*(K1-(j0=Math.floor(K1/t))*t);for(j0=j0.toString()+".";p&&p<t;)p*=10,j0+="0";for(var M="",I=[],D=0;;){if(I[p]!==void 0)return(b2?"-":"")+(j0+M.slice(0,I[p])+"'"+M.slice(I[p])+"'").replace("'0'","").replace(/\.$/,"");var t0=Math.floor(p/t),j=p-t0*t;I[p]=D,M+=t0.toString(),D+=1,p=10*j}case"mixed":if(o0=o0||function(s){return s.indexOf("/")!==-1},e1=i2.toString(),(J0=/^-?\d+(?:\/\d+)?$/.exec(e1)).length===0)return e1;var C0=J0[0].split("/"),e1=new F(C0[0]),J0=new F(C0[1]);J0.equals(0)&&(J0=new F(1));var e1=e1.divmod(J0),j0=e1.quotient,J0=e1.remainder,e1=C0[0][0]==="-"||j0.equals(0)||J0.equals(0)?"":"+";return(j0.equals(0)?"":j0.toString())+e1+(J0.equals(0)?"":J0.toString()+"/"+C0[1]);case"scientific":return o0=o0||function(s){return!1},new C(i2.valueOf()).toString(N0.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return o0=o0||function(s){return s.indexOf("/")!==-1},i2.toString()}}if(n0&&N===void 0&&(N=N0.DEFAULT_DECP),i0(e)){var V0,K0,O1="",D0="",G="",I1=e.group||m,Z1=e.value;switch(B||((V0=W0(e.multiplier))=="-1"&&String(e.multiplier)==="-1"&&(G="-",V0="1"),V0!="1"&&(O1=V0),(K0=e.power?W0(e.power):"")!="1"&&(D0=i0(K0)?v1(K0,x0):K0)),I1){case z0:var O1="",z1=N&&n0?e.multiplier.toDecimal(N):W0(e.multiplier),Z1=String(e.multiplier)=="-1"?"1":z1,D0="";break;case b1:Z1=e.collectSymbols().map(function(t){return t=v1(t,x0,m,N),t=t=="0"?"":t}).sort().join("+").replace(/\+\-/g,"-");break;case Z:Z1=e.collectSymbols().map(function(t){return t=v1(t,x0,m,N),t=t=="0"?"":t}).sort().join("+").replace(/\+\-/g,"-");break;case Z0:Z1=e.collectSymbols(function(t){var p=t.group;return(p===b1||p===Z)&&t.power.equals(1)&&t.multiplier.equals(1)?O(v1(t,x0)):v1(t,x0)}).join("*");break;case F1:var B1=e.previousGroup,z1=e.power.group;B1===b1&&(Z1=e.collectSymbols(v1,x0).join("+").replace("+-","-")),B1===z0||B1===q1||B1===c1||B||(Z1=O(Z1)),z1!==Z&&z1!==Z0&&z1!==b1&&e.power.multiplier.toString()=="1"||!D0||(D0=O(D0))}I1===c1&&(Z1=e.fname+O(e.args.map(function(i2){return v1(i2,x0)}).join(","))),I1===c1&&e.fname in X1&&(V0=v1(e.args[0]),K0=v1(e.args[1]),e.args[0].isComposite()&&(V0=O(V0)),e.args[1].isComposite()&&(K0=O(K0)),Z1=V0+X1[e.fname]+K0),D0&&I1!==F1&&o0(D0)&&(D0=O(D0)),((I1===Z||I1===b1)&&(O1&&O1!="1"||G==="-")||(I1===Z0||I1===Z||I1===b1)&&D0&&D0!="1"||!B&&I1===p0&&Z1==-1||e.fname===h)&&(Z1=O(Z1));var w1=G+(O1=N&&(u==="decimal"||u==="decimals"&&O1)?Y(O1,N):O1);if(O1&&o0(O1)&&(w1=O(w1)),O1&&(w1+="*"),D0=D0<0?O(D0):D0){if(Z1==="e"&&N0.E_TO_EXP)return w1+"exp"+O(D0);D0=N0.POWER_OPERATOR+D0}return I1=w1+(Z1=I1===F1&&Z1.charAt(0)==="-"?O(Z1):Z1),(I1=e.parens?O(I1):I1)+D0}if(H0(e)){for(var L1=e.elements.length,w1=[],c2=0;c2<L1;c2++)w1.push(e.elements[c2].text(u));return"["+w1.join(",")+"]"}try{return e.toString()}catch{return""}}function e2(e){if(r0(e))return[e];for(var u=e,m=1,N=[];m<u;){var B=e/m,o0=Math.floor(B);if(B-o0<=2220446049250313e-31&&1<m){if(r0(m)&&(T0.indexOf(m)===-1&&T0.push(m),N.push(m)),r0(o0)){N.push(o0);break}u=o0}m++}return N.sort(function(x0,n0){return x0-n0})}function t2(e){this.symbol=e}function C(e){return this instanceof C?((e=String(e===void 0?0:e)).startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,C.isScientific(e)?this.fromScientific(e):this.convert(e),this):new C(e)}function T(e){if(e instanceof T)return e;if(e===void 0)return this;try{if(_(e))try{this.num=F(e),this.den=F(1)}catch{return T.simple(e)}else{var u=e instanceof _1?y.quickConversion(e):y.convert(e);this.num=new F(u[0]),this.den=new F(u[1])}}catch{return T.simple(e)}}function a(e){var u=e==="Infinity";return this instanceof a?(e instanceof _1&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof _1?(this.group=z0,this.value=i,this.multiplier=new T(e)):(this.group=q1,t1(e),this.value=e,this.multiplier=new T(1),this.imaginary=e===N0.IMAGINARY,this.isInfinity=u),this.power=new T(1),this):new a(e)}function w(){var e=this,u={},m={names:[],actions:[]};function N(s,c){this.start=s,this.end=c}function B(){this.elements=[]}function o0(s,c,P){if(this.type=c,this.value=s,P!==void 0&&(this.column=P+1),c===o0.OPERATOR){var V,m0=V0[s];for(V in m0)this[V]=m0[V]}else c===o0.FUNCTION&&(this.precedence=o0.MAX_PRECEDENCE,this.leftAssoc=!1)}N.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},N.prototype.text=function(){return v1(this.start)+":"+v1(this.end)},B.prototype.append=function(s){this.elements.push(s)},B.prototype.getItems=function(){return this.elements},B.prototype.toString=function(){return e.pretty_print(this.elements)},B.create=function(s){var c=new B;return s&&c.append(s),c},o0.prototype.toString=function(){return this.value},o0.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},o0.OPERATOR="OPERATOR",o0.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",o0.FUNCTION="FUNCTION",o0.UNIT="UNIT",o0.KEYWORD="KEYWORD",o0.MAX_PRECEDENCE=999,this.classes={Collection:B,Slice:N,Token:o0};var x0={prec:void 0,cos:function(s,V){var P=e.parse(Math.cos(s)*Math.cosh(V)),V=e.parse(Math.sin(s)*Math.sinh(V));return e.subtract(P,e.multiply(V,a.imaginary()))},sin:function(s,V){var P=e.parse(Math.sin(s)*Math.cosh(V)),V=e.parse(Math.cos(s)*Math.sinh(V));return e.subtract(P,e.multiply(V,a.imaginary()))},tan:function(s,V){var P=e.parse(Math.sin(2*s)/(Math.cos(2*s)+Math.cosh(2*V))),V=e.parse(Math.sinh(2*V)/(Math.cos(2*s)+Math.cosh(2*V)));return e.add(P,e.multiply(V,a.imaginary()))},sec:function(s,c){return c=this.removeDen(this.cos(s,c)),e.subtract(c[0],e.multiply(c[1],a.imaginary()))},csc:function(s,c){return c=this.removeDen(this.sin(s,c)),e.add(c[0],e.multiply(c[1],a.imaginary()))},cot:function(s,c){return c=this.removeDen(this.tan(s,c)),e.subtract(c[0],e.multiply(c[1],a.imaginary()))},acos:function(P,V){var P=this.fromArray([P,V]),V=e.pow(P.clone(),new a(2)),V=e.expand(V),V=e.multiply(L1(e.subtract(new a(1),V)),a.imaginary()),V=D(e.expand(e.add(P.clone(),V)));return e.expand(e.multiply(a.imaginary().negate(),V))},asin:function(s,c){return e.subtract(e.parse("pi/2"),this.acos(s,c))},atan:function(P,V){if(P.equals(0)&&(V.equals(1)||V.equals(-1)))return e.parse(`${a.infinity()}*${N0.IMAGINARY}*${V}`);var P=x0.fromArray([P,V]),V=e.expand(e.multiply(a.imaginary(),P.clone())),P=D(e.expand(e.subtract(new a(1),V.clone()))),V=D(e.expand(e.add(new a(1),V.clone())));return e.expand(e.multiply(e.divide(a.imaginary(),new a(2)),e.subtract(P,V)))},asec:function(s,c){return c=this.removeDen([s,c]),c[1].negate(),this.acos.apply(this,c)},acsc:function(s,c){return c=this.removeDen([s,c]),c[1].negate(),this.asin.apply(this,c)},acot:function(s,c){return c=this.removeDen([s,c]),c[1].negate(),this.atan.apply(this,c)},cosh:function(s,V){var P=e.parse(Math.cosh(s)*Math.cos(V)),V=e.parse(Math.sinh(s)*Math.sin(V));return e.add(P,e.multiply(V,a.imaginary()))},sinh:function(s,V){var P=e.parse(Math.sinh(s)*Math.cos(V)),V=e.parse(Math.cosh(s)*Math.sin(V));return e.add(P,e.multiply(V,a.imaginary()))},tanh:function(V,c){var P=e.parse(Math.sinh(2*V)/(Math.cos(2*c)+Math.cosh(2*V))),V=e.parse(Math.sin(2*c)/(Math.cos(2*c)+Math.cosh(2*V)));return e.subtract(P,e.multiply(V,a.imaginary()))},sech:function(s,c){return c=this.removeDen(this.cosh(s,c)),e.subtract(c[0],e.multiply(c[1],a.imaginary()))},csch:function(s,c){return c=this.removeDen(this.sinh(s,c)),e.subtract(c[0],e.multiply(c[1],a.imaginary()))},coth:function(s,c){return c=this.removeDen(this.tanh(s,c)),e.add(c[0],e.multiply(c[1],a.imaginary()))},acosh:function(V,m0){var P=this.fromArray([V,m0]),V=L1(e.add(P.clone(),new a(1))),m0=L1(e.subtract(P.clone(),new a(1)));return e.expand(D(e.add(P,e.expand(e.multiply(V,m0)))))},asinh:function(s,c){return s=this.fromArray([s,c]),c=L1(e.add(new a(1),e.expand(e.pow(s.clone(),new a(2))))),e.expand(D(e.add(s,c)))},atanh:function(V,P){var V=this.fromArray([V,P]),P=D(e.add(V.clone(),new a(1))),V=D(e.subtract(new a(1),V));return e.expand(e.divide(e.subtract(P,V),new a(2)))},asech:function(s,c){return c=this.removeDen([s,c]),c[1].negate(),this.acosh.apply(this,c)},acsch:function(s,c){return c=this.removeDen([s,c]),c[1].negate(),this.asinh.apply(this,c)},acoth:function(s,c){return c=this.removeDen([s,c]),c[1].negate(),this.atanh.apply(this,c)},sqrt:function(V){var P=V.realpart(),c=V.imagpart(),V=a.hyp(P,c),P=e.add(P.clone(),V),V=L1(e.multiply(new a(2),P.clone()));return e.add(e.divide(P.clone(),V.clone()),e.multiply(e.divide(c,V),a.imaginary()))},log:function(V,c){var P=D(a.hyp(V,c)),V=N0.USE_BIG?a(_1.atan2(c.multiplier.toDecimal(),V.multiplier.toDecimal())):Math.atan2(c,V),V=e.parse(V);return e.add(P,e.multiply(a.imaginary(),V))},erf(s,c){return e.symfunction("erf",[s])},removeDen:function(V){var c,P=m1(V)?(c=V[0],V[1]):(c=V.realpart(),V.imagpart()),V=Math.pow(c,2)+Math.pow(P,2);return[e.parse(c/V),e.parse(P/V)]},fromArray:function(s){return e.add(s[0],e.multiply(a.imaginary(),s[1]))},evaluate:function(s,c){var P,V,m0=s.power.sign();return s.power=s.power.abs(),s.power.greaterThan(1)&&(s=e.expand(s)),V=m0<0?(P=(V=this.removeDen(s))[0],V[1]):(P=s.realpart(),s.imagpart()),P.isConstant("all")&&V.isConstant("all")?this[c].call(this,P,V):e.symfunction(c,[s])}},n0=this.trig={cos:function(s){if(s.equals("pi")&&s.multiplier.den.equals(2))return new a(0);if(N0.PARSE2NUMBER){if(s.equals(new a(N0.PI/2)))return new a(0);if(s.isConstant())return N0.USE_BIG?new a(_1.cos(s.multiplier.toDecimal())):new a(Math.cos(s.valueOf()));if(s.isImaginary())return x0.evaluate(s,"cos")}if(s.equals(0))return new a(1);var c,P=!1,V=j(s.multiplier.toDecimal()),m0=s.multiplier.abs();return s.multiplier=m0,s.isPi()&&s.isLinear()&&(_(m0)?c=new a(q(m0)?1:-1):(Number(m0.num),(m0=Number(m0.den))===2?c=new a(0):m0===3?(c=e.parse("1/2"),P=!0):m0===4?(c=e.parse("1/sqrt(2)"),P=!0):m0===6?(c=e.parse("sqrt(3)/2"),P=!0):c=e.symfunction("cos",[s]))),!P||V!==2&&V!==3||c.negate(),c=c||e.symfunction("cos",[s])},sin:function(s){if(N0.PARSE2NUMBER){if(s.isConstant())return s%Math.PI==0?new a(0):N0.USE_BIG?new a(_1.sin(s.multiplier.toDecimal())):new a(Math.sin(s.valueOf()));if(s.isImaginary())return x0.evaluate(s,"sin")}if(s.equals(0))return new a(0);var c,P=!1,V=j(s.multiplier.toDecimal()),m0=s.multiplier.sign(),P0=s.multiplier.abs();return s.multiplier=P0,s.equals("pi")?c=new a(0):s.isPi()&&s.isLinear()&&(_(P0)?c=new a(0):(P0.num,(P0=P0.den)==2?(c=new a(1),P=!0):P0==3?(c=e.parse("sqrt(3)/2"),P=!0):P0==4?(c=e.parse("1/sqrt(2)"),P=!0):P0==6?(c=e.parse("1/2"),P=!0):c=e.multiply(new a(m0),e.symfunction("sin",[s])))),c=c||e.multiply(new a(m0),e.symfunction("sin",[s])),!P||V!==3&&V!==4||c.negate(),c},tan:function(s){if(N0.PARSE2NUMBER){if(s%Math.PI==0&&s.isLinear())return new a(0);if(s.isConstant())return N0.USE_BIG?new a(_1.tan(s.multiplier.toDecimal())):new a(Math.tan(s.valueOf()));if(s.isImaginary())return x0.evaluate(s,"tan")}var c,P=!1,V=j(s.multiplier.toDecimal()),m0=s.multiplier;if(s.multiplier=m0,s.isPi()&&s.isLinear())if(_(m0))c=new a(0);else{if(m0.num,m0=m0.den,m0==2)throw new b0("tan is undefined for "+s.toString());m0==3?(c=e.parse("sqrt(3)"),P=!0):m0==4?(c=new a(1),P=!0):m0==6?(c=e.parse("1/sqrt(3)"),P=!0):c=e.symfunction("tan",[s])}return c=c||e.symfunction("tan",[s]),!P||V!==2&&V!==4||c.negate(),c},sec:function(s){if(N0.PARSE2NUMBER)return s.isConstant()?N0.USE_BIG?new a(new _1(1).dividedBy(_1.cos(s.multiplier.toDecimal()))):new a(R1.sec(s.valueOf())):s.isImaginary()?x0.evaluate(s,"sec"):e.parse(W("1/cos({0})",s));var c,P=!1,V=j(s.multiplier.toDecimal()),m0=s.multiplier.abs();if(s.multiplier=m0,s.isPi()&&s.isLinear())if(_(m0))c=new a(q(m0)?1:-1);else{if(m0.num,m0=m0.den,m0==2)throw new b0("sec is undefined for "+s.toString());m0==3?(c=new a(2),P=!0):m0==4?(c=e.parse("sqrt(2)"),P=!0):m0==6?(c=e.parse("2/sqrt(3)"),P=!0):c=e.symfunction("sec",[s])}return!P||V!==2&&V!==3||c.negate(),c=c||e.symfunction("sec",[s])},csc:function(s){if(N0.PARSE2NUMBER)return s.isConstant()?N0.USE_BIG?new a(new _1(1).dividedBy(_1.sin(s.multiplier.toDecimal()))):new a(R1.csc(s.valueOf())):s.isImaginary()?x0.evaluate(s,"csc"):e.parse(W("1/sin({0})",s));var c,P=!1,V=j(s.multiplier.toDecimal()),m0=s.multiplier.sign(),P0=s.multiplier.abs();if(s.multiplier=P0,s.isPi()&&s.isLinear()){if(_(P0))throw new b0("csc is undefined for "+s.toString());P0.num,P0=P0.den,P0==2?(c=new a(1),P=!0):P0==3?(c=e.parse("2/sqrt(3)"),P=!0):P0==4?(c=e.parse("sqrt(2)"),P=!0):P0==6?(c=new a(2),P=!0):c=e.multiply(new a(m0),e.symfunction("csc",[s]))}return c=c||e.multiply(new a(m0),e.symfunction("csc",[s])),!P||V!==3&&V!==4||c.negate(),c},cot:function(s){if(N0.PARSE2NUMBER)return s%(Math.PI/2)==0?new a(0):s.isConstant()?N0.USE_BIG?new a(new _1(1).dividedBy(_1.tan(s.multiplier.toDecimal()))):new a(R1.cot(s.valueOf())):s.isImaginary()?x0.evaluate(s,"cot"):e.parse(W("1/tan({0})",s));var c,P=!1,V=j(s.multiplier.toDecimal()),m0=s.multiplier;if(s.multiplier=m0,s.isPi()&&s.isLinear()){if(_(m0))throw new b0("cot is undefined for "+s.toString());m0.num,m0=m0.den,m0==2?c=new a(0):m0==3?(c=e.parse("1/sqrt(3)"),P=!0):m0==4?(c=new a(1),P=!0):m0==6?(c=e.parse("sqrt(3)"),P=!0):c=e.symfunction("cot",[s])}return c=c||e.symfunction("cot",[s]),!P||V!==2&&V!==4||c.negate(),c},acos:function(s){if(N0.PARSE2NUMBER){if(s.isConstant()){if(s.gt(1)||s.lt(-1)){var c=s.toString();return j0(h0(`pi/2-asin(${c})`))}return N0.USE_BIG?new a(_1.acos(s.multiplier.toDecimal())):new a(Math.acos(s.valueOf()))}if(s.isImaginary())return x0.evaluate(s,"acos")}return e.symfunction("acos",arguments)},asin:function(s){if(N0.PARSE2NUMBER){if(s.isConstant()){if(s.gt(1)||s.lt(-1)){var c=N0.IMAGINARY,P=s.multiplier.toDecimal();return j0(h0(`${c}*log(sqrt(1-${P}^2)-${c}*${P})`))}return N0.USE_BIG?new a(_1.asin(s.multiplier.toDecimal())):new a(Math.asin(s.valueOf()))}if(s.isImaginary())return x0.evaluate(s,"asin")}return e.symfunction("asin",arguments)},atan:function(s){var c;if(s.equals(0))c=new a(0);else{if(N0.PARSE2NUMBER)return s.isConstant()?N0.USE_BIG?new a(_1.atan(s.multiplier.toDecimal())):new a(Math.atan(s.valueOf())):s.isImaginary()?x0.evaluate(s,"atan"):e.symfunction("atan",arguments);c=s.equals(-1)?e.parse("-pi/4"):e.symfunction("atan",arguments)}return c},asec:function(s){if(N0.PARSE2NUMBER){if(s.equals(0))throw new R0("Input is out of the domain of sec!");if(s.isConstant())return n0.acos(s.invert());if(s.isImaginary())return x0.evaluate(s,"asec")}return e.symfunction("asec",arguments)},acsc:function(s){if(N0.PARSE2NUMBER){if(s.isConstant())return n0.asin(s.invert());if(s.isImaginary())return x0.evaluate(s,"acsc")}return e.symfunction("acsc",arguments)},acot:function(s){if(N0.PARSE2NUMBER){if(s.isConstant())return new e.add(e.parse("pi/2"),n0.atan(s).negate());if(s.isImaginary())return x0.evaluate(s,"acot")}return e.symfunction("acot",arguments)},atan2:function(s,c){if(s.equals(0)&&c.equals(0))throw new b0("atan2 is undefined for 0, 0");return N0.PARSE2NUMBER&&s.isConstant()&&c.isConstant()?new a(Math.atan2(s,c)):e.symfunction("atan2",arguments)}},W0=this.trigh={cosh:function(s){if(N0.PARSE2NUMBER){if(s.isConstant())return new a(Math.cosh(s.valueOf()));if(s.isImaginary())return x0.evaluate(s,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(s){if(N0.PARSE2NUMBER){if(s.isConstant())return new a(Math.sinh(s.valueOf()));if(s.isImaginary())return x0.evaluate(s,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(s){if(N0.PARSE2NUMBER){if(s.isConstant())return new a(Math.tanh(s.valueOf()));if(s.isImaginary())return x0.evaluate(s,"tanh")}return e.symfunction("tanh",arguments)},sech:function(s){return N0.PARSE2NUMBER?s.isConstant()?new a(Math.sech(s.valueOf())):s.isImaginary()?x0.evaluate(s,"sech"):e.parse(W("1/cosh({0})",s)):e.symfunction("sech",arguments)},csch:function(s){return N0.PARSE2NUMBER?s.isConstant()?new a(Math.csch(s.valueOf())):s.isImaginary()?x0.evaluate(s,"csch"):e.parse(W("1/sinh({0})",s)):e.symfunction("csch",arguments)},coth:function(s){return N0.PARSE2NUMBER?s.isConstant()?new a(Math.coth(s.valueOf())):s.isImaginary()?x0.evaluate(s,"coth"):e.parse(W("1/tanh({0})",s)):e.symfunction("coth",arguments)},acosh:function(s){return s=N0.PARSE2NUMBER&&s.isImaginary()?x0.evaluate(s,"acosh"):N0.PARSE2NUMBER?h0(e.parse(W(N0.LOG+"(({0})+sqrt(({0})^2-1))",s.toString()))):e.symfunction("acosh",arguments),s},asinh:function(s){return s=N0.PARSE2NUMBER&&s.isImaginary()?x0.evaluate(s,"asinh"):N0.PARSE2NUMBER?h0(e.parse(W(N0.LOG+"(({0})+sqrt(({0})^2+1))",s.toString()))):e.symfunction("asinh",arguments),s},atanh:function(s){return s=N0.PARSE2NUMBER&&s.isImaginary()?x0.evaluate(s,"atanh"):N0.PARSE2NUMBER?h0(e.parse(W("(1/2)*"+N0.LOG+"((1+({0}))/(1-({0})))",s.toString()))):e.symfunction("atanh",arguments),s},asech:function(s){return s=N0.PARSE2NUMBER&&s.isImaginary()?x0.evaluate(s,"asech"):N0.PARSE2NUMBER?h0(D(e.add(s.clone().invert(),L1(e.subtract(e.pow(s,new a(-2)),new a(1)))))):e.symfunction("asech",arguments),s},acsch:function(s){return s=N0.PARSE2NUMBER&&s.isImaginary()?x0.evaluate(s,"acsch"):N0.PARSE2NUMBER?h0(e.parse(W(N0.LOG+"((1+sqrt(1+({0})^2))/({0}))",s.toString()))):e.symfunction("acsch",arguments),s},acoth:function(s){return s=N0.PARSE2NUMBER&&s.isImaginary()?x0.evaluate(s,"acoth"):N0.PARSE2NUMBER?s.equals(1)?a.infinity():h0(e.divide(D(e.divide(e.add(s.clone(),new a(1)),e.subtract(s.clone(),new a(1)))),new a(2))):e.symfunction("acoth",arguments),s}},V0={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(s){return s}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(s){return e.symfunction(N0.DOUBLEFACTORIAL,[s])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:B1},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(s){return e.divide(s,new a(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(s){return s}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(s){return s}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(s){return s.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},K0={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},O1=this.functions={cos:[n0.cos,1],sin:[n0.sin,1],tan:[n0.tan,1],sec:[n0.sec,1],csc:[n0.csc,1],cot:[n0.cot,1],acos:[n0.acos,1],asin:[n0.asin,1],atan:[n0.atan,1],arccos:[n0.acos,1],arcsin:[n0.asin,1],arctan:[n0.atan,1],asec:[n0.asec,1],acsc:[n0.acsc,1],acot:[n0.acot,1],atan2:[n0.atan2,2],acoth:[W0.acoth,1],asech:[W0.asech,1],acsch:[W0.acsch,1],sinh:[W0.sinh,1],cosh:[W0.cosh,1],tanh:[W0.tanh,1],asinh:[W0.asinh,1],sech:[W0.sech,1],csch:[W0.csch,1],coth:[W0.coth,1],acosh:[W0.acosh,1],atanh:[W0.atanh,1],log10:[,1],exp:[function(s){return s.fname===N0.LOG&&s.isLinear()?e.pow(s.args[0],a.create(s.multiplier)):e.parse(W("e^({0})",s))},1],radians:[function(s){return e.parse(W("({0})*pi/180",s))},1],degrees:[function(s){return e.parse(W("({0})*180/pi",s))},1],min:[function(){var s=[].slice.call(arguments);return d0(s)?s[0]:F0(s)?new a(Math.min.apply(null,s)):N0.SYMBOLIC_MIN_MAX&&L0(s)?I("min",s):e.symfunction("min",s)},-1],max:[function(){var s=[].slice.call(arguments);return d0(s)?s[0]:F0(s)?new a(Math.max.apply(null,s)):N0.SYMBOLIC_MIN_MAX&&L0(s)?I("max",s):e.symfunction("max",s)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(s){return N0.PARSE2NUMBER?s.isConstant()?new a(R1.sinc(s)):e.parse(W("sin({0})/({0})",s)):e.symfunction("sinc",[s])},1],tri:[,1],sign:[function(s){return s.isConstant(!0)?new a(Math.sign(h0(s))):e.symfunction("sign",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[B1,1],factorial:[B1,1],continued_fraction:[function(s,c){return s=h0(s),s.isConstant()?(s=R1.continuedFraction(s,c),c=U.fromArray(s.fractions.map(function(P){return new a(P)})),U.fromArray([new a(s.sign),new a(s.whole),c])):e.symfunction("continued_fraction",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[t0,[1,2]],scientific:[function(s,c){return s.scientific=c||10,s},[1,2]],mod:[z1,2],pfactor:[b2,1],vector:[function(){return new U([].slice.call(arguments))},-1],matrix:[function(){return b.fromArray(arguments)},-1],Set:[function(){return R.fromArray(arguments)},-1],imatrix:[function(s){return b.identity(s)},-1],parens:[function(s){return N0.PARSE2NUMBER?s:e.symfunction("parens",[s])},-1],sqrt:[L1,1],cbrt:[c2,1],nthroot:[i2,2],log:[D,[1,2]],expand:[function(s,c){return j0(s,c=c||{expand_denominator:!0,expand_functions:!0})},1],abs:[Z1,1],invert:[function(s){if(s0(s))return s.invert();q0("invert expects a matrix")},1],determinant:[function(s){return s0(s)?s.determinant():s},1],size:[function(s){var c;return s0(s)?c=[new a(s.cols()),new a(s.rows())]:H0(s)||M0(s)?c=new a(s.elements.length):q0("size expects a matrix or a vector"),c},1],transpose:[function(s){if(s0(s))return s.transpose();q0("function transpose expects a matrix")},1],dot:[function(s,c){if(H0(s)&&H0(c))return s.dot(c);q0("function dot expects 2 vectors")},2],cross:[function(s,c){if(H0(s)&&H0(c))return s.cross(c);q0("function cross expects 2 vectors")},2],vecget:[function(s,c){return c.isConstant()&&_(c)?s.elements[c]:e.symfunction("vecget",arguments)},2],vecset:[function(s,c,P){return c.isConstant?(s.elements[c]=P,s):e.symfunction("vecset",arguments)},3],vectrim:[function(s,c){return c=c===void 0?1e-14:c,s=s.clone(),c=Number(c),s.elements.sort(function(P,V){return V.group-P.group}),s.elements=k(s.elements,function(P,V){return Number(e.subtract(h0(P),h0(V)).abs())<=c}),s},[1,2]],matget:[function(s,c,P){return c.isConstant()&&P.isConstant()?s.elements[c][P]:e.symfunction("matget",arguments)},3],matset:[function(s,c,P,V){return s.elements[c][P]=V,s},4],matgetrow:[function(s,c){return c.isConstant()?new b(s.elements[c]):e.symfunction("matgetrow",arguments)},2],matsetrow:[function(s,c,P){if(!c.isConstant())return e.symfunction("matsetrow",arguments);if(s.elements[c].length!==P.elements.length)throw new P1("Matrix row must match row dimensions!");return s=s.clone(),s.elements[c]=P.clone().elements,s},3],matgetcol:[function(s,c){if(!c.isConstant())return e.symfunction("matgetcol",arguments);c=Number(c);var P=b.fromArray([]);return s.each(function(V,m0,P0){P0===c&&P.elements.push([V.clone()])}),P},2],matsetcol:[function(s,c,P){if(!c.isConstant())return e.symfunction("matsetcol",arguments);if(c=Number(c),s.rows()!==P.elements.length)throw new P1("Matrix columns must match number of columns!");return P.each(function(V,m0){s.set(m0-1,c,V.elements[0].clone())}),s},3],rationalize:[w1,1],IF:[function(s,c,P){return typeof s!="boolean"&&n1(s)&&(s=!!Number(s)),s?c:P},3],is_in:[function(s,c){if(s0(s)){for(var P=0,V=s.rows();P<V;P++)for(var m0=0,P0=s.cols();m0<P0;m0++)if(s.elements[P][m0].equals(c))return new a(1)}else if(s.elements){for(P=0,V=s.elements.length;P<V;P++)if(s.elements[P].equals(c))return new a(1)}return new a(0)},2],realpart:[K1,1],imagpart:[t,1],conjugate:[p,1],arg:[M,1],polarform:[function(s){var c;return c=a.toPolarFormArray(s),s=c[1],c=c[0],s=e.parse(W("e^({0}*({1}))",N0.IMAGINARY,s)),e.multiply(c,s)},1],rectform:[function(s){var c,P,V,m0,P0,r1=s.clone();try{return c=O0(s,"e",!0),P=e.divide(c.x.power,a.imaginary()),V=h0(n0.tan(P)),e.pow(c.a,new a(2)),m0=V.getDenom(!0),P0=V.getNum(),a.hyp(P0,m0).equals(c.a)?e.add(m0,e.multiply(a.imaginary(),P0)):r1}catch{return r1}},1],sort:[function(s,c){c=c?c.toString():"asc";var P=function(V){return V.group===z0?V.multiplier:V.group===c1?V.fname===""?P(V.args[0]):V.fname:V.group===q1?V.power:V.value};return new U((H0(s)?s.elements:s.collectSymbols()).sort(function(V,m0){return V=P(V),m0=P(m0),c==="desc"?m0-V:V-m0}))},[1,2]],integer_part:[,1],union:[function(s,c){return s.union(c)},2],contains:[function(s,c){return s.contains(c)},2],intersection:[function(s,c){return s.intersection(c)},2],difference:[function(s,c){return s.difference(c)},2],intersects:[function(s,c){return new a(Number(s.intersects(c)))},2],is_subset:[function(s,c){return new a(Number(s.is_subset(c)))},2],print:[function(){U0(arguments).map(function(s){console.log(s.toString())})},-1]};this.error=q0,this.override=function(s,c){u[s]||(u[s]=[]),u[s].push(this[s]),this[s]=c},this.restore=function(s){this[s]&&(this[s]=u[s].pop())},this.extend=function(s,c,P){var V,m0=this;typeof this[s]=="function"&&typeof c=="function"&&(V=this[s],this[s]=function(P0,r1){return i0(P0)&&i0(r1)&&!P?V.call(m0,P0,r1):c.call(m0,P0,r1,V)})},this.symfunction=function(s,c){var P=new a(s);return P.group=c1,typeof c=="object"&&(c=[].slice.call(c)),P.args=c,P.fname=s===h?"":s,P.updateHash(),P},this.callfunction=function(s,c,P){var V=O1[s];V||q0("Nerdamer currently does not support the function "+s);var m0,P0=V[1]||P,r1=V[0];c instanceof Array||(c=c!==void 0?[c]:[]),P0!==-1&&(m0=(y1=m1(P0))?P0[0]:P0,P=y1?P0[1]:P0,P0=s+" requires a {0} of {1} arguments. {2} provided!",(y1=c.length)<m0&&q0(W(P0,"minimum",m0,y1)),P<y1&&q0(W(P0,"maximum",P,y1)));var y1=F0(c);return r1?r1.apply(V[2],c):(r1=function(u1){for(var s1=N0.FUNCTION_MODULES,C1=s1.length,g1=0;g1<C1;g1++){var f2=s1[g1];if(u1 in f2)return f2[u1]}q0("The function "+u1+" is undefined!")}(s),N0.PARSE2NUMBER&&y1?C0(r1.apply(r1,c)):e.symfunction(s,c))},this.operator_filter_regex=(W0="^\\"+Object.keys(V0).filter(function(s){if(s.length===1)return s}).join("\\"),new RegExp("(["+W0+"])\\s+(["+W0+"])")),this.setOperator=function(s,c,P){var V=s.operator;if(V0[V]=s,c&&(this[s.action]=c),e[V]=s.operation,s.action||s.prefix||s.postif||(s.action=V),P==="over"||P==="under"){var m0,P0=s.precedence;for(m0 in V0){var r1=V0[m0];(P==="over"?r1.precedence>=P0:r1.precedence>P0)&&r1.precedence++}}},this.getOperator=function(s){return V0[s]},this.aliasOperator=function(s,c){var P,V={},m0=V0[s];for(P in m0)V[P]=m0[P];V.operator=c,this.setOperator(V)},this.getOperators=function(){return V0},this.getBrackets=function(){return K0};function D0(s){this.type=s.type,this.value=s.value,this.left=s.left,this.right=s.right}this.initConstants=function(){this.CONSTANTS={E:new a(N0.E),PI:new a(N0.PI)}},this.pretty_print=function(s){if(Array.isArray(s)){var c=s.map(P=>e.pretty_print(P)).join(", ");return s.type==="vector"?"vector<"+c+">":"("+c+")"}return s.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(s){if(N0.callPeekers)for(var c=this.peekers[s],P=U0(arguments).slice(1).map(S),V=0;V<c.length;V++)c[V].apply(null,P)},this.tokenize=function(s){for(var c in s=(s=String(s)).trim().replace(/\s+/g," "),K0){var P=new RegExp(K0[c].is_close?"\\s+\\"+c:"\\"+c+"\\s+","g");s=s.replace(P,c)}for(var V=0,m0=s.length,P0=0,r1=[],y1=[r1],u1=y1[0],s1=0,C1=[],g1=!1,f2=function(s2,l2){var S2=[];s2!==void 0&&(S2.type=s2),S2.column=l2,y1.push(S2),u1.push(S2),u1=S2,s1++},k1=function(){y1.pop(),u1=y1[--s1]},h1=function(s2,l2){(l2=l2===void 0?s.substring(P0,s2):l2)in e.units?u1.push(new o0(l2,o0.UNIT,P0)):l2!==""&&u1.push(new o0(l2,o0.VARIABLE_OR_LITERAL,P0))},Q1=function(s2){u1.push(new o0(s2,o0.FUNCTION,P0))},p2=function(s2){P0=s2+1};V<m0;V++){var a2=s.charAt(V);if(a2 in V0){h1(V);var W1=u1[0]&&w0(u1[0]);g1&&P0<V&&a2!==","&&!(W1&&a2==="*")&&(g1=!1,k1()),p2(V+1);var r2=function(l2){for(var S2=(l2=l2!==void 0?l2:V)+1;s.charAt(S2++)in V0;);return s.substring(l2,S2-1)}(V),V=(P0=P0+r2.length-2)-1;u1.push.apply(u1,function(l2){for(var S2=V-l2.length,N2=[],Y2=l2.charAt(0),M2=1,C2=l2.length;M2<C2;M2++)var k2=l2.charAt(M2),j2=Y2+k2,Y2=j2 in V0?j2:(N2.push(new o0(Y2,o0.OPERATOR,S2+M2)),k2);return N2.push(new o0(Y2,o0.OPERATOR,S2+M2)),N2}(r2))}else if(a2 in K0){var o2,h2=K0[a2];if(h2.is_open)C1.push([h2,P0]),(o2=s.substring(P0,V))in O1?Q1(o2):o2!==""&&u1.push(new o0(o2,o0.VARIABLE_OR_LITERAL,P0)),f2(h2.maps_to,V);else if(h2.is_close){var M1=C1.pop();if(!M1)throw new a1("Missing open bracket for bracket at: "+(V+1));if(M1[0].id!==h2.id-1)throw new a1("Parity error");h1(V),k1()}p2(V)}else a2===" "&&(M1=s.substring(P0,V),h2=s.charAt(V+1),g1?(M1 in V0?u1.push(new o0(M1,o0.OPERATOR,V)):(h1(void 0,M1),k1(),((a2=h2 in V0)&&V0[h2].value==="-"||!a2)&&u1.push(new o0("*",o0.OPERATOR,V))),g1=!1):(o2=s.substring(P0,V))in O1?(g1=!0,Q1(o2),f2()):o2 in V0?u1.push(new o0(o2,o0.OPERATOR,V)):(h1(void 0,o2),h2=s.charAt(V+1),M1===""||h2===""||M1 in V0||h2 in V0||u1.push(new o0("*",o0.OPERATOR,V))),p2(V))}if(C1.length){var u2=C1.pop();throw new a1("Missing closed bracket for bracket at "+(u2[1]+1))}return h1(V),r1},this.toRPN=function(s){for(var c=s.type,P=s.length,V=[],m0=[],P0=[],r1=function(Q1,p2){for(;Q1.length;)p2.push(Q1.pop())},y1=0;y1<P;y1++){var u1=s[y1];if(u1.type!==o0.OPERATOR)break;if(!u1.prefix)throw new U1("Not a prefix operator");u1.is_prefix=!0,m0.push(u1)}for(;y1<P;y1++){var s1=s[y1];if(s1.type===o0.OPERATOR){var C1=s1;for(C1.overloaded&&(k1=s[y1+1])&&k1.type===o0.VARIABLE_OR_LITERAL&&(C1.postfix=!1,C1.action=C1.overloadAction,C1.leftAssoc=C1.overloadLeftAssoc);m0.length;){var g1=m0[m0.length-1];if(!(g1.precedence>C1.precedence||!C1.leftAssoc&&g1.precedence===C1.precedence))break;V.push(m0.pop())}if((c==="vector"||c==="set")&&"vectorFn"in C1&&(C1.action=C1.vectorFn),C1.postfix){var f2=s[y1-1];if(!f2)throw new U1("Unexpected prefix operator '"+s1.value+"'! at "+s1.column);if(f2.type===o0.OPERATOR&&!f2.postfix)throw new U1("Unexpected prefix operator '"+f2.value+"'! at "+f2.column)}else do{var k1,h1=!!(k1=s[y1+1])&&k1.type===o0.OPERATOR;if(h1){if(!k1.prefix)throw new U1("A prefix operator was expected at "+k1.column);k1.is_prefix=!0,P0.push(k1),y1++}}while(h1);for((C1.is_prefix?P0:m0).push(C1);P0.length&&(C1.leftAssoc||!C1.leftAssoc&&P0[P0.length-1].precedence>=C1.precedence);)m0.push(P0.pop())}else s1.type===o0.VARIABLE_OR_LITERAL?(V.length===0&&r1(P0,m0),V.push(s1),(f2=m0[m0.length-1])&&f2.leftAssoc||r1(P0,V)):s1.type===o0.FUNCTION?m0.push(s1):s1.type===o0.UNIT&&V.push(s1);Array.isArray(s1)&&(V.push(this.toRPN(s1)),s1.type&&V.push(new o0(s1.type,o0.FUNCTION,s1.column)))}return r1(m0,V),r1(P0,V),V},this.parseRPN=function(s,c){try{for(var P in c=c||{})c[P]=e.parse(c[P],{});N0.PARSE2NUMBER&&("e"in c||(c.e=new a(N0.E)),"pi"in c||(c.pi=new a(N0.PI)));for(var V=[],m0=0,P0=s.length;m0<P0;m0++){var r1=s[m0];if(r1=Array.isArray(r1)?this.parseRPN(r1,c):r1)if(r1.type===o0.OPERATOR)if(r1.is_prefix||r1.postfix)V.push(r1.operation(V.pop()));else{var y1=V.pop(),u1=V.pop();if(u1===void 0)throw new U1(r1+" is not a valid postfix operator at "+r1.column);var s1=r1.action==="comma";u1 instanceof R&&!s1&&(u1=U.fromSet(u1)),y1 instanceof R&&!s1&&(y1=U.fromSet(y1)),this.callPeekers("pre_operator",u1,y1,r1);var C1=e[r1.action](u1,y1);this.callPeekers("post_operator",C1,u1,y1,r1),V.push(C1)}else if(r1.type===o0.FUNCTION){var g1=V.pop(),f2=g1.parent;g1 instanceof B||(g1=B.create(g1));var k1=r1.value,h1=g1.getItems();this.callPeekers("pre_function",k1,h1);var Q1=e.callfunction(k1,h1);this.callPeekers("post_function",Q1,k1,h1);var p2=V[V.length-1],a2=s[m0+1];if(!(a2&&a2.type===o0.OPERATOR&&a2.value===",")&&Q1 instanceof U&&p2&&p2.elements&&!(p2 instanceof B)){var W1=V.pop(),r2=Q1.elements[0];if(r2.isConstant())if(r2 instanceof N)V.push(U.fromArray(W1.elements.slice(r2.start,r2.end)));else{var o2=Number(r2),h2=W1.elements.length;if((o2=o2<0?h2+o2:o2)<0||h2<=o2)throw new D1("Index out of range "+(r1.column+1));var M1=W1.elements[o2];W1.getter=o2,M1.parent=W1,V.push(M1)}else W1.getter=r2,V.push(W1),V.push(Q1)}else f2&&(Q1.parent=f2),V.push(Q1)}else{var u2,s2=r1.value;s2 in N0.ALIASES?r1=e.parse(N0.ALIASES[r1]):r1.type===o0.VARIABLE_OR_LITERAL?r1=new a(s2):r1.type===o0.UNIT&&((r1=new a(s2)).isUnit=!0),s2 in e.CONSTANTS?(u2=r1,r1=new a(e.CONSTANTS[s2])):s2 in c&&s2!==c[s2].toString()?(u2=r1,r1=c[s2].clone()):s2 in x&&(u2=r1,r1=x[s2].clone()),u2&&(r1.subbed=u2),V.push(r1)}}var l2=V[0];if(["undefined","string","number"].indexOf(typeof l2)!==-1)throw new v2("Unexpected token!");return l2}catch(S2){throw[R0].forEach(function(N2){if(S2 instanceof N2)throw new N2(S2.message+": "+r1.column)}),new G0(S2.message+": "+r1.column)}},D0.prototype.toString=function(){var s=this.left?this.left.toString()+"---":"",c=this.right?"---"+this.right.toString():"";return s+"("+this.value+")"+c},D0.prototype.toHTML=function(s,c){s=s||0,c=c===void 0?4:c;function P(r1){return" ".repeat(c*r1)}var P0="",V=this.left?P(s+1)+`<li>
`+this.left.toHTML(s+2,c)+P(s+1)+`</li> 
`:"",m0=this.right?P(s+1)+`<li>
`+this.right.toHTML(s+2,c)+P(s+1)+`</li>
`:"",P0=P(s)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+P(s)+`
`;return(V||m0)&&(P0+=P(s)+`<ul>
`+V+m0+P(s)+`</ul>
`),P0+=""},this.tree=function(s){for(var c=[],P=0;P<s.length;P++){var V=s[P];if(Array.isArray(V))V=this.tree(V),c.push(V);else if(V.type===o0.OPERATOR)V.is_prefix||V.postfix?(P0=V.is_prefix?"left":"right",m0=c.pop(),(V=new D0(V))[P0]=m0):((V=new D0(V)).right=c.pop(),V.left=c.pop()),c.push(V);else if(V.type===o0.FUNCTION){V=new D0(V);var m0,P0=c.pop();if(V.right=P0,V.value==="object"&&(m0=c[c.length-1])){for(;m0.right;)m0=m0.right;m0.right=V;continue}c.push(V)}else c.push(new D0(V))}return c[0]},this.parse=function(s,c){return s=function(P){P=String(P);for(var V=0;V<m.actions.length;V++)P=m.actions[V].call(this,P);for(P=P.replace(/\s+/g," "),P=(P=/e/gi.test(P)?P.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,function(m0){return l1(m0)}):P).replace(N0.IMPLIED_MULTIPLICATION_REGEX,function(){var m0=arguments[4],P0=arguments[1],r1=arguments[2],y1=arguments[3],u1="",s1="*";return P0+(s1=(u1=m0.charAt(y1).match(/[\+\-\/\*]/)?u1:m0.charAt(y1-1)).match(/[a-z]/i)?"":s1)+r1}).replace(/([a-z0-9_]+)/gi,function(m0,P0){return!(N0.USE_MULTICHARACTER_VARS!==!1||P0 in O1)&&isNaN(P0)?P0.split("").join("*"):P0}).replace(/\)\(/g,")*(")||"0";P!==(P=P.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(m0,P0,r1,y1,u1){return y1=P0||y1,u1=r1||u1,y1 in O1?y1+u1:y1+"*"+u1})););return P}(s),c=c||{},s=this.tokenize(s),s=this.toRPN(s),this.parseRPN(s,c)},this.toObject=function(s){var c=function(P){for(var V=[],m0=0,P0=P.length;m0<P0;m0++){var r1,y1=P[m0],u1=y1.value;y1.type===o0.VARIABLE_OR_LITERAL?V.push(new a(u1)):y1.type===o0.FUNCTION?(m0++,(r1=e.symfunction(u1,c(P[m0]))).isConversion=!0,V.push(r1)):y1.type===o0.OPERATOR?V.push(u1):V.push(c(y1))}return V};return c(e.tokenize(s))};function G(s){for(var c=0,P=[[]],V=0,m0=s.length;V<m0;V++)s[V]===","?P[++c]=[]:P[c].push(s[V]);return P}function I1(s){return s.replace(/^\\left\((.+)\\right\)$/g,function(c,P){return P||c})}function Z1(s){if(s.isInfinity)return a.infinity();if(s.multiplier.lessThan(0)&&s.multiplier.negate(),s.isImaginary()){var c=s.realpart(),P=s.imagpart();if(c.isConstant()&&P.isConstant())return L1(e.add(e.pow(c,new a(2)),e.pow(P,new a(2))))}else if(n1(s)||q(s.power))return s;var V;return s.isComposite()&&(V=[],s.each(function(m0){V.push(m0.multiplier)}),R1.QGCD.apply(null,V).lessThan(0)&&(s.multiplier=s.multiplier.multiply(new T(-1)),s.distributeMultiplier())),P=e.parse(s.multiplier),s.toUnitMultiplier(),e.multiply(P,e.symfunction(f,[s]))}function B1(s){if(H0(s)){var c=new U;return s.each(function(r1,y1){c.set(y1-1,B1(r1))}),c}if(s0(s)){var P=new b;return s.each(function(r1,y1,u1){P.set(y1,u1,B1(r1))}),P}if(N0.PARSE2NUMBER&&s.isConstant())return C0(_(s)?R1.bigfactorial(s):R1.gamma(s.multiplier.add(new T(1)).toDecimal()));if(s.isConstant()&&s.getDenom().equals(2)){var V,m0=s.getNum(),P0=s.multiplier.isNegative()?(P0=e.subtract(m0.negate(),new a(1)).multiplier.divide(new T(2)),V=e.pow(new a(-4),new a(P0)).multiplier.multiply(R1.bigfactorial(P0)),R1.bigfactorial(new T(2).multiply(P0))):(P0=e.add(m0,new a(1)).multiplier.divide(new T(2)),V=R1.bigfactorial(new T(2).multiply(P0)),e.pow(new a(4),new a(P0)).multiplier.multiply(R1.bigfactorial(P0))),P0=V.divide(P0);return e.multiply(e.parse("sqrt(pi)"),new a(P0))}return e.symfunction(d,[s])}function z1(s,c){if(s.isConstant()&&c.isConstant()){var P=new a(1);return P.multiplier=P.multiplier.multiply(s.multiplier.mod(c.multiplier)),P}return P=e.divide(s.clone(),c.clone()),_(P)?new a(0):e.symfunction("mod",[s,c])}function w1(s){if(s.isComposite()){var c,P,V,m0,P0=new a(0);return s.each(function(r1){V=r1.getNum(),m0=r1.getDenom(),P=P0.getNum(),c=P0.getDenom(),P=e.multiply(m0,P),V=e.multiply(V,c),V=e.expand(e.add(P,V)),m0=e.multiply(c,m0),P0=e.divide(V,m0)},!0),P0}return s}function L1(s){if((s=i0(s)?s:e.parse(s)).group===F1)return e.symfunction(l,[s]);var c=(s=s.fname===""&&s.power.equals(1)?s.args[0]:s).multiplier.sign()<0;if(N0.PARSE2NUMBER){if(s.isConstant()&&!c)return new a(_1.sqrt(s.multiplier.toDecimal()));if(s.isImaginary())return x0.sqrt(s);if(s.group===q1)return e.symfunction("sqrt",[s])}var P,V=s.isConstant();if(s.group===Z0&&s.isLinear()){var m0=L1(a(s.multiplier));for(r1 in s.symbols){var P0=s.symbols[r1];m0=e.multiply(m0,L1(P0))}s1=m0}else if(s.fname===l){var r1=s.args[0],u1=s.multiplier;r1.setPower(s.power.multiply(new T(.25))),s1=r1,u1.equals(1)||(s1=e.multiply(L1(e.parse(u1)),s1))}else if(s.power.isInteger())if(s.multiplier<0&&s.group===q1)var y1=e.parse(s.multiplier).negate(),u1=e.parse(s).toUnitMultiplier().negate(),s1=e.multiply(e.symfunction(N0.SQRT,[u1]),L1(y1));else{y1=s.power.sign(),s.power=s.power.abs(),V&&s.multiplier.lessThan(0)&&(P=a.imaginary(),s.multiplier=s.multiplier.abs());var C1=s.multiplier.toDecimal(),V=Math.abs(C1),V=Math.sqrt(V);if(_(V))m0=new a(V);else if(_(C1)){var g1=R1.ifactor(C1),f2=1;for(P0 in g1){var k1,h1=(Q1=g1[P0])-Q1%2;h1&&(k1=Math.pow(P0,h1),f2*=Math.pow(P0,h1/2),C1/=k1)}m0=e.multiply(e.symfunction(l,[new a(C1)]),new a(f2))}else{for(var Q1,p2=[new a(s.multiplier.num),new a(s.multiplier.den)],a2=[new a(1),new a(1)],W1=[new a(1),new a(1)],r2=0;r2<2;r2++)b2(Q1=p2[r2]).each(function(s2){var M1=(s2=a.unwrapPARENS(s2)).clone().toLinear(),u2=Number(s2.power),s2=u2%2;a2[r2]=e.multiply(a2[r2],e.pow(M1,new a((u2-s2)/2))),W1[r2]=e.multiply(W1[r2],L1(e.pow(M1,new a(s2))))});m0=e.divide(e.multiply(a2[0],W1[0]),e.multiply(a2[1],W1[1]))}s1=(s=s.toUnitMultiplier(!0)).isOne()?s:q(s.power.toString())?e.pow(s.clone(),new a(.5)):e.symfunction(l,[s]),y1<0&&s1.power.negate(),m0&&(s1=e.multiply(m0,s1)),P&&(s1=e.multiply(P,s1))}else s.setPower(s.power.multiply(new T(.5))),s1=s;return c&&N0.PARSE2NUMBER?e.parse(s1):s1}function c2(m0){if(m0.isConstant(!0))return i2(m0,new a(3));var c,P=m0.power/3,V=e.pow(e.parse(m0.multiplier),new a(1/3)),m0=m0.toUnitMultiplier();return _(P)?c=e.pow(m0.toLinear(),e.parse(P)):m0.group===Z0?(c=new a(1),m0.each(function(P0){c=e.multiply(c,c2(P0))})):c=e.symfunction("cbrt",[m0]),e.multiply(V,c)}function i2(s,c,P,V){if((c=h0(e.parse(c))).equals(0))throw new b0("Unable to calculate nthroots of zero");if(s<0&&q(c))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!s.isConstant(!0))return e.symfunction("nthroot",arguments);V===void 0&&(V=!0),P=P||25;var m0=(s=s.group!==z0?h0(s):s).sign();if(m0<0&&(s=Z1(s)),_(s)&&c.isConstant()){var P0,c=s<18446744073709552e3?T.create(Math.pow(s,1/c)):R1.nthroot(s,c);return V&&(P0=new a(c)),P0=new a(c.toDecimal(P)),e.multiply(new a(m0),P0)}}function b2(s){if(s.greaterThan(9999999999998891e26)||s.equals(-1))return s;if(s.equals(Math.PI))return new a(Math.PI);if((s=h0(s.clone())).isConstant()){var c=new a(1),P=s.toString();if(_(P)){var V,m0=R1.ifactor(P);for(V in m0)var P0=m0[V],c=e.multiply(c,e.symfunction("parens",[new a(V).setPower(new T(P0))]))}else P=b2(new a(s.multiplier.num)),s=b2(new a(s.multiplier.den)),c=e.multiply(e.symfunction("parens",[P]),e.symfunction("parens",[s]).invert())}else c=e.symfunction("pfactor",arguments);return c}function K1(s){return s.realpart()}function t(s){return s.imagpart()}function p(P){var c=P.realpart(),P=P.imagpart();return e.add(c,e.multiply(P.negate(),a.imaginary()))}function M(P){var c=P.realpart(),P=P.imagpart();return c.isConstant()&&P.isConstant()?P.equals(0)&&c.equals(-1)?e.parse("pi"):P.equals(1)&&c.equals(0)?e.parse("pi/2"):P.equals(1)&&c.equals(1)?e.parse("pi/4"):new a(Math.atan2(P,c)):e.symfunction("atan2",[P,c])}function I(s,c){var P,V;for(c.map(function(m0){m0.numVal=h0(m0).multiplier});;){if((V=c.length)<2)return c[0];P=c.pop(),V=c[V-2],(s==="min"?P.numVal<V.numVal:P.numVal>V.numVal)&&(c.pop(),c.push(P))}}function D(s,c){if(s.equals(1))return new a(0);var P,V,m0;if(s.fname===l&&s.multiplier.equals(1))return P=e.divide(D(s.args[0]),new a(2)),s.power.sign()<0&&P.negate(),P;if(s.equals(0))throw new b0(N0.LOG+"(0) is undefined!");return s.isImaginary()?x0.evaluate(s,N0.LOG):(s.isConstant()&&c!==void 0&&c.isConstant()?P=new a(Math.log(s)/Math.log(c)):s.group===F1&&s.power.multiplier.lessThan(0)||s.power.toString()==="-1"?(s.power.negate(),P=D(s).negate()):s.value==="e"&&s.multiplier.equals(1)?(c=s.power,P=i0(c)?c:new a(c)):s.group===c1&&s.fname==="exp"?(m0=s.args[0],P=s.multiplier.equals(1)?e.multiply(m0,new a(s.power)):e.symfunction(N0.LOG,[s])):N0.PARSE2NUMBER&&n1(s)?((s=e.parse(s)).multiplier.lessThan(0)&&(s.negate(),V=e.multiply(new a(Math.PI),new a("i"))),P=new a(Math.log(s.multiplier.toDecimal())),V&&(P=e.add(P,V))):(s.power.equals(1)||s.contains("e")||(m0=s.group===F1?s.power:new a(s.power),s.toLinear()),P=1<arguments.length&&d0(arguments)?new a(1):e.symfunction(N0.LOG,arguments),m0&&(P=e.multiply(m0,P))),P)}function t0(s,c){var P=c&&c.isConstant()||c===void 0;if(s.isConstant()&&P){var V,P=s;return c&&c.lessThan(0)&&(c=Z1(c),P=(V=Number(s).toExponential().toString().split("e"))[0],V=V[1]),c=new a(Y(P,Number(c||0))),e.multiply(c,e.pow(new a(10),new a(V||0)))}return e.symfunction("round",arguments)}function j(s){return s%=2,0<=(s=s<0?2+s:s)&&s<=.5?1:.5<s&&s<=1?2:1<s&&s<=1.5?3:4}function C0(s){if(!isFinite(s)){var c=Math.sign(s),P=new a(String(Math.abs(s)));return P.multiplier=P.multiplier.multiply(new T(c)),P}if(i0(s))return s;if(typeof s=="number")try{s=T.simple(s)}catch{s=new T(s)}return P=new a(0),P.multiplier=s,P}function j0(s,c){if(Array.isArray(s))return s.map(function(k1){return j0(k1,c)});if(c=c||{},s.group===c1&&s.fname===""){var P=j0(s.args[0],c),V=j0(e.pow(P,e.parse(s.power)),c);return e.multiply(e.parse(s.multiplier),V).distributeMultiplier()}if([z0,p0,q1].indexOf(s.group)!==-1)return s;V=s.clone();try{var m0,P0,r1,y1=s.multiplier.toString(),u1=Number(s.power),s1=s;if(s.isComposite()&&_(s.power)&&0<s.power){var C1=u1-1,P=new a(0);s.each(function(h1){P=e.add(P,j0(e.parse(h1),c))});for(var g1=e.parse(P),f2=0;f2<C1;f2++)g1=_0(g1,P,c);s1=e.multiply(e.parse(y1),g1).distributeMultiplier()}else s.group===c1&&c.expand_functions===!0?(m0=[],s.args.forEach(function(k1){m0.push(j0(k1,c))}),s1=e.pow(e.symfunction(s.fname,m0),e.parse(s.power)),s1=e.multiply(s1,e.parse(s.multiplier))):s.isComposite()&&_(s.power)&&s.power<0&&c.expand_denominator===!0?(s=s.invert(),(s1=j0(s,c)).invert()):s.group===Z0?(P0=function(k1){switch(k1.group){case Z:return 0;case b1:return 1;case Z0:return 2;case c1:return 3;default:return 4}},r1=s.collectSymbols().sort(function(k1,h1){return P0(h1)-P0(k1)}).map(function(k1){return j0(e.pow(k1,e.parse(u1)),c)}),P=r1.pop(),(s1=P.isComposite()&&P.isLinear()?(r1.forEach(function(k1){P=_0(P,k1,c)}),P.isComposite()?(1<P.power&&(P=j0(e.pow(P,e.parse(P.power)),c)),e.multiply(e.parse(y1),P).distributeMultiplier()):P):(s1=P,r1.forEach(function(k1){s1=e.multiply(s1,k1)}),e.multiply(s1,e.parse(y1)).distributeMultiplier())).group===Z0&&(s1=e.parse(s1))):s1=s;return s1}catch{return V}return V}function J0(P){if(i0(P.power)||!P.power.absEquals(.5))return P;var c=P.power.sign(),P=L1(P.group===p0?new a(P.value):P.toLinear());return c<0&&P.invert(),P}this.toTeX=function(s,c){var P=(c=c||{}).decimals===!0?"decimals":void 0,P0=typeof s=="string"?this.toObject(s):s,V=[],m0=c.cdot===void 0?"\\cdot":c.cdot,P0=function(h2){for(var M1=[];h2.length;){var u2,s2,l2=h2.shift(),S2=h2[0],N2=m1(S2),M2=S2==="-";l2==="^"&&(S2==="+"?h2.shift():N2&&S2[0]==="+"&&S2.shift(),N2&&S2.length===1&&h2.unshift(h2.shift()[0])),l2==="^"&&(N2&&S2[0]==="-"||M2)?(u2=M1.pop(),s2="1",(M2=M1[M1.length-1])==="*"?(M1.pop(),s2=M1.pop()):m1(M2)&&(s2=M1.pop()),M1.push(s2,"/",u2,l2),(N2?S2:h2).shift(),N2&&S2.length===1&&M1.push(h2.shift()[0])):M1.push(l2)}return M1}(P0);if(m1(P0)){for(var r1,y1,u1=[],s1=0;s1<P0.length;s1++)r1=P0[s1],P0[s1+1]==="^"?(y1=P0[s1+2],u1.push(v.braces(this.toTeX([r1]))+"^"+v.braces(this.toTeX([y1]))),s1+=2):u1.push(r1);P0=u1}for(var s1=0,C1=P0.length;s1<C1;s1++){var g1=P0[s1];if(i0(g1=g1==="*"?m0:g1))if(g1.group===c1){var f2,k1=g1.fname;if(k1===l)Q1="\\sqrt"+v.braces(this.toTeX(g1.args));else if(k1===f)Q1=v.brackets(this.toTeX(g1.args),"abs");else if(k1===h)Q1=v.brackets(this.toTeX(g1.args),"parens");else if(k1===N0.LOG10)Q1="\\"+N0.LOG10_LATEX+"\\left( "+this.toTeX(g1.args)+"\\right)";else if(k1==="integrate")var h1=G(g1.args),Q1="\\int "+(p2=v.braces(this.toTeX(h1[0])))+"\\, d"+(a2=this.toTeX(h1[1]));else if(k1==="defint"){var h1=G(g1.args),p2=v.braces(this.toTeX(h1[0])),a2=this.toTeX(h1[3]);Q1="\\int\\limits_{"+this.toTeX(h1[1])+"}^{"+this.toTeX(h1[2])+"} "+p2+"\\, d"+a2}else if(k1==="diff"){if(h1=G(g1.args),a2="",p2=v.braces(this.toTeX(h1[0])),h1.length===1){for(var W1=[],r2=0;r2<h1[0].length;r2++)h1[0][r2].group===3&&W1.push(h1[0][r2].value);W1.sort(),a2=0<W1.length?"\\frac{d}{d "+W1[0]+"}":"\\frac{d}{d x}"}else a2=h1.length===2?"\\frac{d}{d "+h1[1]+"}":"\\frac{d^{"+h1[2]+"}}{d "+this.toTeX(h1[1])+"^{"+h1[2]+"}}";Q1=a2+"\\left("+p2+"\\right)"}else if(k1==="sum"||k1==="product"){var o2=[[],[],[],[]],r2=0;for(s1=0;s1<g1.args.length;s1++)g1.args[s1]!==","?o2[r2].push(g1.args[s1]):r2++;Q1=(k1==="sum"?"\\sum_":"\\prod_")+v.braces(this.toTeX(o2[1])+" = "+this.toTeX(o2[2])),Q1+="^"+v.braces(this.toTeX(o2[3]))+v.braces(this.toTeX(o2[0]))}else Q1=k1==="limit"?(f2=G(g1.args).map(function(M1){return Array.isArray(M1)?e.toTeX(M1.join("")):e.toTeX(String(M1))}),"\\lim_"+v.braces(f2[1]+"\\to "+f2[2])+" "+v.braces(f2[0])):k1===d||k1===E?this.toTeX(g1.args)+(k1===d?"!":"!!"):v.latex(g1,P);V.push(Q1)}else V.push(v.latex(g1,P));else m1(g1)?V.push(v.brackets(this.toTeX(g1))):g1==="/"?V.push(v.frac(I1(V.pop()),I1(this.toTeX([P0[++s1]])))):V.push(g1)}return V.join(" ")},this.expand=j0,this.round=t0,this.clean=function s(c){var P,V,m0,P0,r1,y1,u1,s1=c.group;return s1===Z?(V=c.getNum(),m0=c.getDenom()||new a(1),P0=Number(c.power),r1=new a(1),Math.abs(P0)===1&&(m0.each(function(C1){C1.group===Z0?r1=e.multiply(r1,s(C1.getDenom())):C1.power.lessThan(0)&&(r1=e.multiply(r1,s(C1.clone().toUnitMultiplier())))}),y1=new a(0),m0.each(function(C1){y1=e.add(e.divide(C1,r1.clone()),y1)}),r1.invert(),V.isComposite()?(u1=new a(0),V.each(function(C1){u1=e.add(e.multiply(s(C1),r1.clone()),u1)})):u1=e.multiply(r1,V),P=e.divide(u1,y1))):s1===Z0?(P=new a(1),c.each(function(C1){P=e.multiply(P,e.clean(C1))})):s1===c1&&c.args.length===1&&c.args[0].isConstant()&&(P=E0("PARSE2NUMBER",function(){return e.parse(c)},!0)),P=P||c},this.sqrt=L1,this.cbrt=c2,this.abs=Z1,this.log=D,this.rationalize=w1,this.nthroot=i2,this.arg=M,this.conjugate=p,this.imagpart=t,this.realpart=K1,this.getFunction=function(s){return O1[s][0]},this.addPreprocessor=function(s,c,P,V){var m0=m.names,P0=m.actions;if(typeof c!="function")throw new PreprocessorError("Incorrect parameters. Function expected!");P?V?(m0.splice(P,0,s),P0.splice(P,0,c)):(m0[P]=s,P0[P]=c):(m0.push(s),P0.push(c))},this.getPreprocessors=function(){for(var s={},c=0,P=s.names.length;c<P;c++)s[s.names[c]]={order:c,action:s.actions[c]};return s},this.removePreprocessor=function(s,c){s=m.names.indexOf(s),c?(S0(m.names,s),S0(m.actions,s)):(m.names[s]=void 0,m.actions[s]=void 0)},this.mapped_function=function(){for(var s={},c=this.params,P=0;P<c.length;P++)s[c[P]]=String(arguments[P]);return e.parse(this.body,s)},this.add=function(s,c){var P=i0(s),V=i0(c);if(P&&V){if(s.unit||c.unit)return e.Unit.add(s,c);if(s.isInfinity||c.isInfinity){var C1=s.multiplier.lessThan(0),g1=c.multiplier.lessThan(0);if(s.isInfinity&&c.isInfinity&&C1!==g1)throw new b0("("+s+")+("+c+") is not defined!");var f2=a.infinity();return g1&&f2.negate(),f2}if(s.isComposite()&&s.isLinear()&&c.isComposite()&&c.isLinear()&&(s.distributeMultiplier(),c.distributeMultiplier(),c.length>s.length&&s.group===c.group&&([s,c]=[c,s])),s.multiplier.equals(0))return c;if(c.multiplier.equals(0))return s;if(s.isConstant()&&c.isConstant()&&N0.PARSE2NUMBER)return u1=new a(s.multiplier.add(c.multiplier).toDecimal(N0.PRECISION));var m0=s.group,P0=c.group,Q1=s.power.toString(),h1=c.power.toString();if(m0<P0||m0===P0&&h1<Q1&&0<h1)return this.add(c,s);m0===Z0&&P0===b1&&s.value===c.value&&(W1=s,m0=(s=c).group,P0=(c=W1).group,Q1=s.power.toString(),h1=c.power.toString());var r1,y1,u1,s1=Q1===h1,C1=s.value,g1=c.value,f2=s.isComposite(),Q1=c.isComposite();if(f2&&(r1=v1(s,"hash")),Q1&&(y1=v1(c,"hash")),m0===Z&&P0===Z&&c.isLinear()&&!s.isLinear()&&r1!==y1)return this.add(c,s);m0===b1&&P0===b1&&(C1=r1,g1=y1);var k1,h1=m0===p0&&P0===z0,Q1=s.value===c.multiplier.toString(),Q1=C1===g1||r1===y1&&r1!==void 0||h1&&Q1;if(Q1&&s1&&m0===P0)if(h1&&(c=c.convert(p0)),m0!==b1||P0!==q1&&P0!==p0)if((u1=s).multiplier.isOne()&&c.multiplier.isOne()&&m0===Z&&s.isLinear()&&c.isLinear())for(var p2 in c.symbols){var a2=c.symbols[p2];u1.attach(a2)}else u1.multiplier=u1.multiplier.add(c.multiplier);else s.distributeMultiplier(),u1=s.attach(c);else if(Q1&&m0!==b1)m0===Z&&P0===b1?(c.insert(s,"add"),u1=c):(u1=a.shell(b1).attach([s,c])).value=m0===b1?r1:C1;else if(f2&&s.isLinear())if(C1=m0===P0,f2=m0===b1&&P0===b1,f2&&(C1=s.value===c.value),s.distributeMultiplier(),c.isComposite()&&c.isLinear()&&C1){for(var p2 in c.distributeMultiplier(),c.symbols)a2=c.symbols[p2],s.attach(a2);u1=s}else f2&&s.value!==y1||m0===b1&&!Q1?(u1=a.shell(Z).attach([s,c])).updateHash():u1=s.attach(c);else m0===c1&&s.fname===l&&P0!==F1&&c.power.equals(.5)&&(k1=c.multiplier.clone(),(c=L1(c.toUnitMultiplier().toLinear())).multiplier=k1),s.length===2&&c.length===2&&q(s.power)&&q(c.power)?u1=e.add(j0(s),j0(c)):(u1=a.shell(Z).attach([s,c])).updateHash();return(u1=u1.multiplier.equals(0)?new a(0):u1).length===1&&(k1=u1.multiplier,(u1=f0(u1.symbols)).multiplier=u1.multiplier.multiply(k1)),u1}V&&!P&&(W1=s,s=c,c=W1,W1=V,V=P,P=W1);var W1=s0(c);if(P&&W1){var r2=new b;c.eachElement(function(h2,M1,u2){r2.set(M1,u2,e.add(s.clone(),h2))}),c=r2}else if(s0(s)&&W1)c=s.add(c);else if(P&&H0(c))c.each(function(h2,M1){c.elements[--M1]=e.add(s.clone(),c.elements[M1])});else if(H0(s)&&H0(c))c.each(function(h2,M1){c.elements[--M1]=e.add(s.elements[M1],c.elements[M1])});else{if(H0(s)&&s0(c))return e.add(c,s);if(s0(s)&&H0(c)){if(c.elements.length===s.rows()){var r2=new b,o2=s.cols();return c.each(function(M1,u2){for(var s2=[],l2=0;l2<o2;l2++)s2.push(e.add(s.elements[u2-1][l2].clone(),M1.clone()));r2.elements.push(s2)}),r2}q0("Dimensions must match!")}}return c},this.subtract=function(s,c){var P=i0(s),V=i0(c);if(P&&V)return s.unit||c.unit?e.Unit.subtract(s,c):this.add(s,c.negate());if(V&&H0(s))c=s.map(function(r1){return e.subtract(r1,c.clone())});else if(P&&H0(c))c=c.map(function(r1){return e.subtract(s.clone(),r1)});else if(H0(s)&&H0(c))s.dimensions()===c.dimensions()?c=s.subtract(c):e.error("Unable to subtract vectors. Dimensions do not match.");else if(s0(s)&&H0(c)){if(c.elements.length===s.rows()){var m0=new b,P0=s.cols();return c.each(function(r1,y1){for(var u1=[],s1=0;s1<P0;s1++)u1.push(e.subtract(s.elements[y1-1][s1].clone(),r1.clone()));m0.elements.push(u1)}),m0}q0("Dimensions must match!")}else{if(H0(s)&&s0(c)){var m0=c.clone().negate();return e.add(m0,s)}s0(s)&&s0(c)?c=s.subtract(c):s0(s)&&V?(m0=new b,s.each(function(r1,y1,u1){m0.set(y1,u1,e.subtract(r1,c.clone()))}),c=m0):P&&s0(c)&&(m0=new b,c.each(function(r1,y1,u1){m0.set(y1,u1,e.subtract(s.clone(),r1))}),c=m0)}return c},this.multiply=function(s,c){var P=i0(s),V=i0(c);if(P&&c instanceof B)return c.elements.push(s),c;if(P&&V){if(c.isUnit){var h1=s.clone();return s.unit=c,h1}if(s.unit||c.unit)return e.Unit.multiply(s,c);if(s.isInfinity||c.isInfinity){if(s.equals(0)||c.equals(0))throw new b0(s+"*"+c+" is undefined!");if(c.power.lessThan(0)){if(s.isInfinity)throw new b0("Infinity/Infinity is not defined!");return new a(0)}var g1=s.multiplier.multiply(c.multiplier).sign(),C1=a.infinity();if(s.isConstant()||c.isConstant()||s.isInfinity&&c.isInfinity)return g1<0&&C1.negate(),C1}if(s.isConstant()&&c.isConstant()&&N0.PARSE2NUMBER)return new a(u1=new _1(s.multiplier.toDecimal()).times(new _1(c.multiplier.toDecimal())).toFixed());if(s.isOne())return c.clone();if(c.isOne())return s.clone();if(s.multiplier.equals(0)||c.multiplier.equals(0))return new a(0);if(c.group>s.group&&c.group!==Z)return this.multiply(c,s);s.group===Z0&&c.group===b1&&s.value===c.value&&(u1=s,s=c,c=u1);var m0=s.group,P0=c.group,r1=c.multiplier.num,y1=c.multiplier.den;m0!==c1||s.fname!==l||c.isConstant()||s.args[0].value!==c.value||s.args[0].multiplier.lessThan(0)?m0===c1&&s.fname===l&&s.multiplier.equals(1)&&s.power.equals(-1)&&c.isConstant()&&s.args[0].equals(c)&&(s=e.symfunction(l,[c.clone()]),c=new a(1)):(k1=s.power,f2=e.parse(s.multiplier),(s=e.multiply(f2,s.args[0].clone())).setPower(new T(.5).multiply(k1)),m0=s.group);var u1,s1=s.value,C1=c.value,g1=new T(s.sign()),f2=m0===p0&&P0===z0&&c.multiplier.equals(s.value),k1=(f2?new T(1).multiply(s.multiplier):s.multiplier.multiply(c.multiplier)).abs(),h1=s.clone().toUnitMultiplier();if(c=c.clone().toUnitMultiplier(!0),m0===c1&&P0===c1){var Q1=s.args[0].clone(),p2=c.args[0].clone();if(s.fname===l&&c.fname===l&&s.isLinear()&&c.isLinear()){var a2=e.divide(Q1,p2).invert();a2.gt(1)&&_(a2)&&(h1=e.multiply(s.args[0].clone(),L1(a2.clone())),c=new a(1))}else if(s.fname===d&&c.fname===d&&!Q1.isConstant()&&!p2.isConstant()&&c.power<0&&(a2=e.subtract(Q1.clone(),p2.clone()),a2.isConstant()))if(u1=new a(1),a2<0){for(var W1=0,r2=Math.abs(a2);W1<=r2;W1++){var o2=e.add(Q1.clone(),new a(W1));u1=e.multiply(u1,o2)}h1=e.multiply(e.pow(Q1,new a(s.power)),e.pow(u1,new a(c.power))),c=new a(1)}else{for(W1=0,r2=Math.abs(a2);W1<=r2;W1++)o2=e.add(p2.clone(),new a(W1)),u1=e.multiply(u1,o2);h1=e.multiply(e.pow(u1,new a(s.power)),e.pow(p2,new a(c.power))),c=new a(1)}}if(s1===C1&&m0===b1&&m0===P0&&(s1=s.text("hash"),C1=c.text("hash")),(s1=P0===F1&&c.previousGroup===b1&&m0===b1?v1(s,"hash",F1):s1)!==C1&&!f2||m0===b1&&(P0===q1||P0===p0||P0===c1)||m0===b1&&P0===Z0)if(m0===Z0&&s.isLinear())if(P0===Z0&&c.distributeExponent(),P0===Z0&&c.isLinear()){for(var o2 in c.symbols){var h2=c.symbols[o2];h1=h1.combine(h2)}h1.multiplier=h1.multiplier.multiply(c.multiplier)}else h1.combine(c);else m0!==z0?m0===Z0?(h1.distributeExponent(),h1.combine(c)):c.isOne()||(s2=c.multiplier.clone(),c.toUnitMultiplier(),(h1=a.shell(Z0).combine([h1,c])).multiplier=h1.multiplier.multiply(s2)):h1=c.clone().toUnitMultiplier();else{var M1=s.power,u2=c.power,s2=i0(M1),l2=i0(u2),l2=s2||l2;m0===b1&&P0!==b1&&c.previousGroup!==b1&&M1.equals(1)?(h1=new a(0),s.each(function(M2){h1=e.add(h1,e.multiply(M2,c.clone()))},!0)):(h1.power=l2?e.add(i0(M1)?M1:new a(M1),i0(u2)?u2:new a(u2)):m0===z0?M1:M1.add(u2),h1.power.equals(0)&&(h1=h1.convert(z0)),l2&&h1.convert(F1),s.imaginary&&c.imaginary&&q(h1.power%2)&&(h1=new a(1),k1.negate()),h1.group!==F1&&h1.previousGroup&&(h1.previousGroup=void 0),h1.multiplier=h1.multiplier.multiply(c.multiplier))}return h1.group===p0&&(m0=Math.log(h1.value),M1=Math.log(r1)/m0,u2=Math.log(y1)/m0,l2=k1.num/r1,m0=k1.den/y1,M1!=0&&_(M1)&&_(l2)&&(h1.power=h1.power.add(new T(M1)),k1.num/=r1),u2!=0&&_(u2)&&_(m0)&&(h1.power=h1.power.subtract(new T(u2)),k1.den/=y1)),h1.length===1&&(u1=h1.multiplier,(h1=f0(h1.symbols)).multiplier=h1.multiplier.multiply(u1)),y1=h1.power.toString(),q(y1)&&h1.fname===l?(g1*=h1.sign(),y1=h1.power,h1=h1.args[0],h1=e.multiply(new a(k1),e.pow(h1,new a(y1.divide(new T(2))))),g1<0&&h1.negate()):(h1.multiplier=h1.multiplier.multiply(k1).multiply(g1),h1.group===Z&&h1.isImaginary()&&h1.distributeMultiplier()),h1=h1.group===p0&&_(h1.power.toDecimal())?h1.convert(z0):h1}if(V&&!P&&(u1=s,s=c,c=u1,u1=V,V=P,P=u1),g1=s0(c),V=s0(s),P&&g1){var S2=new b;c.eachElement(function(M2,C2,k2){S2.set(C2,k2,e.multiply(s.clone(),M2))}),c=S2}else if(V&&g1)c=s.multiply(c);else if(P&&H0(c))c.each(function(M2,C2){c.elements[--C2]=e.multiply(s.clone(),c.elements[C2])});else if(H0(s)&&H0(c))c.each(function(M2,C2){c.elements[--C2]=e.multiply(s.elements[C2],c.elements[C2])});else{if(H0(s)&&s0(c))return this.multiply(c,s);if(s0(s)&&H0(c)){if(c.elements.length===s.rows()){var S2=new b,N2=s.cols();return c.each(function(C2,k2){for(var j2=[],Y2=0;Y2<N2;Y2++)j2.push(e.multiply(s.elements[k2-1][Y2].clone(),C2.clone()));S2.elements.push(j2)}),S2}q0("Dimensions must match!")}}return c},this.divide=function(s,c){var P=i0(s),V=i0(c);if(P&&V){if(s.unit||c.unit)return e.Unit.divide(s,c);if(c.equals(0))throw new y0("Division by zero not allowed!");return s.isConstant()&&c.isConstant()?(m0=s.clone()).multiplier=m0.multiplier.divide(c.multiplier):(c.invert(),m0=e.multiply(s,c)),m0}var m0,P0,r1=H0(s),y1=H0(c);return P&&y1?c=c.map(function(u1){return e.divide(s.clone(),u1)}):r1&&V?c=s.map(function(u1){return e.divide(u1,c.clone())}):r1&&y1?s.dimensions()===c.dimensions()?c=c.map(function(u1,s1){return e.divide(s.elements[--s1],u1)}):e.error("Cannot divide vectors. Dimensions do not match!"):(m0=s0(s),r1=s0(c),m0&&V?(P0=new b,s.eachElement(function(u1,s1,C1){P0.set(s1,C1,e.divide(u1,c.clone()))}),c=P0):P&&r1?(P0=new b,c.eachElement(function(u1,s1,C1){P0.set(s1,C1,e.divide(s.clone(),u1))}),c=P0):m0&&r1?(P0=new b,s.rows()===c.rows()&&s.cols()===c.cols()?(s.eachElement(function(u1,s1,C1){P0.set(s1,C1,e.divide(u1,c.elements[s1][C1]))}),c=P0):e.error("Dimensions do not match!")):m0&&y1&&(s.cols()===c.dimensions()?(P0=new b,s.eachElement(function(u1,s1,C1){P0.set(s1,C1,e.divide(u1,c.elements[s1].clone()))}),c=P0):e.error("Unable to divide matrix by vector."))),c},this.pow=function(s,c){var P,V=i0(s),m0=i0(c);if(V&&m0){if(s.unit||c.unit)return e.Unit.pow(s,c);if(s.group===c1&&s.fname===f&&q(c)){var C1=s.multiplier.clone(),s1=e.pow(s.args[0],c);return s1.multiplier=C1,s1}if(s.isInfinity||c.isInfinity){if(s.isInfinity&&c.isInfinity)throw new b0("("+s+")^("+c+") is undefined!");if(s.isConstant()&&c.isInfinity){if(s.equals(0)){if(c.lessThan(0))throw new b0("0^Infinity is undefined!");return new a(0)}if(s.equals(1))throw new b0("1^"+c.toString()+" is undefined!");if(c.lessThan(0))return new a(0);if(!s.lessThan(0))return a.infinity()}if(s.isInfinity&&c.isConstant()){if(c.equals(0))throw new b0(s+"^0 is undefined!");return c.lessThan(0)?new a(0):e.multiply(a.infinity(),e.pow(new a(s.sign()),c.clone()))}}var g1=s.equals(0),P0=c.equals(0);if(g1&&P0)throw new b0("0^0 is undefined!");if(g1&&c.isConstant()&&c.multiplier.greaterThan(0))return new a(0);if(P0)return new a(1);var r1,y1=c.isConstant(),u1=s.isConstant(),s1=c.isInteger(),C1=s.multiplier,g1=s.clone();if(u1&&y1&&s.equals(0)&&c.lessThan(0))throw new b0("Division by zero is not allowed!");if(N0.PARSE2NUMBER&&u1&&y1&&s.sign()<0&&J(c)){var f2=Math.PI*c;return o2=new a(Math.cos(f2)),a2=e.multiply(a.imaginary(),new a(Math.sin(f2))),e.add(o2,a2)}if(N0.PARSE2NUMBER&&s.isImaginary()&&y1&&_(c)&&!c.lessThan(0)&&(o2=s.realpart(),a2=s.imagpart(),o2.isConstant("all")&&a2.isConstant("all")))return P0=N0.USE_BIG?a(_1.atan2(p2.multiplier.toDecimal(),r2.multiplier.toDecimal()).times(c.toString())):Math.atan2(a2,o2)*c,r1=new a(P0),r2=e.pow(a.hyp(o2,a2),c),f2=e.multiply(r2.clone(),e.trig.cos(r1.clone())),P0=e.multiply(r2,e.trig.sin(r1)),e.add(f2,e.multiply(a.imaginary(),P0));if(g1.toUnitMultiplier(),g1.group!==c1||g1.fname!==l||y1?(N2=C1.sign(),J(c)&&N2<0&&(g1.negate(),(g1=e.symfunction(h,[g1])).negate()),g1.multiplyPower(c)):((u2=g1.args[0]).multiplyPower(new a(.5)),u2.multiplier.multiply(g1.multiplier),u2.multiplyPower(c),g1=u2),u1&&y1&&N0.PARSE2NUMBER)N2<0&&(s.negate(),h1=c.multiplier.den.equals(2)?new a(N0.IMAGINARY):_(c.multiplier)?q(c.multiplier)?new a(1):new a(-1):q(c.multiplier.den)?e.pow(e.symfunction(h,[new a(N2)]),c.clone()):new a(Math.pow(N2,c.multiplier.num))),g1=new a(Math.pow(s.multiplier.toDecimal(),c.multiplier.toDecimal())),h1&&(g1=e.multiply(g1,h1));else if(s1&&!C1.equals(1)){if(c.abs().gt(N0.MAX_EXP))return c.sign()<0?new a(0):a.infinity();var k1=c.multiplier.toDecimal(),h1=Math.sign(k1);k1=Math.abs(k1);var Q1=new T(1);Q1.num=C1.num.pow(k1),Q1.den=C1.den.pow(k1),h1<0&&Q1.invert(),g1.multiplier=g1.multiplier.multiply(Q1)}else{var p2,a2,W1,r2,o2,h2,M1,u2,s2,l2,S2,N2=s.sign();c.isConstant()&&s.isConstant()&&!c.multiplier.den.equals(1)&&N2<0?g1=c.multiplier.den.equals(2)?(p2=new a(N0.IMAGINARY),s.negate(),c.lessThan(0)&&(p2.negate(),c.negate()),e.multiply(e.pow(s,c),p2)):((W1=s.clone()).multiplier.negate(),g1=e.pow(e.symfunction(h,[new a(N2)]),c.clone()),Q1=e.pow(new a(W1.multiplier.num),c.clone()),p2=e.pow(new a(W1.multiplier.den),c.clone()),r2=e.divide(Q1,p2),e.multiply(g1,r2)):N0.PARSE2NUMBER&&c.isImaginary()?(o2=c.realpart(),a2=c.imagpart(),W1=s.clone().toLinear(),r2=e.pow(W1.clone(),o2),s2=D(W1.clone()),o2=n0.cos(e.multiply(a2.clone(),s2)),s2=e.multiply(n0.sin(e.multiply(a2,D(W1))),a.imaginary()),g1=e.multiply(r2,e.add(o2,s2)),g1=e.expand(e.parse(g1))):(h2=J0(new a((s2=s.group===z0&&N2<0)?C1.num:Math.abs(C1.num)).setPower(c.clone())),M1=J0(new a(C1.den).setPower(c.clone()).invert()),s.imaginary&&(s1?(u2=Math.sign(c),k1=Z1(c),g1=new a(q(l2=k1%4)?-1:N0.IMAGINARY),(l2===0||u2<0&&l2===1||0<u2&&l2===3)&&g1.negate()):(s1=c.multiplier.multiply(T.quick(1,2)),u2=Math.pow(-1,s1.num),g1=q(s1.den)?new a(-1).setPower(s1,!0):new a(u2))),N2<0&&!s2&&g1.negate(),y1&&s.group!==F1&&(N2=q(c.multiplier.den),s2=q(s.power),l2=g1.power.toDecimal(),y1=q(l2),N2&&s2&&!y1&&(g1=l2===1?e.symfunction(f,[g1]):_(l2)?e.multiply(e.symfunction(f,[g1.clone().toLinear()]),g1.clone().setPower(new T(l2-1))):(k1=g1.power,e.symfunction(f,[g1.toLinear()]).setPower(k1)),N0.POSITIVE_MULTIPLIERS&&g1.fname===f&&(g1=g1.args[0]))),c.equals(2)&&g1.group===Z0&&(S2=new a(1),g1.each(function(M2){S2=e.multiply(S2,e.pow(M2,c))}),g1=S2))}return g1=J0(g1),(g1=h2&&M1?e.multiply(g1,function(M2){if(M2.group===p0){var C2=M2.value,k2=e2(C2)[0];if(!k2)return Q0("Unable to compute prime factors. This should not happen. Please review and report."),M2;if(C2=new T(Math.log(C2)/Math.log(k2)).multiply(M2.power),C2.den>M2.power.den)return M2;M2=_(C2)?a(Math.pow(k2,C2)):new a(k2).setPower(C2)}return M2}(e.multiply(h2,M1))):g1).fname===l?(M1=((h2=g1.group===F1)?g1.power.multiplier:g1.power).toString(),q(M1)&&(h2=h2?e.divide(g1.power,new a(2)):new a(g1.power.divide(new T(2))),C1=g1.multiplier,(g1=e.pow(g1.args[0],h2)).multiplier=g1.multiplier.multiply(C1))):!N0.IGNORE_E&&g1.isE()&&g1.group===F1&&g1.power.contains("pi")&&g1.power.contains(N0.IMAGINARY)&&c.group===Z0&&(r1=c.stripVar(N0.IMAGINARY),g1=e.add(n0.cos(r1),e.multiply(a.imaginary(),n0.sin(r1)))),g1}return H0(s)&&m0?s=s.map(function(M2){return e.pow(M2,c.clone())}):s0(s)&&m0?(P=new b,s.eachElement(function(M2,C2,k2){P.set(C2,k2,e.pow(M2,c.clone()))}),s=P):V&&s0(c)&&(P=new b,c.eachElement(function(M2,C2,k2){P.set(C2,k2,e.pow(s.clone(),M2))}),s=P),s},this.comma=function(s,c){return(s=s instanceof B?s:B.create(s)).append(c),s},this.mod=z1,this.slice=function(s,c){return new N(s,c)},this.equals=function(s,c){return s.group===q1||s.isLinear()||q0("Cannot set equality for "+s.toString()),x[s.value]=c.clone(),c},this.percent=function(s){return e.divide(s,new a(100))},this.assign=function(s,c){if(s instanceof B&&c instanceof B)return s.elements.map(function(V,m0){return e.assign(V,c.elements[m0])}),U.fromArray(c.elements);if(s.parent){var P=s.parent;return P.elements[P.getter]=c,delete P.getter,P}if(s.group!==q1)throw new T1("Cannot complete operation. Incorrect LH value for "+s);return x[s.value]=c},this.function_assign=function(s,c){var P=s.elements.pop();return c0(P,s.elements,c)};function e1(s){return new a(s===!0?1:0)}this.eq=function(s,c){return e1(s.equals(c))},this.gt=function(s,c){return e1(s.gt(c))},this.gte=function(s,c){return e1(s.gte(c))},this.lt=function(s,c){return e1(s.lt(c))},this.lte=function(s,c){return e1(s.lte(c))},this.factorial=function(s){return this.symfunction(d,[s])},this.dfactorial=function(s){return this.symfunction(E,[s])}}N0.FUNCTION_MODULES.push(R1),a0(R1),Math.sign=Math.sign||function(e){return(e=+e)==0||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){return e=Math.exp(e),(e+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){return e=Math.exp(e),(e-1/e)/2},Math.tanh=Math.tanh||function(e){return e===1/0?1:e===-1/0?-1:(e=Math.exp(2*e),(e-1)/(e+1))},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},e2(314146179365),t2.getExpression=function(e,u){return e!=="last"&&e||(e=L.length),e=L[(e=e==="first"?1:e)-1],e&&new t2(e)},(t2.prototype={text:function(e,u){return u=u||N0.EXPRESSION_DECP,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):v1(this.symbol,e,void 0,u)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):v.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(H0(this.symbol)&&this.symbol.dimensions()===0)return this;var e,u=arguments[0],m=1;typeof u=="string"?e=u.charAt(0)==="%"?t2.getExpression(u.substr(1)).text():u:u instanceof t2||i0(u)?e=u.text():(e=this.symbol.text(),m--);var N=arguments[m]||{};return new t2(E0("PARSE2NUMBER",function(){return r.parse(e,N)},!0))},buildFunction:function(e){return z.build(this.symbol,e)},isNumber:function(){return n1(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return h0(r.parse(this.symbol)).isImaginary()},variables:function(){return k0(this.symbol)},toString:function(){try{return m1(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch{return""}},toDecimal:function(e){return N0.precision=e,e=v1(this.symbol,"decimals"),N0.precision=void 0,e},isFraction:function(){return I0(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,u){return new t2(this.symbol.sub(r.parse(e),r.parse(u)))},operation:function(e,u){return x1(u)?u=u.symbol:i0(u)||(u=r.parse(u)),new t2(r[e](this.symbol.clone(),u.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new t2(r.expand(this.symbol))},each:function(e,u){if(this.symbol.each)this.symbol.each(e,u);else if(m1(this.symbol))for(u=0;u<this.symbol.length;u++)e.call(this.symbol,this.symbol[u],u);else e.call(this.symbol)},eq:function(e){i0(e)||(e=r.parse(e));try{return r.subtract(this.symbol.clone(),e).equals(0)}catch{return!1}},lt:function(e){i0(e)||(e=r.parse(e));try{return h0(r.subtract(this.symbol.clone(),e)).lessThan(0)}catch{return!1}},gt:function(e){i0(e)||(e=r.parse(e));try{return h0(r.subtract(this.symbol.clone(),e)).greaterThan(0)}catch{return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new t2(this.symbol.getNum())},denominator:function(){return new t2(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=t2.prototype.latex,C.prototype={fromScientific:function(e){return e=String(e).toLowerCase().split("e"),this.coeff=e[0],this.exponent=e[1],this},convert:function(B){var o0=B.split("."),u=o0[0]||"",m=o0[1]||"",u=C.removeLeadingZeroes(u),m=C.removeTrailingZeroes(m),N=u.length,B=u+m,o0=C.leadingZeroes(B).length;return this.exponent=N-(o0+1),B=C.removeLeadingZeroes(B),this.coeff=B.charAt(0)+"."+(B.substr(1,B.length)||"0"),B=this.coeff.split(".")[1]||"",this.decp=B==="0"?0:B.length,this.dec=m,this.wholes=u,this},round:function(e){var u,m,N=this.copy();return(e=Number(e))===0?N.coeff=N.coeff.charAt(0):(u=this.coeff.substring(0,e+1),e=(m=this.coeff.substring(e+1,e+3)).charAt(0),4<m.charAt(1)&&e++,N.coeff=u+e),N},copy:function(){var e=new C(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var u;return u=N0.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&this.exponent===0&&this.decp<e?this.decp===0?this.wholes:this.coeff:(u=e===void 0?this.coeff:C.round(this.coeff,Math.min(e,this.decp||1)),this.exponent===0?u:u+"e"+this.exponent),(this.sign===-1?"-":"")+u}},C.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},C.leadingZeroes=function(e){return e=e.match(/^(0*).*$/),e?e[1]:""},C.removeLeadingZeroes=function(e){return e=e.match(/^0*(.*)$/),e?e[1]:""},C.removeTrailingZeroes=function(e){var u=e.match(/0*$/);return u?e.substring(0,e.length-u[0].length):""},C.round=function(e,u){return e=Y(e,u),u-=String(e).split(".").pop().length,0<u&&(e+=new Array(1+u).join(0)),e},T.create=function(m){if(m instanceof T)return m;var u=(m=m.toString()).charAt(0)==="-",m=new T(m=u?m.substr(1,m.length-1):m);return u&&m.negate(),m},T.isFrac=function(e){return e instanceof T},T.quick=function(e,u){var m=new T;return m.num=new F(e),m.den=new F(u),m},T.simple=function(e){for(var u=String(l1(e)).split("."),e=u.join(""),m=1,N=(u[1]||"").length,B=0;B<N;B++)m+="0";return T.quick(e,m).simplify()},T.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var u=this.clone();return u.num=u.num.multiply(e.num),u.den=u.den.multiply(e.den),u.simplify()},divide:function(e){if(e.equals(0))throw new y0("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(o0){var u=this.den,m=o0.den,N=this.clone(),B=N.num,o0=o0.num;return u.equals(m)?N.num=B.add(o0):(N.num=B.multiply(m).add(o0.multiply(u)),N.den=u.multiply(m)),N.simplify()},mod:function(m){var u=this.clone(),m=m.clone();return u.num=u.num.multiply(m.den),u.den=u.den.multiply(m.den),m.num=m.num.multiply(this.den),m.den=m.den.multiply(this.den),u.num=u.num.mod(m.num),u.simplify()},simplify:function(){var e=F.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new T;return e.num=new F(this.num),e.den=new F(this.den),e},decimal:function(e){var u=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||N0.PRECISION,e++;for(var m=[],N=this.num.abs(),B=this.den,o0=0;o0<e;o0++){var x0=N.divide(B),n0=N.subtract(x0.multiply(B));if(m.push(x0),n0.equals(0))break;N=n0.times(10)}var W0=m.shift();if(m.length===0)return u+W0.toString();if(o0===e){for(var V0=[],o0=0;o0<2;o0++)V0.unshift(m.pop());m.push(Math.round(V0.join(".")))}return u+(W0.toString()+"."+m.join(""))},toDecimal:function(e){return(e=e||N0.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){return isNaN(e)||(e=new T(e)),e=this.qcompare(e),e[0].equals(e[1])},absEquals:function(e){return isNaN(e)||(e=new T(e)),e=this.qcompare(e),e[0].abs().equals(e[1])},greaterThan:function(e){return isNaN(e)||(e=new T(e)),e=this.qcompare(e),e[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){return isNaN(e)||(e=new T(e)),e=this.qcompare(e),e[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,u=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=u,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return T.quick(F.gcd(e.num,this.num),F.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return N0.USE_BIG?new _1(this.num.toString()).div(new _1(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},a.imaginary=function(){var e=new a(N0.IMAGINARY);return e.imaginary=!0,e},a.infinity=function(e){var u=new a("Infinity");return e===-1&&u.negate(),u},a.shell=function(e,u){return u=new a(u),u.group=e,u.symbols={},u.length=0,u},a.unwrapSQRT=function(e,u){var m,N=e.power;return e.fname===l&&(e.isLinear()||u)&&((m=e.args[0].clone()).power=m.power.multiply(new T(.5)),m.multiplier=m.multiplier.multiply(e.multiplier),e=m,u&&(e.power=N.multiply(new T(.5)))),e},a.hyp=function(e,u){return e=e||new a(0),u=u||new a(0),r.sqrt(r.add(r.pow(e.clone(),new a(2)),r.pow(u.clone(),new a(2))))},a.toPolarFormArray=function(m){var u=m.realpart(),m=m.imagpart();return[a.hyp(u,m),u.equals(0)?r.parse("pi/2"):r.trig.atan(r.divide(m,u))]},a.unwrapPARENS=function(e){if(e.fname!=="")return e;var u=e.args[0];return u.power=u.power.multiply(e.power),u.multiplier=u.multiplier.multiply(e.multiplier),e.fname===""?a.unwrapPARENS(u):u},a.create=function(e,u){return r.parse("("+e+")^("+(u=u===void 0?1:u)+")")},a.prototype={getNth:function(e){var u=h0(r.pow(r.parse(this.multiplier),r.parse(e).invert())),m=r.parse(Y(u));return h0(r.pow(m,r.parse(e))).equals(r.parse(this.multiplier))?m:u},isToNth:function(e){var u,m=this.getNth(e),m=_(m);return this.group===Z0?(u=!0,this.each(function(N){N.isToNth(e)||(u=!1)})):u=this.group===z0||_(r.divide(r.parse(this.power),r.parse(e))),m&&u},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==Z0)return this.clone();var e=[],N=this.multiplier.sign();this.each(function(K0){if(K0=K0.power,i0(K0)||K0.equals(1))return this.clone();e.push(K0)});var u,m=new T(f1(e)),N=this.multiplier.sign(),B=this.multiplier.clone().abs(),o0=R1.ifactor(B),x0=new T(1),n0=new T(1);for(u in o0){var W0=new T(o0[u]);W0.lessThan(m)||(W0=W0.divide(m).subtract(new T(1)),n0=n0.multiply(new T(u))),x0=x0.multiply(r.parse(O(u)+"^"+O(W0)).multiplier)}var V0=new a(n0);return this.each(function(K0){(K0=K0.clone()).power=K0.power.divide(m),V0=r.multiply(V0,K0)}),B=r.symfunction(h,[V0]),B.power=m,B.multiplier=N<0?x0.negate():x0,B},equals:function(e){return i0(e)||(e=new a(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return i0(e)||(e=new a(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return i0(e)||(e=new a(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return i0(e)||(e=new a(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return i0(e)||(e=new a(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var u=this.group,m=this.power;if(!_(m)||m<0)return!1;if(u===z0||u===q1||this.isConstant(!0))return!0;if(m=k0(this),u===Z0&&m.length===1){var N=m[0];if(!N)return!0;for(o0 in this.symbols){var B=this.symbols[o0];if(B.group===c1&&!B.args[0].isConstant()||!B.contains(N)&&!B.isConstant(!0))return!1}return!0}if(this.isComposite()||u===Z0&&e){if(!e&&1<m.length)return!1;for(var o0 in this.symbols)if(!this.symbols[o0].isPoly(e))return!1;return!0}return!1},stripVar:function(e,u){var m;return this.group!==b1&&this.group!==q1||this.value!==e?this.group===Z0&&this.isLinear()?(m=new a(1),this.each(function(N){N.contains(e,!0)||(m=r.multiply(m,N.clone()))}),m.multiplier=m.multiplier.multiply(this.multiplier)):this.group!==Z||this.isLinear()?this.group===Z&&this.isLinear()?(m=new a(0),this.each(function(N){N.contains(e)||((N=N.clone()).multiplier=N.multiplier.multiply(this.multiplier),m=r.add(m,N))}),m.equals(0)&&(m=new a(this.multiplier))):m=this.group===F1&&this.power.contains(e,!0)||this.group===c1&&this.contains(e)?new a(this.multiplier):this.clone():m=new a(this.multiplier):m=new a(u?0:this.multiplier),m},toArray:function(e,u){u=u||{arr:[],add:function(x0,n0){var W0=this.arr[n0];this.arr[n0]=W0?r.add(W0,x0):x0}};var m=this.group;if(m===q1&&this.contains(e))u.add(new a(this.multiplier),this.power);else if(m===Z0){var N=this.stripVar(e),B=r.divide(this.clone(),N.clone()),B=B.isConstant()?0:B.power;u.add(N,B)}else if(m===b1&&this.value===e)this.each(function(x0,n0){u.add(x0.stripVar(e),n0)});else if(m===Z)this.each(function(x0){x0.toArray(e,u)});else{if(this.contains(e))throw new A1("Cannot convert to array! Exiting");u.add(this.clone(),0)}u=u.arr;for(var o0=0;o0<u.length;o0++)u[o0]||(u[o0]=new a(0));return u},hasFunc:function(e){var u=this.group===c1||this.group===F1;if(u&&!e||u&&this.contains(e))return!0;if(this.symbols){for(var m in this.symbols)if(this.symbols[m].hasFunc(e))return!0}return!1},sub:function(e,u){e=i0(e)?e.clone():r.parse(e),u=i0(u)?u.clone():r.parse(u),e.group!==z0&&e.group!==p0||q0("Cannot substitute a number. Must be a variable");var m,N=!1,B=e.multiplier.equals(1),o0=this.multiplier.clone();if(this.value===e.value&&(this.group!==b1&&e.group!==b1||this.group===b1&&e.group===b1))(B||e.multiplier.equals(this.multiplier))&&(e.isLinear()?m=u:e.power.equals(this.power)&&(m=u,N=!0),e.multiplier.equals(this.multiplier)&&(o0=new T(1)));else if(this.group===Z0||this.previousGroup===Z0)m=new a(1),this.each(function(D0){D0=r.parse(D0.sub(e,u)),m=r.multiply(m,D0)});else if(this.isComposite()){var x0=this.clone();if(e.isComposite()&&x0.isComposite()&&x0.isLinear()&&e.isLinear()){var n0,W0=function(D0,G){for(var I1 in D0.symbols)if(I1=D0.symbols[I1],I1.isComposite()&&W0(I1,G)||I1.equals(G))return!0;return!1};for(n0 in e.symbols)if(!W0(x0,e.symbols[n0]))return x0.clone();m=r.add(r.subtract(x0.clone(),e),u)}else m=new a(0),x0.each(function(D0){m=r.add(m,D0.sub(e,u))})}else if(this.group===F1)m=r.parse(this.value).sub(e,u);else if(this.group===c1){for(var V0=[],K0=0;K0<this.args.length;K0++){var O1=this.args[K0];i0(O1)||(O1=r.parse(O1)),V0.push(O1.sub(e,u))}m=r.symfunction(this.fname,V0)}return m?(N||(N=this.group===F1?this.power.sub(e,u):r.parse(this.power),m=r.pow(m,N)),m.multiplier=m.multiplier.multiply(o0),m):this.clone()},isMonomial:function(){if(this.group===q1)return!0;if(this.group!==Z0)return!1;for(var e in this.symbols)if(this.symbols[e].group!==q1)return!1;return!0},isPi:function(){return this.group===q1&&this.value==="pi"},sign:function(){return this.multiplier.sign()},isE:function(){return this.value==="e"},isSQRT:function(){return this.fname===l},isConstant:function(e,u){if(u&&this.group===Z0){for(var m in this.symbols)if(this.symbols[m].isConstant(!0))return!0}if(e==="functions"&&this.isComposite()){var N=!0;return this.each(function(o0){o0.isConstant(e,u)||(N=!1)},!0),N}if(e==="all"&&(this.isPi()||this.isE()))return!0;if(e&&this.group===c1){for(var B=0;B<this.args.length;B++)if(!this.args[B].isConstant(e))return!1;return!0}return e?n1(this):this.value===i},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols){for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0}return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new a(0);if(this.isComposite()){var e=new a(0);return this.each(function(u){e=r.add(e,u.realpart())}),e}return this.isImaginary()?new a(0):this.clone()},imagpart:function(){if(this.group===q1&&this.isImaginary())return new a(this.multiplier);if(this.isComposite()){var e=new a(0);return this.each(function(u){e=r.add(e,u.imagpart())}),e}return this.group===Z0?this.stripVar(N0.IMAGINARY):new a(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===q1)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var u in this.symbols)if(!this.symbols[u].isLinear(e))return!1;return!0}return this.group===Z0&&this.symbols[e]?this.symbols[e].isLinear(e):!1}return this.power.equals(1)},containsFunction:function(e){if(typeof e=="string"&&(e=[e]),this.group===c1&&e.indexOf(this.fname)!==-1)return!0;if(this.symbols){for(var u in this.symbols)if(this.symbols[u].containsFunction(e))return!0}return!1},multiplyPower:function(e){if(this.group===z0&&this.multiplier.equals(1))return this;var u,m=this.power;return this.group!==F1&&e.group===z0?(u=e.multiplier,this.group!==z0||u.isInteger()||this.convert(p0),this.power=m.equals(1)?u.clone():m.multiply(u),this.group===p0&&_(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(z0))):(this.group!==F1&&(m=new a(m),this.convert(F1)),this.power=r.multiply(m,e)),this},setPower:function(e,u){return this.group===z0&&this.multiplier.equals(1)||(this.group!==F1||i0(e)?(m=!1,i0(e)&&(e.group===z0?e=e.multiplier:m=!0),m=m?F1:p0,this.power=e,this.group===z0&&m&&this.convert(m,u)):(this.group=this.previousGroup,delete this.previousGroup,this.group===z0?(this.multiplier=new T(this.value),this.value=i):this.power=e)),this;var m},isInverse:function(){return this.group===F1?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var u,m=e||new a(0),N=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],B=N.length;if(this.symbols)for(var o0 in m.symbols={},this.symbols)m.symbols[o0]=this.symbols[o0].clone();for(u=0;u<B;u++)this[N[u]]!==void 0&&(m[N[u]]=this[N[u]]);return m.power=this.power.clone(),m.multiplier=this.multiplier.clone(),this.isConversion&&(m.isConversion=this.isConversion),this.isUnit&&(m.isUnit=this.isUnit),m},toUnitMultiplier:function(e){return this.multiplier.num=new F(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new F(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new T(1)),this},each:function(e,u){if(this.symbols)for(var m in this.symbols){var N=this.symbols[m];if(N.group===b1&&u)for(var B in N.symbols)e.call(m,N.symbols[B],B);else e.call(this,N,m)}else e.call(this,this,this.value)},valueOf:function(){return this.group===z0?this.multiplier.valueOf():this.power===0?1:this.multiplier===0?0:v1(this,"decimals")},contains:function(e,u){e=String(e);var m=this.group;if(this.value===e)return!0;if(this.symbols){for(var N in this.symbols)if(this.symbols[N].contains(e,u))return!0}if(m===c1||this.previousGroup===c1){for(var B=0;B<this.args.length;B++)if(this.args[B].contains(e,u))return!0}return m===F1&&(u&&this.power.contains(e,u)||this.value===e)?!0:this.value===e},negate:function(){return this.multiplier.negate(),this.group!==Z&&this.group!==b1||this.distributeMultiplier(),this},invert:function(e,u){return e||(this.multiplier=this.multiplier.invert()),i0(this.power)?this.power.negate():this.group===Z0&&u?this.each(function(m){return m.invert()}):this.power&&this.group!==z0&&this.power.negate(),this},distributeMultiplier:function(e){if(e=e?this.power.absEquals(1):this.power.equals(1),this.symbols&&e&&this.group!==Z0&&!this.multiplier.equals(1)){for(var u in this.symbols)u=this.symbols[u],u.multiplier=u.multiplier.multiply(this.multiplier),u.distributeMultiplier();this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,u=this.power;for(e in this.symbols){var m=this.symbols[e];m.group===F1?m.power=r.multiply(m.power,new a(u)):this.symbols[e].power=this.symbols[e].power.multiply(u)}this.toLinear()}return this},convert:function(e,u){var m;return c1<e?(m=this.clone(),this.symbols={},(e===Z0?m:this).toUnitMultiplier(),this.group===c1&&(m.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[m.keyForGroup(e)]=m,this.group=e,this.length=1):e===F1?this.group===z0&&this.multiplier.equals(1)||(this.group!==F1&&(this.previousGroup=this.group),this.group===z0?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=v1(this,"hash"),this.group=F1):e===z0?(m=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new a(this.group===p0?m*Math.pow(this.value,this.power):m).clone(this)):e===p0&&this.group===z0&&(this.value=u?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!u),this.group=p0),this},insert:function(e,u){var m,N;return i0(e)||q0("Object "+e+" is not of type Symbol!"),this.symbols&&(N=this.group,c1<N&&(N=(m=e.keyForGroup(N))in this.symbols&&this.symbols[m],u==="add"?(u=m,N?(this.symbols[u]=r.add(N,e),this.symbols[u].multiplier.equals(0)&&(delete this.symbols[u],this.length--,this.length===0&&(this.convert(z0),this.multiplier=new T(0)))):(this.symbols[m]=e,this.length++)):(e.group===p0&&_(e.power)&&e.convert(z0),e.group!==F1?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),N&&((e=r.multiply(S0(this.symbols,m),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new a(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[m]=e,this.length++)),this.length===0&&this.convert(z0),this.group!==Z&&this.group!==Z0||this.updateHash())),this},attach:function(e){if(m1(e)){for(var u=0;u<e.length;u++)this.insert(e[u],"add");return this}return this.insert(e,"add")},combine:function(e){if(m1(e)){for(var u=0;u<e.length;u++)this.insert(e[u],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==z0)if(this.group===c1){for(var e="",u=this.args,m=this.fname===h,N=0;N<u.length;N++)e+=(N===0?"":",")+v1(u[N]);var B=m?"":this.fname;this.value=B+(m?e:O(e))}else this.group!==q1&&this.group!==b1&&(this.value=v1(this,"hash"))},keyForGroup:function(e){var u,m=this.group;if(m===z0)u=this.value;else if(m===q1||m===p0)u=e===b1?this.power.toDecimal():this.value;else if(m===c1)u=e===b1?this.power.toDecimal():v1(this,"hash");else{if(m===b1)return u=e===Z0?v1(this,"hash"):e===Z?this.power.equals(1)?this.value:O(v1(this,"hash"))+N0.POWER_OPERATOR+this.power.toDecimal():e===b1?this.power.toString():this.value;m===Z?(e===Z&&(u=v1(this,"hash")),u=e===b1?this.power.toDecimal():this.value):m===Z0?u=e===b1?this.power.toDecimal():v1(this,"hash"):m===F1&&(u=e===b1?v1(this.power):v1(this,"hash"))}return u},collectSymbols:function(e,u,m,N){var B=[];if(this.symbols)for(var o0 in this.symbols)o0=this.symbols[o0],!N||o0.group!==b1&&o0.group!==Z?B.push(e?e(o0,u):o0):B=B.concat(o0.collectSymbols());else B.push(this);return B.sort(m=m===null?void 0:m)},latex:function(e){return v.latex(this,e)},text:function(e){return v1(this,e)},isOne:function(e){return this.group===z0?this.multiplier[e?"absEquals":"equals"](1):this.power.equals(0)},isComposite:function(){var e=this.group,u=this.previousGroup;return e===Z||e===b1||u===b1||u===Z},isCombination:function(){var e=this.group,u=this.previousGroup;return e===Z0||u===Z0},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return i0(e)||(e=new a(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===Z0&&this.power.lessThan(0)?r.expand(e):e).power.lessThan(0)||e.group===F1&&e.power.multiplier.lessThan(0)){var u,m=r.parse(e.multiplier.den);(u=e.toUnitMultiplier()).power.negate(),u=r.multiply(m,u)}else if(e.group===Z0)for(var N in u=r.parse(e.multiplier.den),e.symbols){var B=e.symbols[N];(B.power<0||B.group===F1&&B.power.multiplier.lessThan(0))&&(u=r.multiply(u,e.symbols[N].clone().invert()))}else u=r.parse(e.multiplier.den);return u},getNum:function(){var e,u=this.clone();return(u=u.group===Z0&&u.power.lessThan(0)?r.expand(u):u).power.greaterThan(0)&&u.group!==Z0||u.group===F1&&u.power.multiplier.greaterThan(0)?e=r.multiply(r.parse(u.multiplier.num),u.toUnitMultiplier()):u.group===Z0?(e=r.parse(u.multiplier.num),u.each(function(m){(0<m.power||m.group===F1&&0<m.power.multiplier)&&(e=r.multiply(e,m.clone()))})):e=r.parse(u.multiplier.num),e},toString:function(){return this.text()}};var y={convert:function(e,u){var m,N,B,o0;return e===0?o0=[0,1]:e<1e-6||1e20<e?(m=this.quickConversion(Number(e)))[1]<=1e20?(B=e/(N=Math.abs(e)),(o0=this.fullConversion(N.toFixed((m[1]+"").length-1)))[0]=o0[0]*B):o0=m:o0=this.fullConversion(e),o0},quickConversion:function(e){return function(u){C.isScientific(u)&&(u=l1(u));var m=(N=(u=(N="",(u=(m=typeof(m=u)!="string"?m.toString():m).charAt(0))==="-"?(m=m.substr(1,m.length),N="-"):u==="+"&&(m=m.substr(1,m.length)),{sign:N,value:m})).value.split(".")).length===1?N[0]:N[0]+N[1],N=N[1]?N[1].length:0,N=`1${"0".repeat(N)}`;return m!=="0"&&(m=m.replace(/^0+/,"")),[u.sign+m,N]}(e)},fullConversion:function(e){for(var u=!1,m=0,N=1,B=1,o0=0,x0=0,n0=e;!u;){1e4<++x0&&(u=!0);var K0=Math.floor(n0),W0=m+K0*B,V0=N+K0*o0,K0=n0-K0;K0<1e-16&&(u=!0),n0=1/K0,m=B,N=o0,B=W0,o0=V0,(Math.abs(W0/V0-e)<1e-16||30<x0)&&(u=!0)}return[W0,V0]}},v={parser:function(){var e,u=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],m=new w;for(e in m)u.indexOf(e)===-1&&delete m[e];return m.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(N){return N}}),m.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(N){return N}}),m.getBrackets()["{"].maps_to=void 0,m}(),space:"~",dot:" \\cdot ",latex:function(e,u){if((e=e.clone?e.clone():e)instanceof r.classes.Collection&&(e=e.elements),m1(e)){for(var m=[],N=0;N<e.length;N++){var B=e[N];i0(B)||(B=r.parse(B)),m.push(this.latex(B,u))}return this.brackets(m.join(", "),"square")}if(s0(e)){for(var o0=`\\begin{pmatrix}
`,N=0;N<e.elements.length;N++){for(var x0=[],n0=e.elements[N],W0=0;W0<n0.length;W0++)x0.push(this.latex(n0[W0],u));o0+=x0.join(" & "),N<e.elements.length-1&&(o0+=`\\\\
`)}return o0+="\\end{pmatrix}"}if(H0(e)){for(o0="\\left[",N=0;N<e.elements.length;N++)o0+=this.latex(e.elements[N],u)+" "+(N!==e.elements.length-1?",\\,":"");return o0+="\\right]"}if(M0(e)){for(o0="\\{",N=0;N<e.elements.length;N++)o0+=this.latex(e.elements[N],u)+" "+(N!==e.elements.length-1?",\\,":"");return o0+="\\}"}var V0,K0=u==="decimal"||u==="decimals",O1=(e=e.clone()).power,D0=A0(O1),G=e.multiplier.lessThan(0);if(e.group===p0&&K0)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),V0=K0?[String(e.multiplier.toDecimal()),""]:[e.multiplier.num,e.multiplier.den];var I1,Z1=this.value(e,D0,u,G);return D0&&O1.negate(),K0?(I1=i0(O1)?v.latex(O1,u):String(O1.toDecimal()),String(I1)==="1"&&(I1="")):I1=i0(O1)?this.latex(O1,u):this.formatFrac(O1,!0),O1=["",""],O1[D0?1:0]=I1,((G?"-":"")+this.set(V0,Z1,O1,e.group===Z0)).replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,u,m,N){var B,o0,x0,n0,W0,V0,K0=e.group,O1=e.previousGroup,D0=["",""],G=u?1:0;if(e.isInfinity)D0[G]="\\infty";else if(K0===q1||K0===p0||O1===q1||O1===p0||O1===z0){(M=this.formatSubscripts(e.value)).replace&&(M=M.replace(/(.+)_$/,"$1\\_"));var I1=String(M).split("_"),u=this.greek[I1[0]];u&&(I1[0]=u,M=I1.join("_")),(e=this.symbols[I1[0]])&&(I1[0]=e,M=I1.join("_")),D0[G]=M}else if(K0===c1||O1===c1){for(var Z1,B1,z1,w1,L1=[],I1=e.fname,c2=0;c2<e.args.length;c2++){var i2,b2=typeof(i2=e.args[c2])=="string"?i2:this.latex(i2,m);L1.push(b2)}I1===l?D0[G]="\\sqrt"+this.braces(L1.join(",")):I1===f?D0[G]=this.brackets(L1.join(","),"abs"):I1===h?D0[G]=this.brackets(L1.join(","),"parens"):I1==="limit"?D0[G]=" \\lim\\limits_{"+L1[1]+" \\to "+L1[2]+"} "+L1[0]:I1==="integrate"?D0[G]="\\int"+this.braces(L1[0])+this.braces("d"+L1[1]):I1==="defint"?D0[G]="\\int\\limits_"+this.braces(L1[1])+"^"+this.braces(L1[2])+" "+L1[0]+" d"+L1[3]:I1===d||I1===E?((i2=e.args[0]).power.equals(1)&&(i2.isComposite()||i2.isCombination())&&(L1[0]=this.brackets(L1[0])),D0[G]=L1[0]+(I1===d?"!":"!!")):I1==="floor"?D0[G]="\\left \\lfloor"+this.braces(L1[0])+"\\right \\rfloor":I1==="ceil"?D0[G]="\\left \\lceil"+this.braces(L1[0])+"\\right \\rceil":I1===N0.LOG&&1<L1.length?D0[G]="\\mathrm"+this.braces(N0.LOG)+"_"+this.braces(L1[1])+this.brackets(L1[0]):I1===N0.LOG10?D0[G]="\\mathrm"+this.braces(N0.LOG)+"_"+this.braces(10)+this.brackets(L1[0]):I1==="sum"?(Z1=L1[0],B1=L1[1],z1=L1[2],w1=L1[3],D0[G]="\\sum\\limits_{"+this.braces(B1)+"="+this.braces(z1)+"}^"+this.braces(w1)+" "+this.braces(Z1)):I1==="product"?(Z1=L1[0],B1=L1[1],z1=L1[2],w1=L1[3],D0[G]="\\prod\\limits_{"+this.braces(B1)+"="+this.braces(z1)+"}^"+this.braces(w1)+" "+this.braces(Z1)):I1==="nthroot"?D0[G]="\\sqrt["+L1[1]+"]"+this.braces(L1[0]):I1==="mod"?D0[G]=L1[0]+" \\bmod "+L1[1]:I1==="realpart"?D0[G]="\\operatorname{Re}"+this.brackets(L1[0]):I1==="imagpart"?D0[G]="\\operatorname{Im}"+this.brackets(L1[0]):(I1=I1!==""?"\\mathrm"+this.braces(I1.replace(/_/g,"\\_")):"",e.isConversion?D0[G]=I1+this.brackets(L1.join(""),"parens"):D0[G]=I1+this.brackets(L1.join(","),"parens"))}else if(e.isComposite()){for(var K1=e.collectSymbols().sort(K0===Z||O1===Z?function(D,t0){return t0.group-D.group}:function(D,t0){return D=i0(D.power)?-1:D.power,(i0(t0.power)?-1:t0.power)-D}),t=[],p=K1.length,c2=0;c2<p;c2++)t.push(v.latex(K1[c2],m));var M=t.join("+");D0[G]=e.isLinear()&&e.multiplier.equals(1)&&!N?M:this.brackets(M,"parens")}else K0!==Z0&&O1!==F1&&O1!==Z0||(K0===Z0&&e.distributeExponent(),B=[],o0=[],x0=[],n0=[],V0=W0=0,K0=function(I,D,t0){if(1<t0&&0<D.length)for(var j=D.length,C0=0;C0<j;C0++){var j0=D[C0],J0=I[j0];/^\\left\(.+\\right\)\^\{.+\}$/g.test(J0)||/^\\left\(.+\\right\)$/g.test(J0)||(I[j0]=v.brackets(J0,"parens"))}return I},e.each(function(I){var D;A0(I.power)?(D=v.latex(I.invert(),m),V0++,I.isComposite()&&(e.multiplier.den!=1&&Math.abs(I.power)==1&&(D=v.brackets(D,"parens")),x0.push(B.length)),B.push(D)):(D=v.latex(I,m),W0++,I.isComposite()&&(e.multiplier.num!=1&&Math.abs(I.power)==1&&(D=v.brackets(D,"parens")),n0.push(o0.length)),o0.push(D))}),K0(o0,n0,W0),D0[0]=o0.join(this.dot),K0(B,x0,V0),D0[1]=B.join(this.dot));return D0},set:function(W0,V0,n0,N){function B(K0){return/^\\left\(.+\\right\)$/.test(K0)}var o0;n0=n0&&this.formatP(n0),N&&(o0=n0[0],n0[0]=""),V0=this.merge(V0,n0);var x0=W0[0],n0=W0[1],W0=V0[0],V0=V0[1];return W0&&Number(x0)===1&&(x0=""),Number(n0)===1&&(n0=""),W0=this.join(x0,W0,B(W0)?"":this.dot),V0=this.join(n0,V0,B(V0)?"":this.dot),W0&&V0?(V0=this.frac(W0,V0),V0=N&&o0?this.brackets(V0)+o0:V0):W0},merge:function(e,u){for(var m=[],N=0;N<2;N++)m[N]=e[N]+u[N];return m},join:function(e,u,m){return e||u?e&&!u?e:u&&!e?u:e+m+u:""},formatSubscripts:function(e){for(var u=e.toString().split("_"),m="";1<u.length;)0<u.length&&(m="_"+this.braces(u.pop()+m));return u[0]+m},formatP:function(e){for(var u=0;u<2;u++){var m=e[u];m&&(e[u]="^"+this.braces(m))}return e},formatFrac:function(N,u){var m=N.num.toString(),N=N.den.toString();return u&&m==="1"&&N==="1"?"":N==="1"?m:this.frac(m,N)},frac:function(e,u){return"\\frac"+this.braces(e)+this.braces(u)},braces:function(e){return"{"+e+"}"},brackets:function(e,u){return u={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]}[u=u||"parens"],"\\left"+u[0]+e+"\\right"+u[1]},filterTokens:function(e){var u=[];m1(e)&&(u.type=e.type);for(var m=["\\","left","right","big","Big","large","Large"],N=0,B=e.length;N<B;N++){var o0=e[N],x0=e[N+1];o0.value==="\\"&&x0.value==="\\"?u.push(o0):m1(o0)?u.push(v.filterTokens(o0)):m.indexOf(o0.value)===-1&&u.push(o0)}return u},parse:function(e){function u(B1){return o0[B1===void 0?++n0:n0+=B1]}function m(){return v.parse(u())}function N(B1){return B1 in x0?x0[B1]:B1==="*"&&o0[n0+1].value==="&"?(u(2),","):B1==="&"?(u(),","):B1==="\\"?"],[":B1}var B="",o0=this.filterTokens(e),x0={cdot:"",times:"",infty:"Infinity"},n0=0;for(W0=o0.length;n0<W0;n0++){var W0,V0,K0,O1,D0,G,I1,Z1=o0[n0];Z1.value==="frac"?B+=m()+"/"+m():Z1.value in v.symbols?Z1.value===l&&o0[n0+1].type==="vector"&&o0[n0+2].type==="Set"?(D0=m(),B+=m()+"^"+O("1/"+D0)):B+=Z1.value+m():Z1.value==="int"?(G=m(),n0++,K0=N((K0=u().value).substring(1,K0.length)),B+="integrate"+O(G+","+K0)):Z1.value==="int_"?(W0=m(),n0++,(V0=u().value)===void 0&&(n0--,V0=m()),G=m(),(K0=(K0=u().value)===","?u().value:K0)==="differentialD"&&(n0++,K0=u().value),K0==="mathrm"&&(n0++,K0=u().value),B+="defint"+O(G+","+W0+","+V0+","+K0)):Z1.value&&Z1.value.startsWith("int_")?(W0=Z1.value.replace("int_",""),console.log("uppernow"),n0++,(V0=u().value)===void 0&&(n0--,V0=m()),G=m(),(K0=(K0=u().value)===","?u().value:K0)==="differentialD"&&(n0++,K0=u().value),K0==="mathrm"&&(n0++,K0=u().value),B+="defint"+O(G+","+W0+","+V0+","+K0)):Z1.value==="mathrm"?B+=(G=o0[++n0][0].value)+m():Z1.value==="sum_"||Z1.value==="prod_"?(O1=Z1.value==="sum_"?"sum":"product",I1=u(),n0++,D0=m(),G=m(),B+=O1+O([G,N(I1[0]),N(I1[2]),N(D0)].join(","))):Z1.value==="lim_"?(I1=u(),B+="limit"+O([m(),N(I1[0]),N(I1[2])].join(","))):Z1.value==="begin"?(I1=u(),Array.isArray(I1)&&I1[0].value==="matrix"&&(B+="matrix([")):Z1.value==="end"?(I1=u(),Array.isArray(I1)&&I1[0].value==="matrix"&&(B+="])")):Array.isArray(Z1)?B+=N(v.parse(Z1)):B+=N(Z1.value.toString())}return O(B)}};function U(e){H0(e)?this.elements=e.items.slice(0):m1(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function b(){var e=arguments,u=e.length,m=[];if(s0(e))for(x0=0;x0<u;x0++)m.push(e[x0].slice(0));else for(var N,B,o0,x0=0;x0<u;x0++)N=e[x0],H0(N)&&(N=N.elements),o0=(N=m1(N)?N:[N]).length,B&&B!==o0&&q0("Unable to create Matrix. Row dimensions do not match!"),m.push(N),B=o0;this.elements=m}function R(e){if(this.elements=[],e=H0(e)?e:U.fromArray(arguments))for(var u=e.elements,m=0,N=u.length;m<N;m++)this.add(u[m])}U.arrayPrefill=function(e,u){var m=[];u=u||0;for(var N=0;N<e;N++)m[N]=u;return m},U.fromArray=function(e){var u=new U;return u.elements=e,u},U.fromSet=function(e){return U.fromArray(e.elements)},U.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,u){i0(u)||(u=new a(u)),this.elements[e]=u},dimensions:function(){return this.elements.length},modulus:function(){return E0("SAFE",function(){return r.pow(this.dot(this.clone()),new a(.5))},void 0,this)},eql:function(e){var u=this.elements.length,m=e.elements||e;if(u!==m.length)return!1;do if(Math.abs(r.subtract(this.elements[u-1],m[u-1]).valueOf())>PRECISION)return!1;while(--u);return!0},clone:function(){for(var e=new U,u=this.elements.length,m=0;m<u;m++)e.elements.push(this.elements[m].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var u=[];return this.each(function(m,N){u.push(e(m,N))}),new U(u)},each:function(e){for(var u,m=this.elements.length,N=m;e(this.elements[u=N-m],1+u),--m;);},toUnitVector:function(){return E0("SAFE",function(){var e=this.modulus();return e.valueOf()===0?this.clone():this.map(function(u){return r.divide(u,e)})},void 0,this)},angleFrom:function(e){return E0("SAFE",function(){var u=e.elements||e;if(this.elements.length!==u.length)return null;var m=new a(0),N=new a(0),B=new a(0);this.each(function(n0,W0){m=r.add(m,r.multiply(n0,u[W0-1])),N=r.add(N,r.multiply(n0,n0)),B=r.add(B,r.multiply(u[W0-1],u[W0-1]))});var N=r.pow(N,new a(.5)),B=r.pow(B,new a(.5)),x0=r.multiply(N,B);if(x0.valueOf()===0)return null;var o0=r.divide(m,x0),x0=o0.valueOf();return x0<-1&&(o0=-1),1<x0&&(o0=1),new a(Math.acos(o0))},void 0,this)},isParallelTo:function(e){return e=this.angleFrom(e).valueOf(),e===null?null:e<=PRECISION},isAntiparallelTo:function(e){return e=this.angleFrom(e).valueOf(),e===null?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){return e=this.dot(e),e===null?null:Math.abs(e)<=PRECISION},add:function(e){return E0("SAFE",function(){var u=e.elements||e;return this.elements.length!==u.length?null:this.map(function(m,N){return r.add(m,u[N-1])})},void 0,this)},subtract:function(e){return E0("SAFE",function(){var u=e.elements||e;return this.elements.length!==u.length?null:this.map(function(m,N){return r.subtract(m,u[N-1])})},void 0,this)},multiply:function(e){return this.map(function(u){return u.clone()*e.clone()})},x:function(e){return this.multiply(e)},dot:function(e){return E0("SAFE",function(){var u=e.elements||e,m=new a(0),N=this.elements.length;if(N!==u.length)return null;for(;m=r.add(m,r.multiply(this.elements[N-1],u[N-1])),--N;);return m},void 0,this)},cross:function(e){var u=e.elements||e;if(this.elements.length!==3||u.length!==3)return null;var m=this.elements;return E0("SAFE",function(){return new U([r.subtract(r.multiply(m[1],u[2]),r.multiply(m[2],u[1])),r.subtract(r.multiply(m[2],u[0]),r.multiply(m[0],u[2])),r.subtract(r.multiply(m[0],u[1]),r.multiply(m[1],u[0]))])},void 0,this)},max:function(){for(var e,u=0,m=this.elements.length,N=m;e=N-m,Math.abs(this.elements[e].valueOf())>Math.abs(u.valueOf())&&(u=this.elements[e]),--m;);return u},magnitude:function(){var e=new a(0);return this.each(function(u){e=r.add(e,r.pow(u,new a(2)))}),r.sqrt(e)},indexOf:function(e){for(var u,m=null,N=this.elements.length,B=N;u=B-N,m===null&&this.elements[u].valueOf()===e.valueOf()&&(m=1+u),--N;);return m},text:function(e){return v1(this)},toString:function(){return this.text()},latex:function(e){for(var u=[],m=0;m<this.elements.length;m++)u.push(v.latex.call(v,this.elements[m],e));return"["+u.join(", ")+"]"}},b.identity=function(e){for(var u=new b,m=0;m<e;m++){u.elements.push([]);for(var N=0;N<e;N++)u.set(m,N,new a(m===N?1:0))}return u},b.fromArray=function(e){function u(m){return b.apply(this,m)}return u.prototype=b.prototype,new u(e)},b.zeroMatrix=function(e,u){for(var m=new b,N=0;N<e;N++)m.elements.push(U.arrayPrefill(u,new a(0)));return m},(b.prototype={custom:!0,get:function(e,u){if(this.elements[e])return this.elements[e][u]},map:function(e,u){var m=new b;return this.each(function(N,B,o0){m.set(B,o0,e.call(m,N),u)}),m},set:function(e,u,m,N){this.elements[e]||(this.elements[e]=[]),this.elements[e][u]=N||i0(m)?m:new a(m)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var u=this.rows(),m=[];if(e>this.cols()||!e)return m;for(var N=0;N<u;N++)m.push(this.elements[N][e-1]);return m},eachElement:function(e){for(var u,m=this.rows(),N=this.cols(),B=0;B<m;B++)for(u=0;u<N;u++)e.call(this,this.elements[B][u],B,u)},determinant:function(){if(!this.isSquare())return null;for(var e,u=this.toRightTriangular(),m=u.elements[0][0],N=u.elements.length-1,B=N;m=r.multiply(m,u.elements[e=B-N+1][e]),--N;);return m},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&this.determinant()===0},augment:function(e){var u=this.rows();u!==e.rows()&&q0("Cannot augment matrix. Rows don't match.");for(var m=0;m<u;m++)this.elements[m]=this.elements[m].concat(e.elements[m]);return this},clone:function(){for(var e=this.rows(),u=this.cols(),m=new b,N=0;N<e;N++){m.elements[N]=[];for(var B=0;B<u;B++){var o0=this.elements[N][B];m.elements[N][B]=i0(o0)?o0.clone():o0}}return m},invert:function(){return this.isSquare()||q0("Matrix is not square!"),E0("SAFE",function(){var e,u,m,N,B,o0,x0,n0=this.elements.length,W0=n0,V0=b.identity(n0),K0=this.augment(V0).toRightTriangular(),O1=K0.elements[0].length,D0=[];do{for(B=[],m=O1,D0[e=n0-1]=[],o0=K0.elements[e][e];x0=r.divide(K0.elements[e][N=O1-m],o0.clone()),B.push(x0),W0<=N&&D0[e].push(x0),--m;);for(K0.elements[e]=B,u=0;u<e;u++){for(B=[],m=O1;B.push(r.subtract(K0.elements[u][N=O1-m].clone(),r.multiply(K0.elements[e][N].clone(),K0.elements[u][e].clone()))),--m;);K0.elements[u]=B}}while(--n0);return b.fromArray(D0)},void 0,this)},toRightTriangular:function(){return E0("SAFE",function(){var e,u,m,N=this.clone(),B=this.elements.length,o0=B,x0=this.elements[0].length;do{if(N.elements[u=o0-B][u].valueOf()===0){for(var n0=1+u;n0<o0;n0++)if((e=N.elements[n0][u])&&e.valueOf()!==0){for(V0=[],K0=x0;V0.push(r.add(N.elements[u][m=x0-K0].clone(),N.elements[n0][m].clone())),--K0;);N.elements[u]=V0;break}}if(N.elements[u][u].valueOf()!==0)for(n0=1+u;n0<o0;n0++){for(var W0=r.divide(N.elements[n0][u].clone(),N.elements[u][u].clone()),V0=[],K0=x0;V0.push((m=x0-K0)<=u?new a(0):r.subtract(N.elements[n0][m].clone(),r.multiply(N.elements[u][m].clone(),W0.clone()))),--K0;);N.elements[n0]=V0}}while(--B);return N},void 0,this)},transpose:function(){var e,u,m,N=this.elements.length,B=this.elements[0].length,o0=new b,x0=B;do for(o0.elements[e=B-x0]=[],u=N;o0.elements[e][m=N-u]=this.elements[m][e].clone(),--u;);while(--x0);return o0},canMultiplyFromLeft:function(e){return e=(s0(e)?e.elements:e).length,this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return E0("SAFE",function(){var u=e.elements||e;if(!this.canMultiplyFromLeft(u)){if(this.sameSize(e)){for(var m=new b,N=this.rows(),B=0;B<N;B++){var o0=r.multiply(new U(this.elements[B]),new U(e.elements[B]));m.elements[B]=o0.elements}return m}return null}var x0,n0,W0,V0,K0,O1=this.elements.length,D0=O1,G=u[0].length,I1=this.elements[0].length,Z1=[];do{Z1[B=D0-O1]=[],x0=G;do for(n0=G-x0,W0=new a(0),V0=I1;W0=r.add(W0,r.multiply(this.elements[B][K0=I1-V0],u[K0][n0])),--V0;);while(Z1[B][n0]=W0,--x0)}while(--O1);return b.fromArray(Z1)},void 0,this)},add:function(e,u){var m=new b;return this.sameSize(e)&&this.eachElement(function(N,B,o0){var x0=r.add(N.clone(),e.elements[B][o0].clone());u&&(x0=u.call(m,x0,N,e.elements[B][o0])),m.set(B,o0,x0)}),m},subtract:function(e,u){var m=new b;return this.sameSize(e)&&this.eachElement(function(N,B,o0){var x0=r.subtract(N.clone(),e.elements[B][o0].clone());u&&(x0=u.call(m,x0,N,e.elements[B][o0])),m.set(B,o0,x0)}),m},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(this.rows()!==1&&this.cols()!==1)return this;var e=new U;return e.elements=this.elements,e},toString:function(e,u){for(var m=this.rows(),N=[],B=0;B<m;B++)N.push("["+this.elements[B].map(function(o0){var x0=u?o0.multiplier.toDecimal():o0.toString();return o0!==void 0?x0:""}).join(",")+"]");return"matrix"+O(N.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var u=this.cols(),m=this.elements;return W("\\begin{vmatrix}{0}\\end{vmatrix}",function(){var N,B=[];for(N in m){for(var o0=[],x0=0;x0<u;x0++)o0.push(v.latex.call(v,m[N][x0],e));B.push(o0.join(" & "))}return B.join(" \\cr ")})}}).each=b.prototype.eachElement,R.fromArray=function(e){function u(m){return R.apply(this,m)}return u.prototype=R.prototype,new u(e)},R.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var u=0;u<this.elements.length;u++){var m=this.elements[u];if(e.equals(m))return!0}return!1},each:function(e){for(var u=this.elements,m=new R,N=0,B=u.length;N<B;N++){var o0=u[N];e.call(this,o0,m,N)}return m},clone:function(){var e=new R;return this.each(function(u){e.add(u.clone())}),e},union:function(e){var u=this.clone();return e.each(function(m){u.add(m)}),u},difference:function(e){var u=this.clone();return e.each(function(m){u.remove(m)}),u},remove:function(e){for(var u=0,m=this.elements.length;u<m;u++)if(this.elements[u].equals(e))return S0(this.elements,u),!0;return!1},intersection:function(e){var u=new R,m=this;return e.each(function(N){m.contains(N)&&u.add(N)}),u},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var u=e.elements,m=0,N=u.length;m<N;m++)if(!this.contains(u[m]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var z={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":R1.gamma},gamma_incomplete:{"Math2.factorial":R1.factorial},Li:{"Math2.Ei":R1.Ei,"Math2.bigLog":R1.bigLog,Frac:T},Ci:{"Math2.factorial":R1.factorial},Ei:{"Math2.factorial":R1.factorial},Si:{"Math2.factorial":R1.factorial},Shi:{"Math2.factorial":R1.factorial},Chi:{isInt:_,nround:Y,"Math2.num_integrate":R1.num_integrate},factor:{"Math2.ifactor":R1.ifactor,Symbol:a},num_integrate:{"Math2.simpson":R1.simpson,nround:Y},fib:{even:q}},reformat:{diff:function(N,u){var m=N.args[1].toString(),N="var f = "+z.build(N.args[0].toString(),[m])+";";return u[1]+="var diff = "+R1.diff.toString()+";",u[1]+=N,["diff(f)("+m+")",u]}},getProperName:function(e){return{continued_fraction:"continuedFraction"}[e]||e},compileDependencies:function(e,u){var m,N,B=z.dependencies[e],o0=u&&u[1]?u[1]:"",x0=u&&u[0]?u[0]:{};for(m in B)typeof B[m]!="object"&&(o0+="var "+(1<(N=m.split(".")).length?N[1]:N[0])+"="+B[m]+";",x0[m]=N.pop());return[x0,o0]},getArgsDeps:function(e,u){for(var m=e.args,N=0;N<m.length;N++)e.args[N].each(function(B){B.group===c1&&(u=z.compileDependencies(B.fname,u))});return u},build:function(e,u){e=E0("PARSE2NUMBER",function(){return r.parse(e)},!0);var m=k0(e),N=[],B=[],o0=function(V0,K0){V0.fname===""&&(V0=a.unwrapPARENS(V0)),K0=K0||[];function O1(w1){return w1=w1 in Math?"Math."+w1:(w1=z.getProperName(w1),N.indexOf(w1)===-1&&(K0.push("var "+w1+" = "+R1[w1].toString()+"; "),N.push(w1)),w1),w1+=O(V0.args.map(function(L1){return o0(L1,K0)[0]}).join(","))}var D0,G,I1=[],Z1=V0.group,B1="",z1=function(c2){var L1,c2=c2===Z0?"*":"+",i2=[];for(L1 in V0.symbols){var b2=V0.symbols[L1],K1=o0(b2,K0)[0];b2.isComposite()&&(K1=O(K1)),i2.push(K1)}return c2=i2.join(c2),c2=c2&&!V0.multiplier.equals(1)?O(c2):c2};return Z1===z0?I1.push(V0.multiplier.toDecimal()):V0.multiplier.equals(-1)?B1="-":V0.multiplier.equals(1)||I1.push(V0.multiplier.toDecimal()),Z1===q1||Z1===p0?D0=V0.value:Z1===c1?(B=z.compileDependencies(V0.fname,B),B=z.getArgsDeps(V0,B),D0=z.reformat[V0.fname]?(G=z.reformat[V0.fname](V0,B),B=G[1],G[0]):O1(V0.fname)):Z1===F1?(Z1=V0.previousGroup)===z0||Z1===q1?D0=V0.value:Z1===c1?(D0=O1(V0.fname),B=z.compileDependencies(V0.fname,B),B=z.getArgsDeps(V0,B)):D0=z1(V0.previousGroup):D0=z1(V0.group),V0.group===z0||V0.power.equals(1)||(z1=o0(r.parse(V0.power)),K0.push(z1[1]),D0="Math.pow"+O(D0+","+z1[0])),D0&&I1.push(B1+D0),[I1.join("*"),K0.join("").replace(/\n+\s+/g," ")]};u&&(m=u);var x0,n0=o0(e);for(x0 in B[0]){var W0=B[0][x0];n0[1]=n0[1].replace(x0,W0),B[1]=B[1].replace(x0,W0)}return new Function(m,(B[1]||"")+n0[1]+" return "+n0[0]+";")}};a0(r.CONSTANTS),a0(r.functions),r.initConstants(),r.error||(r.error=q0),N0.LOG_FNS={log:r.functions.log,log10:r.functions.log10};function Q(e,u,m,N){var B=!1,o0=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);return o0?A2.setFunction(o0[1],o0[2].split(","),o0[3]):(e instanceof t2&&(e=e.toString()),(m=m1(m)?m:m===void 0?[]:[m]).forEach(function(x0){var n0;x0!=="numer"?(n0=r.functions[m])&&n0[1]===1&&(e=`${x0}(${e})`):B=!0}),o0=E0("PARSE2NUMBER",function(){return r.parse(e,u)},B||N0.PARSE2NUMBER),N?L[N-1]=o0:L.push(o0),new t2(o0))}var a0={allSame:d0,allNumeric:function(e){for(var u=0;u<e.length;u++)if(!w0(e[u]))return!1;return!0},arguments2Array:U0,arrayAddSlices:function(e,u){u=u||20;var m=[];m.push(e[0]);for(var N=0;N<e.length-1;N++)for(var B=e[N],o0=(e[N+1]-B)/u,x0=0;x0<u;x0++)m.push(B+=o0);return m},arrayClone:function(e){for(var u=[],m=e.length,N=0;N<m;N++)u[N]=e[N].clone();return u},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:f1,arrayEqual:function(e,u){if(e.sort(),u.sort(),e.length!==u.length)return!1;for(var m=0;m<e.length;m++)if(e[m]!==u[m])return!1;return!0},arrayUnique:o1,arrayGetVariables:function(e){for(var u=k0(e[0],null,null),m=1,N=e.length;m<N;m++)u=u.concat(k0(e[m]));return u=o1(u).sort()},arraySum:function(e,u){for(var B=new a(0),m=0;m<e.length;m++)var N=e[m],B=r.add(B,i0(N)?N:r.parse(N));return u?Number(B):B},block:E0,build:z.build,clearU:function(e){e=H.indexOf(e),e!==-1&&(H[e]=void 0)},comboSort:function(e,u){for(var m=e.length,N=[],B=0;B<e.length;B++)N.push([e[B],u[B]]);N.sort(function(n0,W0){return n0[0]-W0[0]});for(var o0=[],x0=[],B=0;B<m;B++)o0.push(N[B][0]),x0.push(N[B][1]);return[o0,x0]},compare:function(e,u,m){for(var N,B={},o0=0;o0<m.length;o0++)B[m[o0]]=new a(Math.floor(5*Math.random())+1);return E0("PARSE2NUMBER",function(){N=r.parse(e,B).equals(r.parse(u,B))}),N},convertToVector:l0,customError:$,customType:function(e){return e!==void 0&&e.custom},decompose_fn:O0,each:X0,evaluate:h0,even:q,evenFraction:J,fillHoles:function(e,u){u=u||e.length;for(var m=0;m<u;m++)e[m]||(e[m]=new a(0));return e},firstObject:f0,format:W,generatePrimes:$0,getCoeffs:function(e,u,m){var N=[];e.each(function(W0){var x0,n0=W0.contains(u)?(x0=W0.stripVar(u),r.divide(W0.clone(),x0.clone()).power.toDecimal()):(x0=W0,0),W0=N[n0];N[n0]=W0?r.add(W0,x0):x0},!0);for(var B=0;B<N.length;B++)N[B]||(N[B]=new a(0));return N},getU:function(e){for(var u="u",m=0,N=k0(e);H.indexOf(u)!==-1||N.indexOf(u)!==-1;)u="u"+m++;for(var B=0,o0=H.length;B<=o0;B++)if(!H[B]){H[B]=u;break}return u},importFunctions:function(){var e,u={};for(e in r.functions)u[e]=r.functions[e][0];return u},inBrackets:O,isArray:m1,isExpression:x1,isFraction:I0,isInt:_,isMatrix:s0,isNegative:A0,isNumericSymbol:n1,isPrime:r0,isReserved:e0,isSymbol:i0,isVariableSymbol:function(e){return e.group===q1&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:H0,keys:X,knownVariable:function(e,u){var m={};return m[e]=u,m},nroots:function(e){var u,m;if(e.group===c1&&e.fname===""?(u=a.unwrapPARENS(r.parse(e).toLinear()),m=r.parse(e.power)):e.group===p0&&(u=r.parse(e.value),m=r.parse(e.power)),u&&m&&u.group===z0&&m.group===z0&&u.multiplier.isNegative()){for(var N=[],B=a.toPolarFormArray(h0(e))[0],o0=r.arg(u),x0=m.multiplier.den.toString(),n0=m.multiplier.num.toString(),W0=0;W0<x0;W0++){var V0=h0(r.parse(W("(({0})+2*pi*({1}))/({2})",o0,W0,x0))).multiplier.toDecimal();N.push(h0(r.parse(W("(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",B,x0,N0.IMAGINARY,V0,n0))))}return U.fromArray(N)}return e.isConstant(!0,!0)?(u=e.sign(),o0=h0(e.abs()),N=[(m=r.sqrt(o0)).clone(),m.negate()],u<0&&(N=N.map(function(K0){return r.multiply(K0,a.imaginary())}))):N=[r.parse(e)],U.fromArray(N)},remove:S0,reserveNames:a0,range:function(e,u,m){var N=[];m=m||1;for(var B=e;B<=u;B++)N.push(B*m);return N},round:Y,sameSign:function(e,u){return e<0==u<0},scientificToDecimal:l1,separate:d1,stringReplace:function(e,u,m,N){return e.substr(0,u)+N+e.substr(m,e.length)},text:v1,validateName:t1,variables:k0,warn:Q0},g0={groups:N1,Symbol:a,Expression:t2,Frac:T,Vector:U,Matrix:b,Parser:w,Scientific:C,Fraction:y,Math2:R1,LaTeX:v,Utils:a0,PARSER:r,PARENTHESIS:h,Settings:N0,err:q0,bigInt:F,bigDec:_1,exceptions:H1};return Q.rpn=function(e){return r.tokenize(r.toRPN(e))},Q.convertToLaTeX=function(e,u){return r.toTeX(e,u)},Q.convertFromLaTeX=function(e){return e=v.parse(r.tokenize(e)),new t2(r.parse(e))},Q.version=function(e){if(e)try{return g0[e].version}catch{return"No module named "+e+" found!"}return"1.1.13"},Q.getWarnings=function(){return u0},Q.setConstant=function(e,u){if(t1(e),!e0(e))if(u==="delete"||u==="")delete r.CONSTANTS[e];else{if(isNaN(u))throw new A1("Constant must be a number!");r.CONSTANTS[e]=u}return this},Q.getConstant=function(e){return String(r.constant[e])},Q.setFunction=c0,Q.getCore=function(){return g0},Q.getExpression=Q.getEquation=t2.getExpression,Q.reserved=function(e){return e?H:H.join(", ")},Q.clear=function(e,u){return e==="all"?L=[]:e==="last"?L.pop():e==="first"?L.shift():(e=e?e-1:L.length,u===!0?L[e]=void 0:S0(L,e)),this},Q.flush=function(){return this.clear("all"),this},Q.expressions=function(e,u,m){for(var N=e?{}:[],B=0;B<L.length;B++){var o0=u?v.latex(L[B],m):v1(L[B],m);e?N[B+1]=o0:N.push(o0)}return N},Q.register=function(e){var u=this.getCore();if(m1(e))for(var m=0;m<e.length;m++)e&&this.register(e[m]);else if(e&&N0.exclude.indexOf(e.name)===-1){if(e.dependencies){for(m=0;m<e.dependencies.length;m++)if(!u[e.dependencies[m]])throw new Error(W("{0} requires {1} to be loaded!",e.name,e.dependencies[m]))}var N=e.parent,B=e.build.call(u);N&&(u[N]||(u[e.parent]={}),(N==="nerdamer"?this:u[N])[e.name]=B),e.visible&&(r.functions[e.name]=[B,e.numargs])}},Q.validateName=t1,Q.validVarName=function(e){try{return t1(e),H.indexOf(e)===-1}catch{return!1}},Q.supported=function(){return X(r.functions)},Q.numEquations=Q.numExpressions=function(){return L.length},Q.setVar=function(e,u){return t1(e),e in r.CONSTANTS&&q0("Cannot set value for constant "+e),u==="delete"||u===""?delete x[e]:x[e]=i0(u)?u:r.parse(u),this},Q.getVar=function(e){return x[e]},Q.clearVars=function(){return x={},this},Q.load=function(e){return e.call(this),this},Q.getVars=function(e,u){var m={};if((e=e||"text")==="object")m=x;else for(var N in x)e==="latex"?m[N]=x[N].latex(u):e==="text"&&(m[N]=x[N].text(u));return m},Q.set=function(e,u){if(typeof e=="object")for(var m in e)Q.set(m,e[m]);["SAFE"].indexOf(e)!==-1&&q0("Cannot modify setting: "+e),e==="PRECISION"?(_1.set({precision:u}),21<(N0.PRECISION=u)&&this.set("USE_BIG",!0)):e==="USE_LN"&&u===!0?(N0.LOG="LN",N0.LOG10="log",r.functions.log=N0.LOG_FNS.log10,r.functions.log[0]=function(N){return N.isConstant()?new a(Math.log10(N)):r.symfunction(N0.LOG10,[N])},r.functions.LN=N0.LOG_FNS.log,delete r.functions.log10):N0[e]=u},Q.get=function(e){return N0[e]},Q.updateAPI=function(e){for(var u in r.functions)u in Q&&!e||(Q[u]=function(m){return function(){for(var N=[].slice.call(arguments),B=0;B<N.length;B++)N[B]=r.parse(N[B]);return new t2(E0("PARSE2NUMBER",function(){return r.callfunction(m,N)}))}}(u))},Q.replaceFunction=function(e,u,B){var N=r.functions[e],B=B===void 0?N[1]:B;r.functions[e]=[u.call(void 0,N[0],g0),B]},Q.setOperator=function(e,u){r.setOperator(e,u)},Q.getOperator=function(e){return r.getOperator(e)},Q.aliasOperator=function(e,u){r.aliasOperator(e,u)},Q.tree=function(e){return r.tree(r.toRPN(r.tokenize(e)))},Q.htmlTree=function(e,u){return`<div class="tree">
    <ul>
        <li>
`+this.tree(e).toHTML(3,u)+`
        </li>
    </ul>
</div>`},Q.addPeeker=function(e,u){r.peekers[e]&&r.peekers[e].push(u)},Q.removePeeker=function(e,u){S0(r.peekers[e],u)},Q.parse=function(e){return String(e).split(";").map(function(u){return r.parse(u)})},Q.updateAPI(),Q}({bigInt:function(){var A=function(r){var F=1e7,_1=7,N1=9007199254740992,T0=A0(N1),X1=Math.log(N1);function N0(_,S){return _===void 0?N0[0]:S===void 0||+S==10?n1(_):i0(_,S)}function $(_,S){this.value=_,this.sign=S,this.isSmall=!1}function e0(_){this.value=_,this.sign=_<0,this.isSmall=!0}function x1(_){return-N1<_&&_<N1}function A0(_){return _<1e7?[_]:_<1e14?[_%1e7,Math.floor(_/1e7)]:[_%1e7,Math.floor(_/1e7)%1e7,Math.floor(_/1e14)]}function f1(_){X0(_);var S=_.length;if(S<4&&d(_,T0)<0)switch(S){case 0:return 0;case 1:return _[0];case 2:return _[0]+_[1]*F;default:return _[0]+(_[1]+_[2]*F)*F}return _}function X0(_){for(var S=_.length;_[--S]===0;);_.length=S+1}function o1(_){for(var S=new Array(_),O=-1;++O<_;)S[O]=0;return S}function $0(_){return 0<_?Math.floor(_):Math.ceil(_)}function z0(_,S){for(var O,W=_.length,X=S.length,f0=new Array(W),c0=0,O0=F,Y=0;Y<X;Y++)O=_[Y]+S[Y]+c0,f0[Y]=O-(c0=O0<=O?1:0)*O0;for(;Y<W;)O=_[Y]+c0,f0[Y++]=O-(c0=O===O0?1:0)*O0;return 0<c0&&f0.push(c0),f0}function p0(_,S){return _.length>=S.length?z0(_,S):z0(S,_)}function q1(_,S){for(var O,W=_.length,X=new Array(W),f0=F,c0=0;c0<W;c0++)O=_[c0]-f0+S,S=Math.floor(O/f0),X[c0]=O-S*f0,S+=1;for(;0<S;)X[c0++]=S%f0,S=Math.floor(S/f0);return X}function F1(_,S){for(var O,W=_.length,X=S.length,f0=new Array(W),c0=0,O0=F,Y=0;Y<X;Y++)c0=(O=_[Y]-c0-S[Y])<0?(O+=O0,1):0,f0[Y]=O;for(Y=X;Y<W;Y++){if(!((O=_[Y]-c0)<0)){f0[Y++]=O;break}O+=O0,f0[Y]=O}for(;Y<W;Y++)f0[Y]=_[Y];return X0(f0),f0}function c1(_,S,O){for(var W,X=_.length,f0=new Array(X),c0=-S,O0=F,Y=0;Y<X;Y++)W=_[Y]+c0,c0=Math.floor(W/O0),f0[Y]=(W%=O0)<0?W+O0:W;return typeof(f0=f1(f0))=="number"?new e0(f0=O?-f0:f0):new $(f0,O)}function b1(_,S){for(var O,W,X=_.length,f0=S.length,c0=o1(X+f0),O0=F,Y=0;Y<X;++Y)for(var q=_[Y],J=0;J<f0;++J)O=q*S[J]+c0[Y+J],W=Math.floor(O/O0),c0[Y+J]=O-W*O0,c0[Y+J+1]+=W;return X0(c0),c0}function Z0(_,S){for(var O,W=_.length,X=new Array(W),f0=F,c0=0,O0=0;O0<W;O0++)O=_[O0]*S+c0,c0=Math.floor(O/f0),X[O0]=O-c0*f0;for(;0<c0;)X[O0++]=c0%f0,c0=Math.floor(c0/f0);return X}function Z(_,S){for(var O=[];0<S--;)O.push(0);return O.concat(_)}function i(_,S,O){return new $(_<F?Z0(S,_):b1(S,A0(_)),O)}function h(_){for(var S,O=_.length,W=o1(O+O),X=F,f0=0;f0<O;f0++){for(var c0,O0=0-(c0=_[f0])*c0,Y=f0;Y<O;Y++)S=c0*_[Y]*2+W[f0+Y]+O0,O0=Math.floor(S/X),W[f0+Y]=S-O0*X;W[f0+O]=O0}return X0(W),W}function l(_,S){for(var O,W=_.length,X=o1(W),f0=F,c0=0,O0=W-1;0<=O0;--O0)c0=(O=c0*f0+_[O0])-(O=$0(O/S))*S,X[O0]=0|O;return[X,0|c0]}function f(Y,S){var c0=n1(S),O=Y.value,W=c0.value;if(W===0)throw new Error("Cannot divide by zero");if(Y.isSmall)return c0.isSmall?[new e0($0(O/W)),new e0(O%W)]:[N0[0],Y];if(c0.isSmall){if(W===1)return[Y,N0[0]];if(W==-1)return[Y.negate(),N0[0]];var X=Math.abs(W);if(X<F){var f0=f1((O0=l(O,X))[0]),S=O0[1];return Y.sign&&(S=-S),typeof f0=="number"?[new e0(f0=Y.sign!==c0.sign?-f0:f0),new e0(S)]:[new $(f0,Y.sign!==c0.sign),new e0(S)]}W=A0(X)}if(X=d(O,W),X===-1)return[N0[0],Y];if(X===0)return[N0[Y.sign===c0.sign?1:-1],N0[0]];f0=(O0=(O.length+W.length<=200?function(q,J){var k,S0,E0,U0,h0,l0,F0,L0=q.length,_0=J.length,y0=F,G0=o1(J.length),b0=J[_0-1],R0=Math.ceil(y0/(2*b0)),i1=Z0(q,R0),A1=Z0(J,R0);for(i1.length<=L0&&i1.push(0),A1.push(0),b0=A1[_0-1],S0=L0-_0;0<=S0;S0--){for(k=y0-1,i1[S0+_0]!==b0&&(k=Math.floor((i1[S0+_0]*y0+i1[S0+_0-1])/b0)),l0=A1.length,h0=U0=E0=0;h0<l0;h0++)E0+=k*A1[h0],F0=Math.floor(E0/y0),U0+=i1[S0+h0]-(E0-F0*y0),E0=F0,U0=U0<0?(i1[S0+h0]=U0+y0,-1):(i1[S0+h0]=U0,0);for(;U0!==0;){for(--k,h0=E0=0;h0<l0;h0++)E0=(E0+=i1[S0+h0]-y0+A1[h0])<0?(i1[S0+h0]=E0+y0,0):(i1[S0+h0]=E0,1);U0+=E0}G0[S0]=k}return i1=l(i1,R0)[0],[f1(G0),f1(i1)]}:function(q,J){for(var k,S0,E0,U0,h0,l0=q.length,F0=J.length,L0=[],_0=[],y0=F;l0;)if(_0.unshift(q[--l0]),X0(_0),d(_0,J)<0)L0.push(0);else{for(E0=_0[(S0=_0.length)-1]*y0+_0[S0-2],U0=J[F0-1]*y0+J[F0-2],F0<S0&&(E0=(E0+1)*y0),k=Math.ceil(E0/U0);!(d(h0=Z0(J,k),_0)<=0)&&--k;);L0.push(k),_0=F1(_0,h0)}return L0.reverse(),[f1(L0),f1(_0)]})(O,W))[0];var c0=Y.sign!==c0.sign,O0=O0[1],Y=Y.sign;return[f0=typeof f0=="number"?new e0(f0=c0?-f0:f0):new $(f0,c0),O0=typeof O0=="number"?new e0(O0=Y?-O0:O0):new $(O0,Y)]}function d(_,S){if(_.length!==S.length)return _.length>S.length?1:-1;for(var O=_.length-1;0<=O;O--)if(_[O]!==S[O])return _[O]>S[O]?1:-1;return 0}function E(_){return _=_.abs(),!_.isUnit()&&(!!(_.equals(2)||_.equals(3)||_.equals(5))||!(_.isEven()||_.isDivisibleBy(3)||_.isDivisibleBy(5))&&(!!_.lesser(49)||void 0))}function L(_,S){for(var O,W,X,f0=_.prev(),c0=f0,O0=0;c0.isEven();)c0=c0.divide(2),O0++;e:for(W=0;W<S.length;W++)if(!_.lesser(S[W])&&!(X=A(S[W]).modPow(c0,_)).equals(N0[1])&&!X.equals(f0)){for(O=O0-1;O!=0;O--){if((X=X.square().mod(_)).isUnit())return!1;if(X.equals(f0))continue e}return!1}return!0}$.prototype=Object.create(N0.prototype),e0.prototype=Object.create(N0.prototype),$.prototype.plus=$.prototype.add=function(W){var S=n1(W);if(this.sign!==S.sign)return this.subtract(S.negate());var O=this.value,W=S.value;return S.isSmall?new $(q1(O,Math.abs(W)),this.sign):new $(p0(O,W),this.sign)},e0.prototype.plus=e0.prototype.add=function(_){var S=n1(_),O=this.value;if(O<0!==S.sign)return this.subtract(S.negate());if(_=S.value,S.isSmall){if(x1(O+_))return new e0(O+_);_=A0(Math.abs(_))}return new $(q1(_,Math.abs(O)),O<0)},$.prototype.minus=$.prototype.subtract=function(X){var S=n1(X);if(this.sign!==S.sign)return this.add(S.negate());var O,W=this.value,X=S.value;return S.isSmall?c1(W,Math.abs(X),this.sign):(S=W,W=X,X=this.sign,0<=d(S,W)?O=F1(S,W):(O=F1(W,S),X=!X),typeof(O=f1(O))=="number"?new e0(O=X?-O:O):new $(O,X))},e0.prototype.minus=e0.prototype.subtract=function(_){var S=n1(_),O=this.value;return O<0!==S.sign?this.add(S.negate()):(_=S.value,S.isSmall?new e0(O-_):c1(_,Math.abs(O),0<=O))},$.prototype.negate=function(){return new $(this.value,!this.sign)},e0.prototype.negate=function(){var _=this.sign,S=new e0(-this.value);return S.sign=!_,S},$.prototype.abs=function(){return new $(this.value,!1)},e0.prototype.abs=function(){return new e0(Math.abs(this.value))},$.prototype.times=$.prototype.multiply=function(f0){var S,O=n1(f0),W=this.value,X=O.value,f0=this.sign!==O.sign;if(O.isSmall){if(X===0)return N0[0];if(X===1)return this;if(X===-1)return this.negate();if((S=Math.abs(X))<F)return new $(Z0(W,S),f0);X=A0(S)}return O=W.length,S=X.length,new $((0<-.012*O-.012*S+15e-6*O*S?function c0(S0,E0){if((h0=Math.max(S0.length,E0.length))<=30)return b1(S0,E0);var h0=Math.ceil(h0/2),q=S0.slice(h0),J=S0.slice(0,h0),U0=E0.slice(h0),k=E0.slice(0,h0),S0=c0(J,k),E0=c0(q,U0),U0=c0(p0(J,q),p0(k,U0)),h0=p0(p0(S0,Z(F1(F1(U0,S0),E0),h0)),Z(E0,2*h0));return X0(h0),h0}:b1)(W,X),f0)},e0.prototype._multiplyBySmall=function(_){return x1(_.value*this.value)?new e0(_.value*this.value):i(Math.abs(_.value),A0(Math.abs(this.value)),this.sign!==_.sign)},$.prototype._multiplyBySmall=function(_){return _.value===0?N0[0]:_.value===1?this:_.value===-1?this.negate():i(Math.abs(_.value),this.value,this.sign!==_.sign)},e0.prototype.times=e0.prototype.multiply=function(_){return n1(_)._multiplyBySmall(this)},$.prototype.square=function(){return new $(h(this.value),!1)},e0.prototype.square=function(){var _=this.value*this.value;return x1(_)?new e0(_):new $(h(A0(Math.abs(this.value))),!1)},e0.prototype.divmod=$.prototype.divmod=function(_){return _=f(this,_),{quotient:_[0],remainder:_[1]}},e0.prototype.over=e0.prototype.divide=$.prototype.over=$.prototype.divide=function(_){return f(this,_)[0]},e0.prototype.remainder=e0.prototype.mod=$.prototype.remainder=$.prototype.mod=function(_){return f(this,_)[1]},$.prototype.pow=function(f0){var S,O,W,X=n1(f0),f0=this.value,c0=X.value;if(c0===0)return N0[1];if(f0===0)return N0[0];if(f0===1)return N0[1];if(f0===-1)return X.isEven()?N0[1]:N0[-1];if(X.sign)return N0[0];if(!X.isSmall)throw new Error("The exponent "+X.toString()+" is too large.");if(this.isSmall&&x1(S=Math.pow(f0,c0)))return new e0($0(S));for(O=this,W=N0[1];!0&c0&&(W=W.times(O),--c0),c0!==0;)c0/=2,O=O.square();return W},e0.prototype.pow=$.prototype.pow,e0.prototype.modPow=$.prototype.modPow=function(_,S){if(_=n1(_),(S=n1(S)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var O=N0[1],W=this.mod(S);_.isPositive();){if(W.isZero())return N0[0];_.isOdd()&&(O=O.multiply(W).mod(S)),_=_.divide(2),W=W.square().mod(S)}return O},$.prototype.compareAbs=function(W){var S=n1(W),O=this.value,W=S.value;return S.isSmall?1:d(O,W)},e0.prototype.compareAbs=function(W){var S=n1(W),O=Math.abs(this.value),W=S.value;return S.isSmall?O===(W=Math.abs(W))?0:W<O?1:-1:-1},$.prototype.compareTo=$.prototype.compare=function(W){if(W===1/0)return-1;if(W===-1/0)return 1;var S=n1(W),O=this.value,W=S.value;return this.sign!==S.sign?S.sign?1:-1:S.isSmall?this.sign?-1:1:d(O,W)*(this.sign?-1:1)},e0.prototype.compareTo=e0.prototype.compare=function(W){if(W===1/0)return-1;if(W===-1/0)return 1;var S=n1(W),O=this.value,W=S.value;return S.isSmall?O==W?0:W<O?1:-1:O<0!==S.sign?O<0?-1:1:O<0?1:-1},e0.prototype.eq=e0.prototype.equals=$.prototype.eq=$.prototype.equals=function(_){return this.compare(_)===0},e0.prototype.neq=e0.prototype.notEquals=$.prototype.neq=$.prototype.notEquals=function(_){return this.compare(_)!==0},e0.prototype.gt=e0.prototype.greater=$.prototype.gt=$.prototype.greater=function(_){return 0<this.compare(_)},e0.prototype.lt=e0.prototype.lesser=$.prototype.lt=$.prototype.lesser=function(_){return this.compare(_)<0},e0.prototype.geq=e0.prototype.greaterOrEquals=$.prototype.geq=$.prototype.greaterOrEquals=function(_){return 0<=this.compare(_)},e0.prototype.leq=e0.prototype.lesserOrEquals=$.prototype.leq=$.prototype.lesserOrEquals=function(_){return this.compare(_)<=0},$.prototype.isEven=function(){return(1&this.value[0])==0},e0.prototype.isEven=function(){return(1&this.value)==0},$.prototype.isOdd=function(){return(1&this.value[0])==1},e0.prototype.isOdd=function(){return(1&this.value)==1},$.prototype.isPositive=function(){return!this.sign},e0.prototype.isPositive=function(){return 0<this.value},$.prototype.isNegative=function(){return this.sign},e0.prototype.isNegative=function(){return this.value<0},$.prototype.isUnit=function(){return!1},e0.prototype.isUnit=function(){return Math.abs(this.value)===1},$.prototype.isZero=function(){return!1},e0.prototype.isZero=function(){return this.value===0},e0.prototype.isDivisibleBy=$.prototype.isDivisibleBy=function(O){var S=n1(O),O=S.value;return O!==0&&(O===1||(O===2?this.isEven():this.mod(S).equals(N0[0])))},e0.prototype.isPrime=$.prototype.isPrime=function(_){var O=E(this);if(O!==r)return O;var S=this.abs(),O=S.bitLength();if(O<=64)return L(S,[2,325,9375,28178,450775,9780504,1795265022]);for(var O=Math.log(2)*O,W=Math.ceil(_===!0?2*Math.pow(O,2):O),X=[],f0=0;f0<W;f0++)X.push(A(f0+2));return L(S,X)},e0.prototype.isProbablePrime=$.prototype.isProbablePrime=function(_){var S=E(this);if(S!==r)return S;for(var O=this.abs(),W=_===r?5:_,X=[],f0=0;f0<W;f0++)X.push(A.randBetween(2,O.minus(2)));return L(O,X)},e0.prototype.modInv=$.prototype.modInv=function(_){for(var S,O,W=A.zero,X=A.one,f0=n1(_),c0=this.abs();!c0.equals(A.zero);)S=f0.divide(c0),O=f0,f0=c0,X=W.subtract(S.multiply(W=X)),c0=O.subtract(S.multiply(c0));if(!f0.equals(1))throw new Error(this.toString()+" and "+_.toString()+" are not co-prime");return W.compare(0)===-1&&(W=W.add(_)),this.isNegative()?W.negate():W},$.prototype.next=function(){var _=this.value;return this.sign?c1(_,1,this.sign):new $(q1(_,1),this.sign)},e0.prototype.next=function(){var _=this.value;return _+1<N1?new e0(_+1):new $(T0,!1)},$.prototype.prev=function(){var _=this.value;return this.sign?new $(q1(_,1),!0):c1(_,1,this.sign)},e0.prototype.prev=function(){var _=this.value;return-N1<_-1?new e0(_-1):new $(T0,!0)};for(var x=[1];2*x[x.length-1]<=F;)x.push(2*x[x.length-1]);var H=x.length,u0=x[H-1];function q0(_){return(typeof _=="number"||typeof _=="string")&&+Math.abs(_)<=F||_ instanceof $&&_.value.length<=1}function d0(_,S,O){S=n1(S);for(var W=_.isNegative(),X=S.isNegative(),f0=W?_.not():_,c0=X?S.not():S,O0=0,Y=0,q=null,J=null,k=[];!f0.isZero()||!c0.isZero();)O0=(q=f(f0,u0))[1].toJSNumber(),W&&(O0=u0-1-O0),Y=(J=f(c0,u0))[1].toJSNumber(),f0=q[0],c0=J[0],k.push(O(O0,Y=X?u0-1-Y:Y));for(var S0=O(W?1:0,X?1:0)!==0?A(-1):A(0),E0=k.length-1;0<=E0;--E0)S0=S0.multiply(u0).add(A(k[E0]));return S0}e0.prototype.shiftLeft=$.prototype.shiftLeft=function(_){if(!q0(_))throw new Error(String(_)+" is too large for shifting.");if((_=+_)<0)return this.shiftRight(-_);var S=this;if(S.isZero())return S;for(;H<=_;)S=S.multiply(u0),_-=H-1;return S.multiply(x[_])},e0.prototype.shiftRight=$.prototype.shiftRight=function(_){var S;if(!q0(_))throw new Error(String(_)+" is too large for shifting.");if((_=+_)<0)return this.shiftLeft(-_);for(var O=this;H<=_;){if(O.isZero()||O.isNegative()&&O.isUnit())return O;O=(S=f(O,u0))[1].isNegative()?S[0].prev():S[0],_-=H-1}return(S=f(O,x[_]))[1].isNegative()?S[0].prev():S[0]},e0.prototype.not=$.prototype.not=function(){return this.negate().prev()},e0.prototype.and=$.prototype.and=function(_){return d0(this,_,function(S,O){return S&O})},e0.prototype.or=$.prototype.or=function(_){return d0(this,_,function(S,O){return S|O})},e0.prototype.xor=$.prototype.xor=function(_){return d0(this,_,function(S,O){return S^O})};var Q0=1<<30,t1=(F&-F)*(F&-F)|Q0;function l1(_){return _=_.value,_=typeof _=="number"?_|Q0:_[0]+_[1]*F|t1,_&-_}function r0(_,S){return _=n1(_),S=n1(S),_.greater(S)?_:S}function w0(_,S){return _=n1(_),S=n1(S),_.lesser(S)?_:S}function I0(_,S){if(_=n1(_).abs(),S=n1(S).abs(),_.equals(S))return _;if(_.isZero())return S;if(S.isZero())return _;for(var O,W,X=N0[1];_.isEven()&&S.isEven();)O=Math.min(l1(_),l1(S)),_=_.divide(O),S=S.divide(O),X=X.multiply(O);for(;_.isEven();)_=_.divide(l1(_));do for(;S.isEven();)S=S.divide(l1(S));while(_.greater(S)&&(W=S,S=_,_=W),!(S=S.subtract(_)).isZero());return X.isUnit()?_:_.multiply(X)}e0.prototype.bitLength=$.prototype.bitLength=function(){var _=this;return(_=_.compareTo(A(0))<0?_.negate().subtract(A(1)):_).compareTo(A(0))===0?A(0):A(function S(O,W){if(W.compareTo(O)<=0){var f0=S(O,W.square(W)),X=f0.p,f0=f0.e,W=X.multiply(W);return W.compareTo(O)<=0?{p:W,e:2*f0+1}:{p:X,e:2*f0}}return{p:A(1),e:0}}(_,A(2)).e).add(A(1))};var i0=function(_,S){for(var O=_.length,W=Math.abs(S),X=0;X<O;X++){var f0=_[X].toLowerCase();if(f0!=="-"&&/[a-z0-9]/.test(f0)){if(/[0-9]/.test(f0)&&W<=+f0){if(f0!=="1"||W!==1)throw new Error(f0+" is not a valid digit in base "+S+".")}else if(f0.charCodeAt(0)-87>=W)throw new Error(f0+" is not a valid digit in base "+S+".")}}if(2<=S&&S<=36&&O<=X1/Math.log(S)){var O0=parseInt(_,S);if(isNaN(O0))throw new Error(f0+" is not a valid digit in base "+S+".");return new e0(parseInt(_,S))}S=n1(S);var c0=[],O0=_[0]==="-";for(X=O0?1:0;X<_.length;X++){var Y=(f0=_[X].toLowerCase()).charCodeAt(0);if(48<=Y&&Y<=57)c0.push(n1(f0));else if(97<=Y&&Y<=122)c0.push(n1(f0.charCodeAt(0)-87));else{if(f0!=="<")throw new Error(f0+" is not a valid character");for(Y=X;_[++X]!==">";);c0.push(n1(_.slice(Y+1,X)))}}return k0(c0,S,O0)};function k0(_,S,O){for(var W=N0[0],X=N0[1],f0=_.length-1;0<=f0;f0--)W=W.add(_[f0].times(X)),X=X.times(S);return O?W.negate():W}function d1(_){return _<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(_):"<"+_+">"}function H0(_,S){if((S=A(S)).isZero()){if(_.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(S.equals(-1)){if(_.isZero())return{value:[0],isNegative:!1};if(_.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-_)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var O=Array.apply(null,Array(+_-1)).map(Array.prototype.valueOf,[0,1]);return O.unshift([1]),{value:[].concat.apply([],O),isNegative:!1}}if(O=!1,_.isNegative()&&S.isPositive()&&(O=!0,_=_.abs()),S.equals(1))return _.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+_)).map(Number.prototype.valueOf,1),isNegative:O};for(var W=[],X=_;X.isNegative()||0<=X.compareAbs(S);){var X=(f0=X.divmod(S)).quotient,f0=f0.remainder;f0.isNegative()&&(f0=S.minus(f0).abs(),X=X.next()),W.push(f0.toJSNumber())}return W.push(X.toJSNumber()),{value:W.reverse(),isNegative:O}}function s0(_,S){return S=H0(_,S),(S.isNegative?"-":"")+S.value.map(d1).join("")}function M0(_){if(x1(+_)){var S=+_;if(S===$0(S))return new e0(S);throw new Error("Invalid integer: "+_)}var O=_[0]==="-",W=(_=O?_.slice(1):_).split(/e/i);if(2<W.length)throw new Error("Invalid integer: "+W.join("e"));if(W.length===2){var X=W[1];if((X=+(X=X[0]==="+"?X.slice(1):X))!==$0(X)||!x1(X))throw new Error("Invalid integer: "+X+" is not a valid exponent.");if(S=W[0],W=S.indexOf("."),0<=W&&(X-=S.length-W-1,S=S.slice(0,W)+S.slice(W+1)),X<0)throw new Error("Cannot include negative exponent part for integers");_=S+=new Array(X+1).join("0")}if(!/^([0-9][0-9]*)$/.test(_))throw new Error("Invalid integer: "+_);for(var f0=[],c0=_.length,O0=_1,Y=c0-O0;0<c0;)f0.push(+_.slice(Y,c0)),(Y-=O0)<0&&(Y=0),c0-=O0;return X0(f0),new $(f0,O)}function n1(_){return typeof _=="number"?function(S){if(x1(S)){if(S!==$0(S))throw new Error(S+" is not an integer.");return new e0(S)}return M0(S.toString())}(_):typeof _=="string"?M0(_):_}$.prototype.toArray=function(_){return H0(this,_)},e0.prototype.toArray=function(_){return H0(this,_)},$.prototype.toString=function(_){if((_=_===r?10:_)!==10)return s0(this,_);for(var S,O=this.value,W=O.length,X=String(O[--W]);0<=--W;)S=String(O[W]),X+="0000000".slice(S.length)+S;return(this.sign?"-":"")+X},e0.prototype.toString=function(_){return(_=_===r?10:_)!=10?s0(this,_):String(this.value)},$.prototype.toJSON=e0.prototype.toJSON=function(){return this.toString()},$.prototype.toJSNumber=$.prototype.valueOf=function(){return parseInt(this.toString(),10)},e0.prototype.toJSNumber=e0.prototype.valueOf=function(){return this.value};for(var m1=0;m1<1e3;m1++)N0[m1]=new e0(m1),0<m1&&(N0[-m1]=new e0(-m1));return N0.one=N0[1],N0.zero=N0[0],N0.minusOne=N0[-1],N0.max=r0,N0.min=w0,N0.gcd=I0,N0.lcm=function(_,S){return _=n1(_).abs(),S=n1(S).abs(),_.divide(I0(_,S)).multiply(S)},N0.isInstance=function(_){return _ instanceof $||_ instanceof e0},N0.randBetween=function(_,S){var O=w0(_=n1(_),S=n1(S)),W=r0(_,S).subtract(O).add(1);if(W.isSmall)return O.add(Math.floor(Math.random()*W));for(var X=[],f0=!0,c0=W.value.length-1;0<=c0;c0--){var O0=f0?W.value[c0]:F,Y=$0(Math.random()*O0);X.unshift(Y),Y<O0&&(f0=!1)}return X=f1(X),O.add(typeof X=="number"?new e0(X):new $(X,!1))},N0.fromArray=function(_,S,O){return k0(_.map(n1),n1(S||10),O)},N0}();return W2.hasOwnProperty("exports")&&(W2.exports=A),A}(),bigDec:function(A){var r,F,_1,N1,T0=9e15,X1=1e9,N0="0123456789abcdef",$="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",e0="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",x1={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-T0,maxE:T0,crypto:!1},A0=!0,f1="[DecimalError] ",X0=f1+"Invalid argument: ",o1=f1+"Precision limit exceeded",$0=f1+"crypto unavailable",z0=Math.floor,p0=Math.pow,q1=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,F1=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,c1=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,b1=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Z0=1e7,Z=7,i=$.length-1,h=e0.length-1,l={name:"[object Decimal]"};function f(a){var w,y,v,U=a.length-1,b="",R=a[0];if(0<U){for(b+=R,w=1;w<U;w++)v=a[w]+"",(y=Z-v.length)&&(b+=I0(y)),b+=v;R=a[w],(y=Z-(v=R+"").length)&&(b+=I0(y))}else if(R===0)return"0";for(;R%10==0;)R/=10;return b+R}function d(a,w,y){if(a!==~~a||a<w||y<a)throw Error(X0+a)}function E(a,w,y,v){for(var U,b,R=a[0];10<=R;R/=10)--w;return--w<0?(w+=Z,U=0):(U=Math.ceil((w+1)/Z),w%=Z),R=p0(10,Z-w),b=a[U]%R|0,v==null?w<3?(w==0?b=b/100|0:w==1&&(b=b/10|0),y<4&&b==99999||3<y&&b==49999||b==5e4||b==0):(y<4&&b+1==R||3<y&&b+1==R/2)&&(a[U+1]/R/100|0)==p0(10,w-2)-1||(b==R/2||b==0)&&(a[U+1]/R/100|0)==0:w<4?(w==0?b=b/1e3|0:w==1?b=b/100|0:w==2&&(b=b/10|0),(v||y<4)&&b==9999||!v&&3<y&&b==4999):((v||y<4)&&b+1==R||!v&&3<y&&b+1==R/2)&&(a[U+1]/R/1e3|0)==p0(10,w-3)-1}function L(a,w,y){for(var v,U,b=[0],R=0,z=a.length;R<z;){for(U=b.length;U--;)b[U]*=w;for(b[0]+=N0.indexOf(a.charAt(R++)),v=0;v<b.length;v++)b[v]>y-1&&(b[v+1]===void 0&&(b[v+1]=0),b[v+1]+=b[v]/y|0,b[v]%=y)}return b.reverse()}l.absoluteValue=l.abs=function(){var a=new this.constructor(this);return a.s<0&&(a.s=1),d0(a)},l.ceil=function(){return d0(new this.constructor(this),this.e+1,2)},l.comparedTo=l.cmp=function(a){var w,y,v=this,U=v.d,b=(a=new v.constructor(a)).d,R=v.s,z=a.s;if(!U||!b)return R&&z?R!==z?R:U===b?0:!U^R<0?1:-1:NaN;if(!U[0]||!b[0])return U[0]?R:b[0]?-z:0;if(R!==z)return R;if(v.e!==a.e)return v.e>a.e^R<0?1:-1;for(w=0,y=(v=U.length)<(a=b.length)?v:a;w<y;++w)if(U[w]!==b[w])return U[w]>b[w]^R<0?1:-1;return v===a?0:a<v^R<0?1:-1},l.cosine=l.cos=function(){var a,w,y=this,v=y.constructor;return y.d?y.d[0]?(a=v.precision,w=v.rounding,v.precision=a+Math.max(y.e,y.sd())+Z,v.rounding=1,y=function(U,b){var R,z=b.d.length,z=z<32?(1/_(4,R=Math.ceil(z/3))).toString():(R=16,"2.3283064365386962890625e-10");U.precision+=R,b=m1(U,1,b.times(z),new U(1));for(var Q=R;Q--;){var a0=b.times(b);b=a0.times(a0).minus(a0).times(8).plus(1)}return U.precision-=R,b}(v,S(v,y)),v.precision=a,v.rounding=w,d0(N1==2||N1==3?y.neg():y,a,w,!0)):new v(1):new v(NaN)},l.cubeRoot=l.cbrt=function(){var a,w,y,v,U,b,R,z,Q,a0,g0=this,e=g0.constructor;if(!g0.isFinite()||g0.isZero())return new e(g0);for(A0=!1,(b=g0.s*p0(g0.s*g0,.3333333333333333))&&Math.abs(b)!=1/0?v=new e(b.toString()):(y=f(g0.d),(b=((a=g0.e)-y.length+1)%3)&&(y+=b==1||b==-2?"0":"00"),b=p0(y,.3333333333333333),a=z0((a+1)/3)-(a%3==(a<0?-1:2)),(v=new e(y=b==1/0?"5e"+a:(y=b.toExponential()).slice(0,y.indexOf("e")+1)+a)).s=g0.s),R=(a=e.precision)+3;;)if(a0=(Q=(z=v).times(z).times(z)).plus(g0),v=x(a0.plus(g0).times(z),a0.plus(Q),R+2,1),f(z.d).slice(0,R)===(y=f(v.d)).slice(0,R)){if((y=y.slice(R-3,R+1))!="9999"&&(U||y!="4999")){+y&&(+y.slice(1)||y.charAt(0)!="5")||(d0(v,a+1,1),w=!v.times(v).times(v).eq(g0));break}if(!U&&(d0(z,a+1,0),z.times(z).times(z).eq(g0))){v=z;break}R+=4,U=1}return A0=!0,d0(v,a,e.rounding,w)},l.decimalPlaces=l.dp=function(){var a,w=this.d,y=NaN;if(w){if(y=((a=w.length-1)-z0(this.e/Z))*Z,a=w[a])for(;a%10==0;a/=10)y--;y<0&&(y=0)}return y},l.dividedBy=l.div=function(a){return x(this,new this.constructor(a))},l.dividedToIntegerBy=l.divToInt=function(a){var w=this.constructor;return d0(x(this,new w(a),0,1,1),w.precision,w.rounding)},l.equals=l.eq=function(a){return this.cmp(a)===0},l.floor=function(){return d0(new this.constructor(this),this.e+1,3)},l.greaterThan=l.gt=function(a){return 0<this.cmp(a)},l.greaterThanOrEqualTo=l.gte=function(a){return a=this.cmp(a),a==1||a===0},l.hyperbolicCosine=l.cosh=function(){var a,w,y,v=(z=this).constructor,U=new v(1);if(!z.isFinite())return new v(z.s?1/0:NaN);if(z.isZero())return U;w=v.precision,y=v.rounding,v.precision=w+Math.max(z.e,z.sd())+4,v.rounding=1;for(var b,R=(R=z.d.length)<32?(1/_(4,a=Math.ceil(R/3))).toString():(a=16,"2.3283064365386962890625e-10"),z=m1(v,1,z.times(R),new v(1),!0),Q=a,a0=new v(8);Q--;)b=z.times(z),z=U.minus(b.times(a0.minus(b.times(a0))));return d0(z,v.precision=w,v.rounding=y,!0)},l.hyperbolicSine=l.sinh=function(){var a,w,y,v=(R=this).constructor;if(!R.isFinite()||R.isZero())return new v(R);if(a=v.precision,w=v.rounding,v.precision=a+Math.max(R.e,R.sd())+4,v.rounding=1,(y=R.d.length)<3)R=m1(v,2,R,R,!0);else for(var U,b=16<(b=1.4*Math.sqrt(y))?16:0|b,R=m1(v,2,R=R.times(1/_(5,b)),R,!0),z=new v(5),Q=new v(16),a0=new v(20);b--;)U=R.times(R),R=R.times(z.plus(U.times(Q.times(U).plus(a0))));return d0(R,v.precision=a,v.rounding=w,!0)},l.hyperbolicTangent=l.tanh=function(){var a,w,y=this,v=y.constructor;return y.isFinite()?y.isZero()?new v(y):(a=v.precision,w=v.rounding,v.precision=a+7,v.rounding=1,x(y.sinh(),y.cosh(),v.precision=a,v.rounding=w)):new v(y.s)},l.inverseCosine=l.acos=function(){var a=this,w=a.constructor,y=a.abs().cmp(1),v=w.precision,U=w.rounding;return y!==-1?y===0?a.isNeg()?r0(w,v,U):new w(0):new w(NaN):a.isZero()?r0(w,v+4,U).times(.5):(w.precision=v+6,w.rounding=1,a=a.asin(),y=r0(w,v+4,U).times(.5),w.precision=v,w.rounding=U,y.minus(a))},l.inverseHyperbolicCosine=l.acosh=function(){var a,w,y=this,v=y.constructor;return y.lte(1)?new v(y.eq(1)?0:NaN):y.isFinite()?(a=v.precision,w=v.rounding,v.precision=a+Math.max(Math.abs(y.e),y.sd())+4,v.rounding=1,A0=!1,y=y.times(y).minus(1).sqrt().plus(y),A0=!0,v.precision=a,v.rounding=w,y.ln()):new v(y)},l.inverseHyperbolicSine=l.asinh=function(){var a,w,y=this,v=y.constructor;return!y.isFinite()||y.isZero()?new v(y):(a=v.precision,w=v.rounding,v.precision=a+2*Math.max(Math.abs(y.e),y.sd())+6,v.rounding=1,A0=!1,y=y.times(y).plus(1).sqrt().plus(y),A0=!0,v.precision=a,v.rounding=w,y.ln())},l.inverseHyperbolicTangent=l.atanh=function(){var a,w,y,v=this,U=v.constructor;return v.isFinite()?0<=v.e?new U(v.abs().eq(1)?v.s/0:v.isZero()?v:NaN):(a=U.precision,w=U.rounding,y=v.sd(),Math.max(y,a)<2*-v.e-1?d0(new U(v),a,w,!0):(U.precision=y=y-v.e,v=x(v.plus(1),new U(1).minus(v),y+a,1),U.precision=a+4,U.rounding=1,v=v.ln(),U.precision=a,U.rounding=w,v.times(.5))):new U(NaN)},l.inverseSine=l.asin=function(){var a,w,y,v=this,U=v.constructor;return v.isZero()?new U(v):(a=v.abs().cmp(1),w=U.precision,y=U.rounding,a!==-1?a===0?((a=r0(U,w+4,y).times(.5)).s=v.s,a):new U(NaN):(U.precision=w+6,U.rounding=1,v=v.div(new U(1).minus(v.times(v)).sqrt().plus(1)).atan(),U.precision=w,U.rounding=y,v.times(2)))},l.inverseTangent=l.atan=function(){var a,w,y,v,U,b,R,z,Q,a0=this,g0=a0.constructor,e=g0.precision,u=g0.rounding;if(a0.isFinite()){if(a0.isZero())return new g0(a0);if(a0.abs().eq(1)&&e+4<=h)return(R=r0(g0,e+4,u).times(.25)).s=a0.s,R}else{if(!a0.s)return new g0(NaN);if(e+4<=h)return(R=r0(g0,e+4,u).times(.5)).s=a0.s,R}for(g0.precision=z=e+10,g0.rounding=1,a=y=Math.min(28,z/Z+2|0);a;--a)a0=a0.div(a0.times(a0).plus(1).sqrt().plus(1));for(A0=!1,w=Math.ceil(z/Z),v=1,Q=a0.times(a0),R=new g0(a0),U=a0;a!==-1;)if(U=U.times(Q),b=R.minus(U.div(v+=2)),U=U.times(Q),(R=b.plus(U.div(v+=2))).d[w]!==void 0)for(a=w;R.d[a]===b.d[a]&&a--;);return y&&(R=R.times(2<<y-1)),A0=!0,d0(R,g0.precision=e,g0.rounding=u,!0)},l.isFinite=function(){return!!this.d},l.isInteger=l.isInt=function(){return!!this.d&&z0(this.e/Z)>this.d.length-2},l.isNaN=function(){return!this.s},l.isNegative=l.isNeg=function(){return this.s<0},l.isPositive=l.isPos=function(){return 0<this.s},l.isZero=function(){return!!this.d&&this.d[0]===0},l.lessThan=l.lt=function(a){return this.cmp(a)<0},l.lessThanOrEqualTo=l.lte=function(a){return this.cmp(a)<1},l.logarithm=l.log=function(a){var w,y,v,U,b,R,z,Q,a0=this.constructor,g0=a0.precision,e=a0.rounding;if(a==null)a=new a0(10),w=!0;else{if(y=(a=new a0(a)).d,a.s<0||!y||!y[0]||a.eq(1))return new a0(NaN);w=a.eq(10)}if(y=this.d,this.s<0||!y||!y[0]||this.eq(1))return new a0(y&&!y[0]?-1/0:this.s!=1?NaN:y?0:1/0);if(w)if(1<y.length)b=!0;else{for(U=y[0];U%10==0;)U/=10;b=U!==1}if(A0=!1,R=s0(this,z=g0+5),v=w?l1(a0,z+10):s0(a,z),E((Q=x(R,v,z,1)).d,U=g0,e))do if(R=s0(this,z+=10),v=w?l1(a0,z+10):s0(a,z),Q=x(R,v,z,1),!b){+f(Q.d).slice(U+1,U+15)+1==1e14&&(Q=d0(Q,g0+1,0));break}while(E(Q.d,U+=10,e));return A0=!0,d0(Q,g0,e)},l.minus=l.sub=function(a){var w,y,v,U,b,R,z,Q,a0,g0,e,u=this,m=u.constructor;if(a=new m(a),!u.d||!a.d)return u.s&&a.s?u.d?a.s=-a.s:a=new m(a.d||u.s!==a.s?u:NaN):a=new m(NaN),a;if(u.s!=a.s)return a.s=-a.s,u.plus(a);if(a0=u.d,e=a.d,z=m.precision,Q=m.rounding,!a0[0]||!e[0]){if(e[0])a.s=-a.s;else{if(!a0[0])return new m(Q===3?-0:0);a=new m(u)}return A0?d0(a,z,Q):a}if(y=z0(a.e/Z),u=z0(u.e/Z),a0=a0.slice(),b=u-y){for(R=(g0=b<0)?(w=a0,b=-b,e.length):(w=e,y=u,a0.length),b>(v=Math.max(Math.ceil(z/Z),R)+2)&&(b=v,w.length=1),w.reverse(),v=b;v--;)w.push(0);w.reverse()}else{for((g0=(v=a0.length)<(R=e.length))&&(R=v),v=0;v<R;v++)if(a0[v]!=e[v]){g0=a0[v]<e[v];break}b=0}for(g0&&(w=a0,a0=e,e=w,a.s=-a.s),R=a0.length,v=e.length-R;0<v;--v)a0[R++]=0;for(v=e.length;b<v;){if(a0[--v]<e[v]){for(U=v;U&&a0[--U]===0;)a0[U]=Z0-1;--a0[U],a0[v]+=Z0}a0[v]-=e[v]}for(;a0[--R]===0;)a0.pop();for(;a0[0]===0;a0.shift())--y;return a0[0]?(a.d=a0,a.e=t1(a0,y),A0?d0(a,z,Q):a):new m(Q===3?-0:0)},l.modulo=l.mod=function(a){var w,y=this,v=y.constructor;return a=new v(a),!y.d||!a.s||a.d&&!a.d[0]?new v(NaN):!a.d||y.d&&!y.d[0]?d0(new v(y),v.precision,v.rounding):(A0=!1,v.modulo==9?(w=x(y,a.abs(),0,3,1)).s*=a.s:w=x(y,a,0,v.modulo,1),w=w.times(a),A0=!0,y.minus(w))},l.naturalExponential=l.exp=function(){return H0(this)},l.naturalLogarithm=l.ln=function(){return s0(this)},l.negated=l.neg=function(){var a=new this.constructor(this);return a.s=-a.s,d0(a)},l.plus=l.add=function(a){var w,y,v,U,b,R,z,Q,a0=this,g0=a0.constructor;if(a=new g0(a),!a0.d||!a.d)return a0.s&&a.s?a0.d||(a=new g0(a.d||a0.s===a.s?a0:NaN)):a=new g0(NaN),a;if(a0.s!=a.s)return a.s=-a.s,a0.minus(a);if(z=a0.d,Q=a.d,b=g0.precision,R=g0.rounding,!z[0]||!Q[0])return Q[0]||(a=new g0(a0)),A0?d0(a,b,R):a;if(g0=z0(a0.e/Z),a0=z0(a.e/Z),z=z.slice(),v=g0-a0){for(U=v<0?(y=z,v=-v,Q.length):(y=Q,a0=g0,z.length),v>(U=(g0=Math.ceil(b/Z))>U?g0+1:U+1)&&(v=U,y.length=1),y.reverse();v--;)y.push(0);y.reverse()}for((U=z.length)-(v=Q.length)<0&&(v=U,y=Q,Q=z,z=y),w=0;v;)w=(z[--v]=z[v]+Q[v]+w)/Z0|0,z[v]%=Z0;for(w&&(z.unshift(w),++a0),U=z.length;z[--U]==0;)z.pop();return a.d=z,a.e=t1(z,a0),A0?d0(a,b,R):a},l.precision=l.sd=function(a){var w;if(a!==void 0&&a!==!!a&&a!==1&&a!==0)throw Error(X0+a);return this.d?(w=w0(this.d),a&&this.e+1>w&&(w=this.e+1)):w=NaN,w},l.round=function(){var a=this.constructor;return d0(new a(this),this.e+1,a.rounding)},l.sine=l.sin=function(){var a,w,y=this,v=y.constructor;return y.isFinite()?y.isZero()?new v(y):(a=v.precision,w=v.rounding,v.precision=a+Math.max(y.e,y.sd())+Z,v.rounding=1,y=function(U,b){var R,z=b.d.length;if(z<3)return m1(U,2,b,b);R=16<(R=1.4*Math.sqrt(z))?16:0|R,b=m1(U,2,b=b.times(1/_(5,R)),b);for(var Q,a0=new U(5),g0=new U(16),e=new U(20);R--;)Q=b.times(b),b=b.times(a0.plus(Q.times(g0.times(Q).minus(e))));return b}(v,S(v,y)),v.precision=a,v.rounding=w,d0(2<N1?y.neg():y,a,w,!0)):new v(NaN)},l.squareRoot=l.sqrt=function(){var a,w,y,v,U,b,R=this,z=R.d,Q=R.e,a0=R.s,g0=R.constructor;if(a0!==1||!z||!z[0])return new g0(!a0||a0<0&&(!z||z[0])?NaN:z?R:1/0);for(A0=!1,v=(a0=Math.sqrt(+R))==0||a0==1/0?(((w=f(z)).length+Q)%2==0&&(w+="0"),a0=Math.sqrt(w),Q=z0((Q+1)/2)-(Q<0||Q%2),new g0(w=a0==1/0?"5e"+Q:(w=a0.toExponential()).slice(0,w.indexOf("e")+1)+Q)):new g0(a0.toString()),y=(Q=g0.precision)+3;;)if(v=(b=v).plus(x(R,b,y+2,1)).times(.5),f(b.d).slice(0,y)===(w=f(v.d)).slice(0,y)){if((w=w.slice(y-3,y+1))!="9999"&&(U||w!="4999")){+w&&(+w.slice(1)||w.charAt(0)!="5")||(d0(v,Q+1,1),a=!v.times(v).eq(R));break}if(!U&&(d0(b,Q+1,0),b.times(b).eq(R))){v=b;break}y+=4,U=1}return A0=!0,d0(v,Q,g0.rounding,a)},l.tangent=l.tan=function(){var a,w,y=this,v=y.constructor;return y.isFinite()?y.isZero()?new v(y):(a=v.precision,w=v.rounding,v.precision=a+10,v.rounding=1,(y=y.sin()).s=1,y=x(y,new v(1).minus(y.times(y)).sqrt(),a+10,0),v.precision=a,v.rounding=w,d0(N1==2||N1==4?y.neg():y,a,w,!0)):new v(NaN)},l.times=l.mul=function(a){var w,y,v,U,b,R,z,Q,a0,g0=this.constructor,e=this.d,u=(a=new g0(a)).d;if(a.s*=this.s,!(e&&e[0]&&u&&u[0]))return new g0(!a.s||e&&!e[0]&&!u||u&&!u[0]&&!e?NaN:e&&u?0*a.s:a.s/0);for(y=z0(this.e/Z)+z0(a.e/Z),(Q=e.length)<(a0=u.length)&&(b=e,e=u,u=b,R=Q,Q=a0,a0=R),b=[],v=R=Q+a0;v--;)b.push(0);for(v=a0;0<=--v;){for(w=0,U=Q+v;v<U;)z=b[U]+u[v]*e[U-v-1]+w,b[U--]=z%Z0|0,w=z/Z0|0;b[U]=(b[U]+w)%Z0|0}for(;!b[--R];)b.pop();return w?++y:b.shift(),a.d=b,a.e=t1(b,y),A0?d0(a,g0.precision,g0.rounding):a},l.toBinary=function(a,w){return O(this,2,a,w)},l.toDecimalPlaces=l.toDP=function(a,w){var y=this.constructor,v=new y(this);return a===void 0?v:(d(a,0,X1),w===void 0?w=y.rounding:d(w,0,8),d0(v,a+v.e+1,w))},l.toExponential=function(U,w){var y=this,v=y.constructor,U=U===void 0?Q0(y,!0):(d(U,0,X1),w===void 0?w=v.rounding:d(w,0,8),Q0(y=d0(new v(y),U+1,w),!0,U+1));return y.isNeg()&&!y.isZero()?"-"+U:U},l.toFixed=function(a,w){var y=this,v=y.constructor,U=a===void 0?Q0(y):(d(a,0,X1),w===void 0?w=v.rounding:d(w,0,8),Q0(U=d0(new v(y),a+y.e+1,w),!1,a+U.e+1));return y.isNeg()&&!y.isZero()?"-"+U:U},l.toFraction=function(a){var w,y,v,U,b,R,z,Q,a0,g0,e=this,u=e.d,m=e.constructor;if(!u)return new m(e);if(Q=y=new m(1),v=z=new m(0),a0=(b=(w=new m(v)).e=w0(u)-e.e-1)%Z,w.d[0]=p0(10,a0<0?Z+a0:a0),a==null)a=0<b?w:Q;else{if(!(R=new m(a)).isInt()||R.lt(Q))throw Error(X0+R);a=R.gt(w)?0<b?w:Q:R}for(A0=!1,R=new m(f(u)),a0=m.precision,m.precision=b=u.length*Z*2;g0=x(R,w,0,1,1),(U=y.plus(g0.times(v))).cmp(a)!=1;)y=v,v=U,Q=z.plus(g0.times(U=Q)),z=U,w=R.minus(g0.times(U=w)),R=U;return U=x(a.minus(y),v,0,1,1),z=z.plus(U.times(Q)),y=y.plus(U.times(v)),z.s=Q.s=e.s,e=x(Q,v,b,1).minus(e).abs().cmp(x(z,y,b,1).minus(e).abs())<1?[Q,v]:[z,y],m.precision=a0,A0=!0,e},l.toHexadecimal=l.toHex=function(a,w){return O(this,16,a,w)},l.toNearest=function(a,w){var y=(v=this).constructor,v=new y(v);if(a==null){if(!v.d)return v;a=new y(1),w=y.rounding}else{if(a=new y(a),w===void 0?w=y.rounding:d(w,0,8),!v.d)return a.s?v:a;if(!a.d)return a.s&&(a.s=v.s),a}return a.d[0]?(A0=!1,v=x(v,a,0,w,1).times(a),A0=!0,d0(v)):(a.s=v.s,v=a),v},l.toNumber=function(){return+this},l.toOctal=function(a,w){return O(this,8,a,w)},l.toPower=l.pow=function(a){var w,y,v,U,b,R,z=this,Q=z.constructor,a0=+(a=new Q(a));if(!(z.d&&a.d&&z.d[0]&&a.d[0]))return new Q(p0(+z,a0));if((z=new Q(z)).eq(1))return z;if(v=Q.precision,b=Q.rounding,a.eq(1))return d0(z,v,b);if((w=z0(a.e/Z))>=a.d.length-1&&(y=a0<0?-a0:a0)<=9007199254740991)return U=i0(Q,z,y,v),a.s<0?new Q(1).div(U):d0(U,v,b);if((R=z.s)<0){if(w<a.d.length-1)return new Q(NaN);if((1&a.d[w])==0&&(R=1),z.e==0&&z.d[0]==1&&z.d.length==1)return z.s=R,z}return(w=(y=p0(+z,a0))!=0&&isFinite(y)?new Q(y+"").e:z0(a0*(Math.log("0."+f(z.d))/Math.LN10+z.e+1)))>Q.maxE+1||w<Q.minE-1?new Q(0<w?R/0:0):(A0=!1,Q.rounding=z.s=1,y=Math.min(12,(w+"").length),(U=H0(a.times(s0(z,v+y)),v)).d&&E((U=d0(U,v+5,1)).d,v,b)&&+f((U=d0(H0(a.times(s0(z,(w=v+10)+y)),w),w+5,1)).d).slice(v+1,v+15)+1==1e14&&(U=d0(U,v+1,0)),U.s=R,A0=!0,d0(U,v,Q.rounding=b))},l.toPrecision=function(U,w){var y=this,v=y.constructor,U=U===void 0?Q0(y,y.e<=v.toExpNeg||y.e>=v.toExpPos):(d(U,1,X1),w===void 0?w=v.rounding:d(w,0,8),Q0(y=d0(new v(y),U,w),U<=y.e||y.e<=v.toExpNeg,U));return y.isNeg()&&!y.isZero()?"-"+U:U},l.toSignificantDigits=l.toSD=function(a,w){var y=this.constructor;return a===void 0?(a=y.precision,w=y.rounding):(d(a,1,X1),w===void 0?w=y.rounding:d(w,0,8)),d0(new y(this),a,w)},l.toString=function(){var a=this.constructor,a=Q0(this,this.e<=a.toExpNeg||this.e>=a.toExpPos);return this.isNeg()&&!this.isZero()?"-"+a:a},l.truncated=l.trunc=function(){return d0(new this.constructor(this),this.e+1,1)},l.valueOf=l.toJSON=function(){var a=this.constructor,a=Q0(this,this.e<=a.toExpNeg||this.e>=a.toExpPos);return this.isNeg()?"-"+a:a};var x=function(a,w,y,v,U,b){var R,z,Q,a0,g0,e,u,m,N,B,o0,x0,n0,W0,V0,K0,O1,D0,G,I1=a.constructor,Z1=a.s==w.s?1:-1,B1=a.d,z1=w.d;if(!(B1&&B1[0]&&z1&&z1[0]))return new I1(a.s&&w.s&&(B1?!z1||B1[0]!=z1[0]:z1)?B1&&B1[0]==0||!z1?0*Z1:Z1/0:NaN);for(z=b?(g0=1,a.e-w.e):(b=Z0,z0(a.e/(g0=Z))-z0(w.e/g0)),D0=z1.length,K0=B1.length,N=(Z1=new I1(Z1)).d=[],Q=0;z1[Q]==(B1[Q]||0);Q++);if(z1[Q]>(B1[Q]||0)&&z--,y==null?(n0=y=I1.precision,v=I1.rounding):n0=U?y+(a.e-w.e)+1:y,n0<0)N.push(1),e=!0;else{if(n0=n0/g0+2|0,Q=0,D0==1){for(z1=z1[a0=0],n0++;(Q<K0||a0)&&n0--;Q++)W0=a0*b+(B1[Q]||0),N[Q]=W0/z1|0,a0=W0%z1|0;e=a0||Q<K0}else{for(1<(a0=b/(z1[0]+1)|0)&&(z1=H(z1,a0,b),B1=H(B1,a0,b),D0=z1.length,K0=B1.length),o0=(B=B1.slice(0,V0=D0)).length;o0<D0;)B[o0++]=0;for((G=z1.slice()).unshift(0),O1=z1[0],z1[1]>=b/2&&++O1;a0=0,(R=u0(z1,B,D0,o0))<0?(x0=B[0],1<(a0=(x0=D0!=o0?x0*b+(B[1]||0):x0)/O1|0)?(R=u0(u=H(z1,a0=b<=a0?b-1:a0,b),B,m=u.length,o0=B.length))==1&&(a0--,q0(u,D0<m?G:z1,m,b)):(a0==0&&(R=a0=1),u=z1.slice()),(m=u.length)<o0&&u.unshift(0),q0(B,u,o0,b),R==-1&&(R=u0(z1,B,D0,o0=B.length))<1&&(a0++,q0(B,D0<o0?G:z1,o0,b)),o0=B.length):R===0&&(a0++,B=[0]),N[Q++]=a0,R&&B[0]?B[o0++]=B1[V0]||0:(B=[B1[V0]],o0=1),(V0++<K0||B[0]!==void 0)&&n0--;);e=B[0]!==void 0}N[0]||N.shift()}if(g0==1)Z1.e=z,F=e;else{for(Q=1,a0=N[0];10<=a0;a0/=10)Q++;Z1.e=Q+z*g0-1,d0(Z1,U?y+Z1.e+1:y,v,e)}return Z1};function H(a,w,y){var v,U=0,b=a.length;for(a=a.slice();b--;)v=a[b]*w+U,a[b]=v%y|0,U=v/y|0;return U&&a.unshift(U),a}function u0(a,w,y,v){var U,b;if(y!=v)b=v<y?1:-1;else for(U=b=0;U<y;U++)if(a[U]!=w[U]){b=a[U]>w[U]?1:-1;break}return b}function q0(a,w,y,v){for(var U=0;y--;)a[y]-=U,U=a[y]<w[y]?1:0,a[y]=U*v+a[y]-w[y];for(;!a[0]&&1<a.length;)a.shift()}function d0(a,w,y,v){var U,b,R,z,Q,a0,g0,e,u=a.constructor;e:if(w!=null){if(!(g0=a.d))return a;for(U=1,z=g0[0];10<=z;z/=10)U++;if((b=w-U)<0)b+=Z,Q=(a0=g0[e=0])/p0(10,U-(R=w)-1)%10|0;else if((e=Math.ceil((b+1)/Z))>=(z=g0.length)){if(!v)break e;for(;z++<=e;)g0.push(0);a0=Q=0,R=(b%=Z)-Z+(U=1)}else{for(a0=z=g0[e],U=1;10<=z;z/=10)U++;Q=(R=(b%=Z)-Z+U)<0?0:a0/p0(10,U-R-1)%10|0}if(v=v||w<0||g0[e+1]!==void 0||(R<0?a0:a0%p0(10,U-R-1)),Q=y<4?(Q||v)&&(y==0||y==(a.s<0?3:2)):5<Q||Q==5&&(y==4||v||y==6&&(0<b?0<R?a0/p0(10,U-R):0:g0[e-1])%10&1||y==(a.s<0?8:7)),w<1||!g0[0])return g0.length=0,Q?(w-=a.e+1,g0[0]=p0(10,(Z-w%Z)%Z),a.e=-w||0):g0[0]=a.e=0,a;if(b==0?(g0.length=e,z=1,e--):(g0.length=e+1,z=p0(10,Z-b),g0[e]=0<R?(a0/p0(10,U-R)%p0(10,R)|0)*z:0),Q)for(;;){if(e==0){for(b=1,R=g0[0];10<=R;R/=10)b++;for(R=g0[0]+=z,z=1;10<=R;R/=10)z++;b!=z&&(a.e++,g0[0]==Z0&&(g0[0]=1));break}if(g0[e]+=z,g0[e]!=Z0)break;g0[e--]=0,z=1}for(b=g0.length;g0[--b]===0;)g0.pop()}return A0&&(a.e>u.maxE?(a.d=null,a.e=NaN):a.e<u.minE&&(a.e=0,a.d=[0])),a}function Q0(a,w,y){if(!a.isFinite())return M0(a);var v,U=a.e,b=f(a.d),R=b.length;return w?(y&&0<(v=y-R)?b=b.charAt(0)+"."+b.slice(1)+I0(v):1<R&&(b=b.charAt(0)+"."+b.slice(1)),b=b+(a.e<0?"e":"e+")+a.e):U<0?(b="0."+I0(-U-1)+b,y&&0<(v=y-R)&&(b+=I0(v))):R<=U?(b+=I0(U+1-R),y&&0<(v=y-U-1)&&(b=b+"."+I0(v))):((v=U+1)<R&&(b=b.slice(0,v)+"."+b.slice(v)),y&&0<(v=y-R)&&(U+1===R&&(b+="."),b+=I0(v))),b}function t1(a,w){var y=a[0];for(w*=Z;10<=y;y/=10)w++;return w}function l1(a,w,y){if(i<w)throw A0=!0,y&&(a.precision=y),Error(o1);return d0(new a($),w,1,!0)}function r0(a,w,y){if(h<w)throw Error(o1);return d0(new a(e0),w,y,!0)}function w0(a){var w=a.length-1,y=w*Z+1;if(w=a[w]){for(;w%10==0;w/=10)y--;for(w=a[0];10<=w;w/=10)y++}return y}function I0(a){for(var w="";a--;)w+="0";return w}function i0(a,w,y,v){var U,b=new a(1),R=Math.ceil(v/Z+4);for(A0=!1;;){if(y%2&&W((b=b.times(w)).d,R)&&(U=!0),(y=z0(y/2))===0){y=b.d.length-1,U&&b.d[y]===0&&++b.d[y];break}W((w=w.times(w)).d,R)}return A0=!0,b}function k0(a){return 1&a.d[a.d.length-1]}function d1(a,w,y){for(var v,U=new a(w[0]),b=0;++b<w.length;){if(!(v=new a(w[b])).s){U=v;break}U[y](v)&&(U=v)}return U}function H0(a,w){var y,v,U,b,R,z,Q,a0=0,g0=0,e=0,u=a.constructor,m=u.rounding,N=u.precision;if(!a.d||!a.d[0]||17<a.e)return new u(a.d?a.d[0]?a.s<0?0:1/0:1:a.s?a.s<0?0:a:NaN);for(Q=w==null?(A0=!1,N):w,z=new u(.03125);-2<a.e;)a=a.times(z),e+=5;for(Q+=v=Math.log(p0(2,e))/Math.LN10*2+5|0,y=b=R=new u(1),u.precision=Q;;){if(b=d0(b.times(a),Q,1),y=y.times(++g0),f((z=R.plus(x(b,y,Q,1))).d).slice(0,Q)===f(R.d).slice(0,Q)){for(U=e;U--;)R=d0(R.times(R),Q,1);if(w!=null)return u.precision=N,R;if(!(a0<3&&E(R.d,Q-v,m,a0)))return d0(R,u.precision=N,m,A0=!0);u.precision=Q+=10,y=b=z=new u(1),g0=0,a0++}R=z}}function s0(a,w){var y,v,U,b,R,z,Q,a0,g0,e,u,m=1,N=a,B=N.d,o0=N.constructor,x0=o0.rounding,n0=o0.precision;if(N.s<0||!B||!B[0]||!N.e&&B[0]==1&&B.length==1)return new o0(B&&!B[0]?-1/0:N.s!=1?NaN:B?0:N);if(g0=w==null?(A0=!1,n0):w,o0.precision=g0+=10,v=(y=f(B)).charAt(0),!(Math.abs(b=N.e)<15e14))return a0=l1(o0,g0+2,n0).times(b+""),N=s0(new o0(v+"."+y.slice(1)),g0-10).plus(a0),o0.precision=n0,w==null?d0(N,n0,x0,A0=!0):N;for(;v<7&&v!=1||v==1&&3<y.charAt(1);)v=(y=f((N=N.times(a)).d)).charAt(0),m++;for(b=N.e,1<v?(N=new o0("0."+y),b++):N=new o0(v+"."+y.slice(1)),Q=R=N=x((e=N).minus(1),N.plus(1),g0,1),u=d0(N.times(N),g0,1),U=3;;){if(R=d0(R.times(u),g0,1),f((a0=Q.plus(x(R,new o0(U),g0,1))).d).slice(0,g0)===f(Q.d).slice(0,g0)){if(Q=Q.times(2),b!==0&&(Q=Q.plus(l1(o0,g0+2,n0).times(b+""))),Q=x(Q,new o0(m),g0,1),w!=null)return o0.precision=n0,Q;if(!E(Q.d,g0-10,x0,z))return d0(Q,o0.precision=n0,x0,A0=!0);o0.precision=g0+=10,a0=R=N=x(e.minus(1),e.plus(1),g0,1),u=d0(N.times(N),g0,1),U=z=1}Q=a0,U+=2}}function M0(a){return String(a.s*a.s/0)}function n1(a,w){var y,v,U;for(0<(v=(w=-1<(y=w.indexOf("."))?w.replace(".",""):w).search(/e/i))?(y<0&&(y=v),y+=+w.slice(v+1),w=w.substring(0,v)):y<0&&(y=w.length),v=0;w.charCodeAt(v)===48;v++);for(U=w.length;w.charCodeAt(U-1)===48;--U);if(w=w.slice(v,U)){if(U-=v,a.e=y=y-v-1,a.d=[],v=(y+1)%Z,y<0&&(v+=Z),v<U){for(v&&a.d.push(+w.slice(0,v)),U-=Z;v<U;)a.d.push(+w.slice(v,v+=Z));w=w.slice(v),v=Z-w.length}else v-=U;for(;v--;)w+="0";a.d.push(+w),A0&&(a.e>a.constructor.maxE?(a.d=null,a.e=NaN):a.e<a.constructor.minE&&(a.e=0,a.d=[0]))}else a.e=0,a.d=[0];return a}function m1(a,w,y,v,U){var b,R,z,Q,a0=a.precision,g0=Math.ceil(a0/Z);for(A0=!1,Q=y.times(y),z=new a(v);;){if(R=x(z.times(Q),new a(w++*w++),a0,1),z=U?v.plus(R):v.minus(R),v=x(R.times(Q),new a(w++*w++),a0,1),(R=z.plus(v)).d[g0]!==void 0){for(b=g0;R.d[b]===z.d[b]&&b--;);if(b==-1)break}b=z,z=v,v=R,R=b}return A0=!0,R.d.length=g0+1,R}function _(a,w){for(var y=a;--w;)y*=a;return y}function S(a,w){var y=w.s<0,v=r0(a,a.precision,1),U=v.times(.5);if((w=w.abs()).lte(U))return N1=y?4:1,w;if((a=w.divToInt(v)).isZero())N1=y?3:2;else{if((w=w.minus(a.times(v))).lte(U))return N1=k0(a)?y?2:3:y?4:1,w;N1=k0(a)?y?1:4:y?3:2}return w.minus(v).abs()}function O(a,w,y,v){var U,b,R,z,Q,a0,g0,e,u=a.constructor,m=y!==void 0;if(m?(d(y,1,X1),v===void 0?v=u.rounding:d(v,0,8)):(y=u.precision,v=u.rounding),a.isFinite()){for(m?(U=2,w==16?y=4*y-3:w==8&&(y=3*y-2)):U=w,0<=(R=(a0=Q0(a)).indexOf("."))&&(a0=a0.replace(".",""),(e=new u(1)).e=a0.length-R,e.d=L(Q0(e),10,U),e.e=e.d.length),b=z=(g0=L(a0,10,U)).length;g0[--z]==0;)g0.pop();if(g0[0]){if(R<0?b--:((a=new u(a)).d=g0,a.e=b,g0=(a=x(a,e,y,v,0,U)).d,b=a.e,Q=F),R=g0[y],e=U/2,Q=Q||g0[y+1]!==void 0,Q=v<4?(R!==void 0||Q)&&(v===0||v===(a.s<0?3:2)):e<R||R===e&&(v===4||Q||v===6&&1&g0[y-1]||v===(a.s<0?8:7)),g0.length=y,Q)for(;++g0[--y]>U-1;)g0[y]=0,y||(++b,g0.unshift(1));for(z=g0.length;!g0[z-1];--z);for(R=0,a0="";R<z;R++)a0+=N0.charAt(g0[R]);if(m){if(1<z)if(w==16||w==8){for(R=w==16?4:3,--z;z%R;z++)a0+="0";for(z=(g0=L(a0,U,w)).length;!g0[z-1];--z);for(R=1,a0="1.";R<z;R++)a0+=N0.charAt(g0[R])}else a0=a0.charAt(0)+"."+a0.slice(1);a0=a0+(b<0?"p":"p+")+b}else if(b<0){for(;++b;)a0="0"+a0;a0="0."+a0}else if(++b>z)for(b-=z;b--;)a0+="0";else b<z&&(a0=a0.slice(0,b)+"."+a0.slice(b))}else a0=m?"0p+0":"0";a0=(w==16?"0x":w==2?"0b":w==8?"0o":"")+a0}else a0=M0(a);return a.s<0?"-"+a0:a0}function W(a,w){return a.length>w&&(a.length=w,1)}function X(a){return new this(a).abs()}function f0(a){return new this(a).acos()}function c0(a){return new this(a).acosh()}function O0(a,w){return new this(a).plus(w)}function Y(a){return new this(a).asin()}function q(a){return new this(a).asinh()}function J(a){return new this(a).atan()}function k(a){return new this(a).atanh()}function S0(a,w){a=new this(a),w=new this(w);var y,v=this.precision,U=this.rounding,b=v+4;return a.s&&w.s?a.d||w.d?!w.d||a.isZero()?(y=w.s<0?r0(this,v,U):new this(0)).s=a.s:!a.d||w.isZero()?(y=r0(this,b,1).times(.5)).s=a.s:y=w.s<0?(this.precision=b,this.rounding=1,y=this.atan(x(a,w,b,1)),w=r0(this,b,1),this.precision=v,this.rounding=U,a.s<0?y.minus(w):y.plus(w)):this.atan(x(a,w,b,1)):(y=r0(this,b,1).times(0<w.s?.25:.75)).s=a.s:y=new this(NaN),y}function E0(a){return new this(a).cbrt()}function U0(a){return d0(a=new this(a),a.e+1,2)}function h0(a){if(!a||typeof a!="object")throw Error(f1+"Object expected");for(var w,y,v=a.defaults===!0,U=["precision",1,X1,"rounding",0,8,"toExpNeg",-T0,0,"toExpPos",0,T0,"maxE",0,T0,"minE",-T0,0,"modulo",0,9],b=0;b<U.length;b+=3)if(w=U[b],v&&(this[w]=x1[w]),(y=a[w])!==void 0){if(!(z0(y)===y&&U[b+1]<=y&&y<=U[b+2]))throw Error(X0+w+": "+y);this[w]=y}if(w="crypto",v&&(this[w]=x1[w]),(y=a[w])!==void 0){if(y!==!0&&y!==!1&&y!==0&&y!==1)throw Error(X0+w+": "+y);if(y){if(typeof crypto=="undefined"||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error($0);this[w]=!0}else this[w]=!1}return this}function l0(a){return new this(a).cos()}function F0(a){return new this(a).cosh()}function L0(a,w){return new this(a).div(w)}function _0(a){return new this(a).exp()}function y0(a){return d0(a=new this(a),a.e+1,3)}function G0(){var a,w,y=new this(0);for(A0=!1,a=0;a<arguments.length;)if((w=new this(arguments[a++])).d)y.d&&(y=y.plus(w.times(w)));else{if(w.s)return A0=!0,new this(1/0);y=w}return A0=!0,y.sqrt()}function b0(a){return a instanceof r||a&&a.name==="[object Decimal]"||!1}function R0(a){return new this(a).ln()}function i1(a,w){return new this(a).log(w)}function A1(a){return new this(a).log(2)}function a1(a){return new this(a).log(10)}function U1(){return d1(this,arguments,"lt")}function D1(){return d1(this,arguments,"gt")}function P1(a,w){return new this(a).mod(w)}function Y1(a,w){return new this(a).mul(w)}function $1(a,w){return new this(a).pow(w)}function T1(a){var w,y,v,U,b=0,R=new this(1),z=[];if(a===void 0?a=this.precision:d(a,1,X1),v=Math.ceil(a/Z),this.crypto)if(crypto.getRandomValues)for(w=crypto.getRandomValues(new Uint32Array(v));b<v;)429e7<=(U=w[b])?w[b]=crypto.getRandomValues(new Uint32Array(1))[0]:z[b++]=U%1e7;else{if(!crypto.randomBytes)throw Error($0);for(w=crypto.randomBytes(v*=4);b<v;)214e7<=(U=w[b]+(w[b+1]<<8)+(w[b+2]<<16)+((127&w[b+3])<<24))?crypto.randomBytes(4).copy(w,b):(z.push(U%1e7),b+=4);b=v/4}else for(;b<v;)z[b++]=1e7*Math.random()|0;for(v=z[--b],a%=Z,v&&a&&(U=p0(10,Z-a),z[b]=(v/U|0)*U);z[b]===0;b--)z.pop();if(b<0)z=[y=0];else{for(y=-1;z[0]===0;y-=Z)z.shift();for(v=1,U=z[0];10<=U;U/=10)v++;v<Z&&(y-=Z-v)}return R.e=y,R.d=z,R}function J1(a){return d0(a=new this(a),a.e+1,this.rounding)}function v2(a){return(a=new this(a)).d?a.d[0]?a.s:0*a.s:a.s||NaN}function H1(a){return new this(a).sin()}function R1(a){return new this(a).sinh()}function v1(a){return new this(a).sqrt()}function e2(a,w){return new this(a).sub(w)}function t2(a){return new this(a).tan()}function C(a){return new this(a).tanh()}function T(a){return d0(a=new this(a),a.e+1,1)}return(r=function a(w){var y,v,U;function b(R){var z,Q,a0,g0=this;if(!(g0 instanceof b))return new b(R);if(R instanceof(g0.constructor=b))return g0.s=R.s,void(A0?!R.d||R.e>b.maxE?(g0.e=NaN,g0.d=null):R.e<b.minE?(g0.e=0,g0.d=[0]):(g0.e=R.e,g0.d=R.d.slice()):(g0.e=R.e,g0.d=R.d&&R.d.slice()));if((a0=typeof R)=="number"){if(R===0)return g0.s=1/R<0?-1:1,g0.e=0,void(g0.d=[0]);if(R<0?(R=-R,g0.s=-1):g0.s=1,R===~~R&&R<1e7){for(z=0,Q=R;10<=Q;Q/=10)z++;return void(A0?b.maxE<z?(g0.e=NaN,g0.d=null):z<b.minE?(g0.e=0,g0.d=[0]):(g0.e=z,g0.d=[R]):(g0.e=z,g0.d=[R]))}return 0*R!=0?(R||(g0.s=NaN),g0.e=NaN,void(g0.d=null)):n1(g0,R.toString())}if(a0!="string")throw Error(X0+R);return(Q=R.charCodeAt(0))===45?(R=R.slice(1),g0.s=-1):(Q===43&&(R=R.slice(1)),g0.s=1),(b1.test(R)?n1:function(e,u){var m,N,B,o0,x0,n0,W0,V0;if(u==="Infinity"||u==="NaN")return+u||(e.s=NaN),e.e=NaN,e.d=null,e;if(F1.test(u))V0=16,u=u.toLowerCase();else if(q1.test(u))V0=2;else{if(!c1.test(u))throw Error(X0+u);V0=8}for(o0=0<=(B=(u=0<(B=u.search(/p/i))?(n0=+u.slice(B+1),u.substring(2,B)):u.slice(2)).indexOf(".")),m=e.constructor,o0&&(B=(x0=(u=u.replace(".","")).length)-B,N=i0(m,new m(V0),B,2*B)),B=V0=(W0=L(u,V0,Z0)).length-1;W0[B]===0;--B)W0.pop();return B<0?new m(0*e.s):(e.e=t1(W0,V0),e.d=W0,A0=!1,o0&&(e=x(e,N,4*x0)),n0&&(e=e.times(Math.abs(n0)<54?p0(2,n0):r.pow(2,n0))),A0=!0,e)})(g0,R)}if(b.prototype=l,b.ROUND_UP=0,b.ROUND_DOWN=1,b.ROUND_CEIL=2,b.ROUND_FLOOR=3,b.ROUND_HALF_UP=4,b.ROUND_HALF_DOWN=5,b.ROUND_HALF_EVEN=6,b.ROUND_HALF_CEIL=7,b.ROUND_HALF_FLOOR=8,b.EUCLID=9,b.config=b.set=h0,b.clone=a,b.isDecimal=b0,b.abs=X,b.acos=f0,b.acosh=c0,b.add=O0,b.asin=Y,b.asinh=q,b.atan=J,b.atanh=k,b.atan2=S0,b.cbrt=E0,b.ceil=U0,b.cos=l0,b.cosh=F0,b.div=L0,b.exp=_0,b.floor=y0,b.hypot=G0,b.ln=R0,b.log=i1,b.log10=a1,b.log2=A1,b.max=U1,b.min=D1,b.mod=P1,b.mul=Y1,b.pow=$1,b.random=T1,b.round=J1,b.sign=v2,b.sin=H1,b.sinh=R1,b.sqrt=v1,b.sub=e2,b.tan=t2,b.tanh=C,b.trunc=T,(w=w===void 0?{}:w)&&w.defaults!==!0)for(U=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],y=0;y<U.length;)w.hasOwnProperty(v=U[y++])||(w[v]=this[v]);return b.config(w),b}(x1)).default=r.Decimal=r,$=new r($),e0=new r(e0),W2.exports?(typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"&&(l[Symbol.for("nodejs.util.inspect.custom")]=l.toString,l[Symbol.toStringTag]="Decimal"),W2.exports=r):(A=A||(typeof self!="undefined"&&self&&self.self==self?self:window),_1=A.Decimal,r.noConflict=function(){return A.Decimal=_1,r},A.Decimal=r),r}(I3)});W2.exports=A2,A2=d3.exports,K3.exports,function(){var A=A2.getCore(),r=A.PARSER,F=A.groups.N,_1=A.groups.P,N1=A.groups.S,T0=A.groups.EX,X1=A.groups.FN,N0=A.groups.PL,$=A.groups.CP,e0=A.groups.CB,x1=A.Utils.keys,A0=A.Utils.even,f1=A.Utils.variables,X0=A.Utils.format,o1=A.Utils.round,$0=A.Frac,z0=A.Utils.isInt,p0=A.Symbol,q1=A.Settings.CONST_HASH,F1=A.Utils.importFunctions();A.Utils.evaluate;function c1(i,h,l){if(A.Utils.isSymbol(i))this.parse(i),this.variable=this.variable||h;else if(isNaN(i))typeof i=="string"&&this.parse(r.parse(i));else{if(l=l||0,h===void 0)throw new A.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[l]=i,this.fill(i)}}function b1(){this.factors={},this.length=0}function Z0(i,h,l){this.terms=h||[],this.coeff=i,this.map=l,this.sum=new A.Frac(0),this.image=void 0}c1.fromArray=function(i,h){if(h===void 0)throw new A.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var l=new c1;return l.coeffs=i,l.variable=h,l},c1.fit=function(i,h,l,f,d,E){var L=new Array(d+1),x=l-h;L[0]=h,x-=(L[d]=i)*Math.pow(f,d);for(var H=d-1;0<H;H--){var u0=Math.pow(f,H),q0=x/u0,q0=Math.sign(q0)*Math.floor(Math.abs(q0));x-=q0*u0,L[H]=q0}if(x!==0)return null;for(H=0;H<L.length;H++)L[H]=new $0(L[H]);return c1.fromArray(L,E)},c1.prototype={parse:function(i,h){if(this.variable=f1(i)[0],!i.isPoly())throw A.exceptions.NerdamerTypeError("Polynomial Expected! Received "+A.Utils.text(i));if(h=h||[],(i=i.power.absEquals(1)?i:r.expand(i)).group===A.groups.N)h[0]=i.multiplier;else if(i.group===A.groups.S)h[i.power.toDecimal()]=i.multiplier;else for(var l in i.symbols){var f=i.symbols[l],l=f.power;if(A.Utils.isSymbol(l))throw new A.exceptions.NerdamerTypeError("power cannot be a Symbol");l=f.group===F?0:l.toDecimal(),f.symbols?this.parse(f,h):h[l]=f.multiplier}this.coeffs=h,this.fill()},fill:function(i){i=Number(i)||0;for(var h=this.coeffs.length,l=0;l<h;l++)this.coeffs[l]===void 0&&(this.coeffs[l]=new $0(i));return this},trim:function(){for(var i=this.coeffs.length;i--;){var h=this.coeffs[i],l=h.equals(0);if(!h||!l||i===0)break;this.coeffs.pop()}return this},modP:function(i){for(var h=this.coeffs.length,l=0;l<h;l++){var f=this.coeffs[l];if(f<0){for(var d,E=l;E<h;E++)if(0<this.coeffs[E]){d=this.coeffs[E];break}if(d){for(;l<E;E--)this.coeffs[E]=this.coeffs[E].subtract(new $0(1)),this.coeffs[E-1]=this.coeffs[E-1].add(new $0(i));f=this.coeffs[l]}}var L,x=f.mod(i),H=f.subtract(x).divide(i);H.equals(0)||(f=(f=this.coeffs[L=l+1]||new $0(0)).add(H),this.coeffs[L]=new $0(f),this.coeffs[l]=new $0(x))}return this},add:function(i){for(var h=Math.max(this.coeffs.length,i.coeffs.length),l=0;l<h;l++){var f=this.coeffs[l]||new $0(0),d=i.coeffs[l]||new $0(0);this.coeffs[l]=f.add(d)}return this},subtract:function(i){for(var h=Math.max(this.coeffs.length,i.coeffs.length),l=0;l<h;l++){var f=this.coeffs[l]||new $0(0),d=i.coeffs[l]||new $0(0);this.coeffs[l]=f.subtract(d)}return this},divide:function(i){for(var h=this.variable,l=A.Utils.arrayClone(this.coeffs),f=A.Utils.arrayClone(i.coeffs),d=l.length,E=f.length-1,L=[],x=0;x<d;x++){var H=d-(x+1),u0=H-E,q0=l[H].divide(f[E]);if(u0<0)break;L[u0]=q0;for(var d0=0;d0<=E;d0++)l[d0+u0]=l[d0+u0].subtract(f[d0].multiply(q0))}return i=c1.fromArray(l,h||"x").trim(),[c1.fromArray(L,h||"x"),i]},multiply:function(i){for(var h=this.coeffs.length,l=i.coeffs.length,f=[],d=0;d<h;d++)for(var E=this.coeffs[d],L=0;L<l;L++){var x=d+L,H=i.coeffs[L],u0=f[x]||new $0(0);f[x]=u0.add(E.multiply(H))}return this.coeffs=f,this},isZero:function(){for(var i=this.coeffs.length,h=0;h<i;h++)if(!this.coeffs[h].equals(0))return!1;return!0},sub:function(i){for(var h=new $0(0),l=this.coeffs.length,f=0;f<l;f++){var d=this.coeffs[f];d.equals(0)||(h=h.add(d.multiply(new $0(Math.pow(i,f)))))}return h},clone:function(){var i=new c1;return i.coeffs=this.coeffs,i.variable=this.variable,i},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var i=this.lc(),h=this.coeffs.length,l=0;l<h;l++)this.coeffs[l]=this.coeffs[l].divide(i);return this},gcd:function(i){if(this.coeffs.length-1<i.coeffs.length-1)return i.gcd(this);for(var h=this;!i.isZero();){var l=i.clone();i=(h=h.clone()).divide(l)[1],h=l}var f=A.Math2.QGCD.apply(null,h.coeffs);if(!f.equals(1))for(var d=h.coeffs.length,E=0;E<d;E++)h.coeffs[E]=h.coeffs[E].divide(f);return h},diff:function(){for(var i=[],h=this.coeffs.length,l=1;l<h;l++)i.push(this.coeffs[l].multiply(new $0(l)));return this.coeffs=i,this},integrate:function(){for(var i=[0],h=this.coeffs.length,l=0;l<h;l++){var f=new $0(l+1);i[f]=this.coeffs[l].divide(f)}return this.coeffs=i,this},gcf:function(i){for(var h=[],l=0;l<this.coeffs.length;l++){var f=this.coeffs[l];f.equals(0)||h.indexOf(f)!==-1||h.push(f)}var d=[A.Math2.QGCD.apply(void 0,h),function(E){for(var L=0;L<E.length;L++)if(!E[L].equals(0))return L}(this.coeffs)].toDecimal();return i&&((i=[])[d[1]-1]=d[0],d=c1.fromArray(i,this.variable).fill()),d},quad:function(i){var h=[];if(3<this.coeffs.length)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(this.coeffs.length===0)throw new Error("Polynomial array has no terms");var l=this.coeffs[2]||0,f=this.coeffs[1]||0,d=f*f-4*l*this.coeffs[0];return d<0&&!i||(h[0]=(-f+Math.sqrt(d))/(2*l),h[1]=(-f-Math.sqrt(d))/(2*l)),h},squareFree:function(){for(var i=this.clone(),h=1,l=i.clone().diff(),f=i.clone().gcd(l),d=i.divide(f)[0],E=c1.fromArray([new $0(1)],i.variable);!f.equalsNumber(1);){var L=d.gcd(f),x=d.divide(L)[0];if(!x.equalsNumber(1)&&1<h){for(var H=x.clone(),u0=1;u0<h;u0++)H.multiply(x.clone());x=H}E=E.multiply(x),h++,f=f.divide(d=L)[0]}return[E,d,h]},toSymbol:function(){var i=this.coeffs.length,h=this.variable;if(i===0)return new A.Symbol(0);for(var l=i-1,f="",d=0;d<i;d++){var E=d===l?"":"+",L=this.coeffs[d];L.equals(0)||(f+=L+"*"+h+"^"+d+E)}return r.parse(f)},equalsNumber:function(i){return this.trim(),this.coeffs.length===1&&this.coeffs[0].toDecimal()===String(i)},toString:function(){return this.toSymbol().toString()}},p0.prototype.coeffs=function(i,h){h&&!this.isPoly(!0)&&r.error("Polynomial expected when requesting coefficients with order"),i=i||[];var l,f=this.clone().distributeMultiplier();if(f.isComposite())for(var d in f.symbols)d=f.symbols[d],d.isComposite()?d.clone().distributeMultiplier().coeffs(i,h):h?i[d.isConstant()?0:d.power.toDecimal()]=d.multiplier:i.push(d.multiplier);else h?i[f.isConstant(!0)?0:f.power.toDecimal()]=f.multiplier:f.group===e0&&f.isImaginary()?(l=new p0(f.multiplier),f.each(function(L){(L.isConstant(!0)||L.imaginary)&&(l=r.multiply(l,L))}),i.push(l)):i.push(f.multiplier);if(h)for(var E=0;E<i.length;E++)i[E]===void 0&&(i[E]=new p0(0));return i},p0.prototype.tBase=function(i){if(i===void 0)throw new Error("Symbol.tBase requires a map object!");for(var h=[],l=this.collectSymbols(null,null,null,!0),f=l.length,d=0;d<f;d++){var E=l[d],L=E.group,x=new Z0(E.multiplier,[],i);if(L===e0)for(var H in E.symbols){var u0=E.symbols[H];x.terms[i[H]]=u0.power}else x.terms[i[E.value]]=E.power;h.push(x.fill()),x.updateCount()}return h},p0.prototype.altVar=function(i){var h=this.multiplier.toString(),l=this.power.toString();return(h==="1"?"":h+"*")+i+(l==="1"?"":"^"+l)},p0.prototype.sameVars=function(i){if(!this.symbols&&this.group!==i.group)return!1;for(var h in this.symbols){var l=this.symbols[h],h=i.symbols[h];if(!h||l.value!==h.value)return!1}return!0},p0.prototype.groupTerms=function(i){var h,l,f;i=String(i);var d=[];return this.each(function(E){if(E.group===N0){f=E.groupTerms(i);for(var L=0;L<f.length;L++){var x=f[L];x&&(d[L]=x)}}else h=A.Utils.decompose_fn(E,i,!0),l=h.x.value===i?Number(h.x.power):0,d[l]=r.add(d[l]||new p0(0),h.a)}),d},p0.prototype.collectFactors=function(){var i=[];return this.group===e0?this.each(function(h){i.push(h.clone())}):i.push(this.clone()),i},b1.prototype.getNumberSymbolics=function(){var i=0;return this.each(function(h){h.isConstant(!0)||i++}),i},b1.prototype.add=function(i){if(i.equals(0))return this;if(i.equals(-1)&&0<this.length){var h=A.Utils.firstObject(this.factors,null,!0);return this.add(r.symfunction(A.Settings.PARENTHESIS,[h.obj]).negate()),delete this.factors[h.key],this.length--,this}if(i.group===e0){var l=this;i.multiplier.equals(1)||l.add(new p0(i.multiplier)),i.each(function(f){l.add(f)})}else{if(this.preAdd&&(i=this.preAdd(i)),h=(i=this.pFactor?r.pow(i,new p0(this.pFactor)):i).isConstant(),h&&i.equals(1))return this;h=h?i.value:i.text(),h in this.factors?(this.factors[h]=r.multiply(this.factors[h],i),this.factors[h].equals(1)&&(delete this.factors[h],this.length--)):(this.factors[h]=i,this.length++)}return this},b1.prototype.toSymbol=function(){for(var d=new p0(1),i=Object.values(this.factors).sort(function(E,L){return E.group>L.group}),h=0,l=i.length;h<l;h++)var f=i[h],f=f.power.equals(1)&&f.fname!==""?r.symfunction(A.PARENTHESIS,[f]):f,d=r.multiply(d,f);return d=d.fname===""?p0.unwrapPARENS(d):d},b1.prototype.merge=function(i){for(var h in i)h in this.factors?this.factors[h]=r.multiply(this.factors[h],i[h]):this.factors[h]=i[h];return this},b1.prototype.each=function(i){for(var h in this.factors){var l=this.factors[h];l.fname===A.PARENTHESIS&&l.isLinear()&&(l=l.args[0]),i.call(this,l,h)}return this},b1.prototype.count=function(){return x1(this.factors).length},b1.prototype.clean=function(){try{var i=A.Settings.CONST_HASH;this.factors[i].lessThan(0)&&(this.factors[i].equals(-1)?delete this.factors[i]:this.factors[i].negate(),this.each(function(h){h.negate()}))}catch{}},b1.prototype.toString=function(){return this.toSymbol().toString()},Z0.prototype.updateCount=function(){this.count=this.count||0;for(var i=0;i<this.terms.length;i++)this.terms[i].equals(0)||this.count++;return this},Z0.prototype.getVars=function(){for(var i=[],h=0;h<this.terms.length;h++){var l=this.terms[h];this.getRevMap(),l.equals(0)||i.push(this.rev_map[h])}return i.join(" ")},Z0.prototype.len=function(){return this.count===void 0&&this.updateCount(),this.count},Z0.prototype.toSymbol=function(i){i=i||this.getRevMap();for(var h=new p0(this.coeff),l=0;l<this.terms.length;l++){var f=i[l],d=this.terms[l];d.equals(0)||f===q1||((f=new p0(f)).power=d,h=r.multiply(h,f))}return h},Z0.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var i,h={};for(i in this.map)h[this.map[i]]=i;return this.rev_map=h},Z0.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},Z0.prototype.getImg=function(){return this.image||this.generateImage(),this.image},Z0.prototype.fill=function(){for(var i=this.map.length,h=0;h<i;h++)this.terms[h]===void 0?this.terms[h]=new A.Frac(0):this.sum=this.sum.add(this.terms[h]);return this},Z0.prototype.divide=function(i){for(var h=this.coeff.divide(i.coeff),l=this.terms.length,f=new Z0(h,[],this.map),d=0;d<l;d++)f.terms[d]=this.terms[d].subtract(i.terms[d]),f.sum=f.sum.add(f.terms[d]);return f},Z0.prototype.multiply=function(i){for(var h=this.coeff.multiply(i.coeff),l=this.terms.length,f=new Z0(h,[],this.map),d=0;d<l;d++)f.terms[d]=this.terms[d].add(i.terms[d]),f.sum=f.sum.add(f.terms[d]);return f},Z0.prototype.isZero=function(){return this.coeff.equals(0)},Z0.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},A.Utils.toMapObj=function(i){for(var h=0,l={},f=0;f<i.length;f++){var d=i[f];l[d]===void 0&&(l[d]=h,h++)}return l.length=h,l},A.Utils.filledArray=function(i,h,l){for(var f=[];h--;)f[h]=l?new l(i):i;return f},A.Utils.arrSum=function(i){for(var h=0,l=i.length,f=0;f<l;f++)h+=i[f];return h},A.Utils.haveIntersection=function(i,h){var l;return h.length>i.length&&(l=h,h=i,i=l),i.some(function(f){return-1<h.indexOf(f)})},A.Utils.subFunctions=function(i,h){h=h||{};var l=[];return i.each(function(f){var d,E;f.group===X1||f.previousGroup===X1?(d=A.Utils.text(f,"hash"),(E=h[d])||(E=f.fname+x1(h).length,h[d]=E),l.push(f.altVar(E))):f.group===e0||f.group===N0||f.group===$?l.push(A.Utils.subFunctions(f,h)):l.push(f.text())}),i.group===$||i.group===N0?i.altVar(A.Utils.inBrackets(l.join("+"))):i.group===e0?i.altVar(A.Utils.inBrackets(l.join("*"))):i.text()},A.Utils.getFunctionsSubs=function(i){var h,l={};for(h in i)l[i[h]]=r.parse(h);return l};var Z=A.Algebra={version:"1.4.6",proots:function(i,h){h=h||7;function l(k0,d1,H0){for(var s0=function(O,m1){var _=O.slice(0);if(O.unshift(m1),100<m1)throw new A.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to 100. ");var S=[],O={};for(O.Degree=m1,d0=0;d0<m1;d0++)S.push(0);var W=S.slice(0);function X(U0,h0,l0,F0,L0,_0){L0[0]=_0.b=F0[0],L0[1]=_0.a=-(h0*_0.b)+F0[1];for(var y0=2;y0<U0;y0++)L0[y0]=-(h0*_0.a+l0*_0.b)+F0[y0],_0.b=_0.a,_0.a=L0[y0]}function f0(U0,h0,l0,F0,L0,_0,y0,G0,b0){var R0=new Object,i1=3;return R0.b=R0.a=0,X(h0,y0,G0,_0,b0,R0),L0.c=R0.a,L0.d=R0.b,Math.abs(L0.c)<=100*U0*Math.abs(_0[h0-1])&&Math.abs(L0.d)<=100*U0*Math.abs(_0[h0-2])||(L0.h=G0*F0,Math.abs(L0.d)>=Math.abs(L0.c)?(i1=2,L0.e=l0/L0.d,L0.f=L0.c/L0.d,L0.g=y0*F0,L0.a3=L0.e*(L0.g+l0)+L0.h*(F0/L0.d),L0.a1=-l0+L0.f*F0,L0.a7=L0.h+(L0.f+y0)*l0):(i1=1,L0.e=l0/L0.c,L0.f=L0.d/L0.c,L0.g=L0.e*y0,L0.a3=L0.e*l0+(L0.g+L0.h/L0.c)*F0,L0.a1=-(l0*(L0.d/L0.c))+F0,L0.a7=L0.g*L0.d+L0.h*L0.f+l0)),i1}function c0(U0,h0,l0,F0,L0,_0,y0,G0,b0){if(l0!=3)if(F0=l0==1?L0:F0,Math.abs(_0.a1)>10*U0*Math.abs(F0))for(_0.a7/=_0.a1,_0.a3/=_0.a1,y0[0]=b0[0],y0[1]=-(b0[0]*_0.a7)+b0[1],R0=2;R0<h0;R0++)y0[R0]=-(b0[R0-1]*_0.a7)+G0[R0-2]*_0.a3+b0[R0];else for(y0[0]=0,y0[1]=-(b0[0]*_0.a7),R0=2;R0<h0;R0++)y0[R0]=-(b0[R0-1]*_0.a7)+G0[R0-2]*_0.a3;else{y0[1]=y0[0]=0;for(var R0=2;R0<h0;R0++)y0[R0]=G0[R0-2]}}function O0(U0,h0,l0,F0,L0,_0,y0,G0,b0,R0,i1,A1,a1,U1,D1,P1,Y1){var $1;h0.b=h0.a=0,U0!=3&&(G0=U0!=2?($1=l0+a1*y0+A1*R0,G0+(a1+U1*R0)*b0):($1=(l0+i1)*R0+A1,(R0+a1)*G0+U1*b0),b0=-(D1[P1-1]/Y1[P1]),($1=-(L0=U1*(D1=-(D1[P1-2]+b0*Y1[P1-1])/Y1[P1])*F0-((Y1=b0*_0)+(P1=b0*b0*L0)))+G0+b0*$1)!=0&&(h0.a=-(a1*(P1+Y1)+U1*(b0*F0+D1*_0))/$1+a1,h0.b=U1*(1+L0/$1)))}function Y(U0,h0,l0,F0){var L0,_0,y0;(F0.sr=F0.si=F0.lr=F0.li=0)!=U0?l0!=0?(L0=h0/2,_0=Math.abs(L0)<Math.abs(l0)?(y0=-(y0=0<=l0?U0:-U0)+L0*(L0/Math.abs(l0)),Math.sqrt(Math.abs(y0))*Math.sqrt(Math.abs(l0))):(y0=-U0/L0*(l0/L0)+1,Math.sqrt(Math.abs(y0))*Math.abs(L0)),0<=y0?(F0.lr=(-L0+(_0=0<=L0?-_0:_0))/U0,F0.sr=F0.lr!=0?l0/F0.lr/U0:F0.sr):(F0.lr=F0.sr=-L0/U0,F0.si=Math.abs(_0/U0),F0.li=-F0.si)):F0.lr=-h0/U0:F0.sr=h0!=0?-l0/h0:F0.sr}function q(U0,h0,l0,F0,L0,_0,y0,G0,b0,R0,i1,A1){var a1,U1,D1,P1,Y1,$1,T1,J1,v2,H1,R1,v1,e2,t2,C,T,a,w,y,v,U,b,R,z,Q,a0=new Object,g0=new Object,e=new Array(h0),u=new Array(h0),m=1;for(A1.NZ=0,P1=D1=.25,Y1=F0,J1=L0,a0.b=a0.a=0,X(b0,i1,L0,G0,R0,a0),a1=a0.a,U1=a0.b,g0.h=g0.g=g0.f=g0.e=g0.d=g0.c=g0.a7=g0.a3=g0.a1=0,R=f0(U0,y0,a1,U1,g0,_0,i1,L0,e),v=0;v<l0;v++){if(w=1,c0(U0,y0,R,a1,U1,g0,_0,e,R0),O0(R=f0(U0,y0,a1,U1,g0,_0,i1,L0,e),a0,a1,g0.a1,g0.a3,g0.a7,U1,g0.c,g0.d,g0.f,g0.g,g0.h,i1,L0,_0,y0,G0),C=a0.a,a=T=a0.b,H1=_0[y0-1]!=0?-(G0[y0]/_0[y0-1]):0,R1=e2=1,v!=0&&R!=3&&(z=(t2=(e2=a!=0?Math.abs((a-J1)/a):e2)<T1?e2*T1:1)<P1?1:0,(U=(v1=(R1=H1!=0?Math.abs((H1-Y1)/H1):R1)<$1?R1*$1:1)<D1?1:0)||z)){for(y=0;y<y0;y++)u[y]=_0[y];for(v2=H1,b=Q=0;;){if(!w||(w=0)!=0||!U||z&&!(v1<t2)){if(function(N,B,o0,x0,n0,W0,V0,K0,O1,D0,G,I1){var Z1,B1,z1,w1,L1,c2,i2,b2,K1,t=new Object,p=0,M=0;o0.NZ=0,w1=x0,c2=n0;do{if(t.li=t.lr=t.si=t.sr=0,Y(1,w1,c2,t),o0.szr=t.sr,o0.szi=t.si,o0.lzr=t.lr,o0.lzi=t.li,Math.abs(Math.abs(o0.szr)-Math.abs(o0.lzr))>.01*Math.abs(o0.lzr))break;for(X(V0,w1,c2,O1,W0,K0),i2=Math.abs(-(o0.szr*K0.b)+K0.a)+Math.abs(o0.szi*K0.b),b2=Math.sqrt(Math.abs(c2)),Z1=2*Math.abs(W0[0]),L1=-(o0.szr*K0.b),K1=1;K1<B;K1++)Z1=Z1*b2+Math.abs(W0[K1]);if(i2<=20*(Z1=(9*(Z1=Z1*b2+Math.abs(L1+K0.a))+2*Math.abs(L1)-7*(Math.abs(K0.a+L1)+b2*Math.abs(K0.b)))*N)){o0.NZ=2;break}if(20<++p)break;if(2<=p&&z1<=.01&&B1<=i2&&!M){for(X(V0,w1-=w1*(z1=z1<N?Math.sqrt(N):Math.sqrt(z1)),c2+=c2*z1,O1,W0,K0),K1=0;K1<5;K1++)c0(N,B,f0(N,B,K0.a,K0.b,G,I1,w1,c2,D0),K0.a,K0.b,G,I1,D0,W0);M=1,p=0}}while(B1=i2,c0(N,B,f0(N,B,K0.a,K0.b,G,I1,w1,c2,D0),K0.a,K0.b,G,I1,D0,W0),O0(f0(N,B,K0.a,K0.b,G,I1,w1,c2,D0),K0,K0.a,G.a1,G.a3,G.a7,K0.b,G.c,G.d,G.f,G.g,G.h,w1,c2,I1,B,O1),L1=K0.a,(i2=K0.b)!=0&&(z1=Math.abs((-c2+i2)/i2),w1=L1,c2=i2),i2!=0)}(U0,y0,A1,C,T,R0,b0,a0,G0,e,g0,_0),a1=a0.a,U1=a0.b,0<A1.NZ)return;if(m=Q=1,P1*=.25,b||!U)m=0;else for(y=0;y<y0;y++)_0[y]=u[y]}if(m!=0){if(a0.a=v2,m=function(N,B,o0,x0,n0,W0,V0,K0,O1){var D0,G,I1,Z1,B1,z1,w1,L1,c2,i2,b2,K1=x0-1;for(B.NZ=b2=c2=0,w1=o0.a;;){for(z1=n0[0],V0[0]=z1,i2=1;i2<W0;i2++)V0[i2]=z1=z1*w1+n0[i2];for(I1=Math.abs(z1),Z1=Math.abs(w1),D0=.5*Math.abs(V0[0]),i2=1;i2<W0;i2++)D0=D0*Z1+Math.abs(V0[i2]);if(I1<=20*N*(2*D0-I1)){B.NZ=1,B.szr=w1,B.szi=0;break}if(10<++b2)break;if(2<=b2&&Math.abs(L1)<=.001*Math.abs(-L1+w1)&&B1<I1){c2=1,B.a=w1;break}for(B1=I1,O1[0]=G=K0[0],i2=1;i2<x0;i2++)O1[i2]=G=G*w1+K0[i2];if(Math.abs(G)>10*Math.abs(K0[K1])*N)for(L1=-z1/G,K0[0]=V0[0],i2=1;i2<x0;i2++)K0[i2]=L1*O1[i2-1]+V0[i2];else for(K0[0]=0,i2=1;i2<x0;i2++)K0[i2]=O1[i2-1];for(G=K0[0],i2=1;i2<x0;i2++)G=G*w1+K0[i2];w1+=L1=Math.abs(G)>10*Math.abs(K0[K1])*N?-z1/G:0}return c2}(U0,A1,a0,y0,G0,b0,R0,_0,e),v2=a0.a,0<A1.NZ)return;if(b=1,D1*=.25,m!=0){C=-(v2+v2),T=v2*v2;continue}}for(y=0;y<y0;y++)_0[y]=u[y];if(!z||Q)break}X(b0,i1,L0,G0,R0,a0),R=f0(U0,y0,a1=a0.a,U1=a0.b,g0,_0,i1,L0,e)}J1=a,Y1=H1,T1=e2,$1=R1}}(function(U0,h0,l0,F0){for(var L0,_0,y0,G0,b0,R0,i1,A1,a1,U1,D1,P1,Y1,$1,T1=U0.Degree,J1=.017453292519943295,v2=Math.LN2,H1=U0.Degree+1,R1=new Array(H1),v1=new Array(H1),e2=new Array(H1),t2=new Array(H1),C=new Object,T=new Object,a=1;L0=a,1<(R0=1+(a/=2)););var w=Number.MIN_VALUE/L0,y=Math.cos(94*J1),v=Math.sin(94*J1),U=Math.sqrt(.5),b=-U;for(T.NZ=a1=0,T.szr=T.szi=T.lzr=T.lzi=0;h0[T1]==0;)l0[a1]=F0[a1]=0,T1--,a1++;for(Y1=T1+1;1<=T1;){if(T1<=2){T1<2?(l0[U0.Degree-1]=-(h0[1]/h0[0]),F0[U0.Degree-1]=0):(Y(h0[C.li=C.lr=C.si=C.sr=0],h0[1],h0[2],C),l0[U0.Degree-2]=C.sr,F0[U0.Degree-2]=C.si,l0[U0.Degree-1]=C.lr,F0[U0.Degree-1]=C.li);break}for(G0=0,b0=Number.MAX_VALUE,R=0;R<Y1;R++)G0<(z=Math.abs(h0[R]))&&(G0=z),z!=0&&z<b0&&(b0=z);if(((D1=w/b0)<=1&&10<=G0||1<D1&&Number.MAX_VALUE/D1>=G0)&&(D1=D1==0?Number.MIN_VALUE:D1,D1=Math.floor(Math.log(D1)/v2+.5),(y0=Math.pow(2,D1))!=1))for(R=0;R<Y1;R++)h0[R]*=y0;for(var R=0;R<Y1;R++)v1[R]=Math.abs(h0[R]);v1[T1]=-v1[T1],P1=T1-1,z=Math.exp((Math.log(-v1[T1])-Math.log(v1[0]))/T1),Q=z=v1[P1]!=0&&(Q=-v1[T1]/v1[P1])<z?Q:z;do for(var z,Q=.1*(z=Q),a0=v1[0],R=1;R<Y1;R++)a0=a0*Q+v1[R];while(0<a0);do for(var g0=a0=v1[0],R=1;R<T1;R++)g0=z*g0+(a0=z*a0+v1[R]);while(z-=_0=(a0=z*a0+v1[T1])/g0,.005<Math.abs(_0/z));for(var e=z,R=1;R<T1;R++)R1[R]=(T1-R)*h0[R]/T1;for(R1[0]=h0[0],a=h0[T1],R0=h0[P1],$1=R1[P1]==0?1:0,U1=0;U1<5;U1++)if(i1=R1[P1],$1){for(R=0;R<P1;R++)R1[a1=P1-R]=R1[a1-1];$1=(R1[0]=0)==R1[P1]?1:0}else{for(var u=-a/i1,R=0;R<P1;R++)R1[a1=P1-R]=u*R1[a1-1]+h0[a1];R1[0]=h0[0],$1=Math.abs(R1[P1])<=Math.abs(R0)*L0*10?1:0}for(R=0;R<T1;R++)t2[R]=R1[R];for(U1=1;U1<=20;U1++){if(A1=-v*b+y*U,b=v*U+y*b,q(L0,H1,20*U1,A1=e*(U=A1),e,R1,T1,h0,Y1,e2,-2*A1,T),T.NZ!=0){for(l0[a1=U0.Degree-T1]=T.szr,F0[a1]=T.szi,T1=(Y1-=T.NZ)-1,R=0;R<Y1;R++)h0[R]=e2[R];T.NZ!=1&&(l0[a1+1]=T.lzr,F0[a1+1]=T.lzi);break}for(R=0;R<T1;R++)R1[R]=t2[R]}if(20<U1){U0.Degree-=T1;break}}})(O,_,W,S);var J=S.length;for(d0=0;d0<J;d0++){var k=o1(S[d0],h+8),S0=o1(W[d0],h+8);S0=2<h-String(S0).length?S0:W[d0];var E0=k<0?"-":"";S0===0&&(S0=""),k===0&&(k=""),k=Math.abs(k)===1?E0+"i":k?k+"*i":"",k=S0&&k?S0+"+"+k:S0+k,W[d0]=k.replace(/\+\-/g,"-")}return W}(k0,H0).concat(d),M0=0;M0<0;M0++)s0.unshift(0);return s0}var f,d=[];if(i instanceof p0&&i.isPoly()){if(i.distributeMultiplier(),i.group===N0&&(f=A.Utils.arrayMin(x1(i.symbols)),f=i.symbols[f].clone().toUnitMultiplier(),i=r.expand(r.divide(i,f)),d.push(0)),i.group===A.groups.S)return[0];i.group===A.groups.PL&&(H=x1(i.symbols),E=A.Utils.arrayMin(H),i=A.PARSER.divide(i,A.PARSER.parse(i.value+"^"+E)));for(var E=x1(i.symbols).sort().pop(),L=i.group===A.groups.PL?i.symbols:i.symbols[E],x=L.group,H=x===N1?[L.power.toDecimal()]:x1(L.symbols),u0=[],q0=A.Utils.arrayMax(H),d0=1;d0<=q0;d0++){var Q0=0;H.indexOf(d0+"")!==-1&&(Q0=(x===N1?L:L.symbols[d0]).multiplier),u0.unshift(Q0)}return u0.push(i.symbols[q1].multiplier),L.group===N1&&(u0[0]=L.multiplier),l(u0,0,q0)}if(A.Utils.isArray(i)){for(var t1=i,u0=[],H=[],l1=0,d0=0;d0<t1.length;d0++){for(var r0=t1[d0][0],w0=t1[d0][1],I0=w0-l1-1,i0=0;i0<I0;i0++)u0.unshift(0);u0.unshift(r0),w0!==0&&H.push(w0),l1=w0}return l(u0,0,q0=Math.max.apply(void 0,H))}throw new A.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!")},roots:function(i){return i.isConstant(!0,!0)?A.Utils.nroots(i):(i=Z.proots(i).map(function(h){return r.parse(h)}),A.Vector.fromArray(i))},froot:function(i,h,l){return function(f){for(var d=l||A.Utils.build(A.Calculus.diff(i.clone())),E=i instanceof Function?i:A.Utils.build(i),L=!1,x=0;!L;){var H=f-E(f)/d(f),u0=Math.abs(H)-Math.abs(f);f=H,Math.abs(u0)<1e-12?L=!0:1e4<x&&(L=!(f=null)),x++}return f}(Number(h))},quad:function(i,h,l){function f(d,E,L,x){return r.parse("-("+E+"+"+x+"*sqrt(("+E+")^2-4*("+d+")*("+L+")))/(2*"+d+")")}return[f(i,h,l,1),f(i,h,l,-1)]},sumProd:function(i,h){return Z.quad(-h,i,-1).map(function(l){return l.invert()})},coeffs:function(i,h,l){h=String(h),i=r.expand(i),l=l||[new p0(0)],i.group===T0&&i.contains(h,!0)&&r.error("Unable to get coefficients using expression "+i.toString());var f,d=f1(i);if(d.length!==1||d[0]!==h||i.isImaginary())h||r.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),d.indexOf(h)===-1?l[0]=r.add(i,l[0]):(l=l||[new p0(0)],i.group===e0?((f=i.symbols[h])||r.error("Expression is not a polynomial!"),d=Number(f.power),((u0=r.divide(i.clone(),f.clone())).contains(h,!0)||d<0||!z0(d))&&r.error("Expression is not a polynomial!"),(H=l[d])&&(u0=r.add(H,u0)),l[d]=u0):i.group===$&&i.each(function(q0){Z.coeffs(q0.clone(),h,l)},!0));else for(var E=new c1(i).coeffs.map(function(q0){return new p0(q0)}),L=0,x=E.length;L<x;L++){var H,u0=E[L];(H=l[L])&&(u0=r.add(H,u0)),l[L]=u0}for(L=0,x=l.length;L<x;L++)l[L]===void 0&&(l[L]=new p0(0));return l},polyPowers:function(i,h,l){if(l=l||[],(E=i.group)===N0&&h===i.value)l=l.concat(x1(i.symbols));else if(E===$)for(var f in i.symbols){var d=i.symbols[f],E=d.group,f=d.value;E===N1&&h===f?l.push(d.power):E===N0||E===$?l=Z.polyPowers(d,h,l):E===e0&&d.contains(h)?(d=d.symbols[h])&&l.push(d.power):E!==F&&h===f||l.push(0)}else E===e0&&i.contains(h)&&l.push(A.Utils.decompose_fn(i,h,!0).x.power);return A.Utils.arrayUnique(l).sort()},Factor:{split:function(i){var h=new p0(1),l=new p0(1);return Z.Factor.factor(i,new b1).each(function(f){var d=r.parse(f);f.isConstant(!0)?h=r.multiply(h,d):l=r.multiply(l,d)}),[h,l]},mix:function(i,h){for(var l=x1(i),f=l.length,d=[],E=0;E<f;E++){for(var L=l[E],x=i[L],H=d.length,u0=0;u0<H;u0++){var q0=d[u0]*L;d.push(q0),h&&d.push(-q0)}for(u0=1;u0<=x;u0++)d.push(Math.pow(L,u0))}return d},common:function(i,h){try{if(i.group===$){for(var l=r.expand(i.clone(),!0).collectSymbols(null,null,function(q0,d0){return(d0.length||1)-(q0.length||1)}),f={},d=[],E=0;E<l.length;E++){var L=l[E];d.push(L.multiplier.clone()),L.each(function(q0){var d0=Number(q0.power);if(isNaN(d0))throw new Error("exiting");q0.value in f?(d0<f[q0.value][0]&&(f[q0.value][0]=d0),f[q0.value][1].push(q0)):f[q0.value]=[d0,[q0]]})}var x,H=new p0(1);for(x in f)f[x][1].length===l.length&&(H=r.multiply(H,r.pow(new p0(x),new p0(f[x][0]))));var u0=A.Math2.QGCD.apply(null,d);if(!u0.equals(1))for(h.add(new p0(u0)),E=0;E<l.length;E++)l[E].multiplier=l[E].multiplier.divide(u0);if(!H.equals(1))for(h.add(H),i=new p0(0),E=0;E<l.length;E++)i=r.add(i,r.divide(l[E],H.clone()))}}catch{}return i},zeroes:function(i,h){function l(){throw new A.exceptions.ValueLimitExceededError("Exiting")}try{for(var f,d,E,L=(i=r.expand(i.clone())).toString(),x=f1(i),H=new p0(0),u0=[],q0=[],d0=0,Q0=x.length;d0<x.length;d0++){for(var t1={},l1=0;l1<Q0;l1++)d0!==l1&&(t1[x[l1]]=0);var r0,w0=(r0=r.parse(L,t1)).power;z0(w0)||l(),u0.push(r0),q0.push(r0.power)}for(A.Utils.allSame(q0)?(d=i.length,(E=u0.length)===2&&(f=new $0(q0[0]/(d-1))),E===3&&(f=new $0(q0[0]/Math.round((Math.sqrt(8*d-1)-3)/2)))):f=A.Math2.QGCD.apply(null,q0),z0(f)||l(),d0=0;d0<u0.length;d0++){var I0=u0[d0],i0=I0.power.clone().divide(f);I0.multiplier=new $0(Math.pow(I0.multiplier,1/i0)),I0.power=f.clone(),H=r.add(H,I0)}if(H.group!==$)return i;for(;;){var k0=Z.div(i.clone(),H.clone());if(!k0[1].equals(0)||(i=k0[0],h.add(H.clone()),i.equals(1)))break}}catch{}return i},factor:function(i,E){if(i.isConstant())return A.Math2.factor(i);var l,f,d=r.parse(i),E=Z.Factor._factor(d,E);return E.equals(i)||E.group===e0&&(l=new p0(1),i=r.parse(E.power),f=r.parse(E.multiplier),E.toUnitMultiplier(),E.multiplier.lessThan(0)&&(l.negate(),E.negate()),E.each(function(L){L=r.parse(Z.Factor._factor(L)),L.group===e0?(f=r.multiply(f,p0.create(L.multiplier)),L.each(function(x){x=r.parse(Z.Factor._factor(x)),l=r.multiply(l,x),x.group===e0&&(f=r.multiply(f,p0.create(x.multiplier)))})):l=r.multiply(l,L)}),E=r.pow(r.multiply(f,l),i)),E},quadFactor:function(i,h){if(i.isPoly()&&Z.degree(i.equals(2))){var l=A.Utils.variables(i)[0],f=Z.coeffs(i,l),d=Z.Factor._factor(f[2].clone());if(d.group===e0){var E=d.collectSymbols();if(2<E.length)return i;var x=r.multiply(r.parse(f[0]),r.parse(E[0])),L=r.parse(f[1]).negate(),d=r.parse(E[1]),x=Z.quad(d,L,x).filter(function(u0){if(A.Utils.isInt(u0))return u0});x.length===1&&(x=x[0],f=r.divide(f[0],r.parse(x)),A.Utils.isInt(f)&&(h.add(r.parse(X0("({0})*({1})+({2})",E[1],l,f))),h.add(r.parse(X0("({0})*({1})+({2})",E[0],l,x))),i=new p0(1)))}}return i},cubeFactor:function(i,h){var l,f,d,E,L,x;return!i.isComposite()||(x=i.collectSymbols()).length===2&&(l=x[0].sign(),f=x[0].clone().abs(),d=x[1].sign(),E=x[1].clone().abs(),f.isCube()&&E.isCube()&&(l<d&&([l,d]=[d,l],[f,E]=[E,f]),L=r.parse(f.getNth(3)),x=r.parse(E.getNth(3)),L=r.multiply(r.expand(r.pow(f.clone().toUnitMultiplier(),r.parse("1/3"))),L),x=r.multiply(r.expand(r.pow(E.clone().toUnitMultiplier(),r.parse("1/3"))),x),l===1&&d===-1?(h.add(r.parse(X0("(({0})-({1}))",L,x))),h.add(r.parse(X0("(({0})^2+({0})*({1})+({1})^2)",L,x))),i=p0(1)):l===1&&d===1&&(h.add(r.parse(X0("(({0})+({1}))",L,x))),h.add(r.parse(X0("(({0})^2-({0})*({1})+({1})^2)",L,x))),i=p0(1)))),i},_factor:function(i,h){var l;if(i.group,i.group===X1){var f=i.args[0];if(f.group===N1&&f.isSimple())return i}else if(i.group===N1&&i.isSimple())return i;i.group===$&&(i.distributeMultiplier(!0),l=new p0(0),i.each(function(O){(O.group===$&&O.power.greaterThan(1)||O.group===e0)&&(O=r.expand(O)),l=r.add(l,O)}),l.power=i.power,i=l),f=(i=i.group===X1&&i.fname!=="sqrt"?A.Utils.evaluate(i):i).clone();try{if(i.group===e0){var d=r.parse(i.power),E=Z.Simplify.strip(i.getDenom()),L=Z.Simplify.strip(i.getNum()),x=E.pop(),H=L.pop();if(H.equals(i))return i;var u0=Z.Factor.factor(H),q0=Z.Factor.factor(x),d0=Z.Simplify.unstrip(L,u0),Q0=Z.Simplify.unstrip(E,q0);return S=r.divide(d0,Q0)}if(i.group===N1)return i;if(i.isConstant())return i.equals(1)?i.clone():A.Math2.factor(i);if(d=i.power.clone(),!z0(d)||d.lessThan(0)&&i.group===X1)return i;var t1=d.sign();i.toLinear(),h=h||new b1;var l1={};i=r.parse(A.Utils.subFunctions(i,l1)),0<x1(l1).length&&(h.preAdd=function(O){return r.parse(O,A.Utils.getFunctionsSubs(l1))}),i.isLinear()||(h.pFactor=i.power.toString(),i.toLinear());var r0=f1(i);i.isImaginary()&&r0.push(A.Settings.IMAGINARY);var w0=1<r0.length;if(w0){var I0=!0,i0=!0;if(i.each(function(O){O.group!==N1&&(I0=!1),O.multiplier.equals(1)||(i0=!1)}),I0&&i0)return r.pow(r.parse(i,A.Utils.getFunctionsSubs(l1)),r.parse(d))}var k0=new b1;i=Z.Factor.coeffFactor(i,k0),k0.each(function(O){A0(d)&&O.lessThan(0)&&O.negate(),t1<0&&O.invert(),h.add(O)});var d1=new b1;if(i=Z.Factor.powerFactor(i,d1),d1.each(function(O){t1<0&&O.invert(),h.add(O)}),w0)i=Z.Factor.cubeFactor(i,h),i=Z.Factor.mfactor(i,h),h.each(function(O){t1<0&&O.power.negate()});else{var H0=r0[0];i=Z.Factor.squareFree(i,h,H0);var s0=new b1;i=Z.Factor.trialAndError(i,s0,H0);var M0,n1=s0.toSymbol();if(n1.equals(f))return n1;for(M0 in s0.factors){var m1=s0.factors[M0];h.add(r.pow(m1,r.parse(d)))}i.equals(f)&&(i=Z.Factor.quadFactor(i,h))}i=r.parse(i,A.Utils.getFunctionsSubs(l1));var _=h.length===1;h.add(r.pow(i,r.parse(d)));var S=h.toSymbol();return S=_&&i.equals(1)&&S.isLinear()?r.pow(S,r.parse(d)):S}catch{return f}},reduce:function(i,h){if(i.group===$&&i.length===2){var l=i.collectSymbols().sort(function(d0,Q0){return Q0.multiplier-d0.multiplier});if(l[0].power.equals(l[1].power)){var f=r.parse(l[0].power),d=l[0].clone().toLinear(),E=l[1].clone().toLinear();h.add(r.add(d.clone(),E.clone())),E.negate();for(var L=Number(f),q0=new p0(0),x=1;x<=L;x++)var H=r.pow(d.clone(),r.subtract(f.clone(),new p0(x))),u0=r.pow(E.clone(),r.subtract(new p0(x),new p0(1))),q0=r.add(q0,r.multiply(H,u0));return q0}}return i},squareFree:function(i,h,d){if(i.isConstant()||i.group===N1)return i;var f=new c1(i,d).squareFree(),d=f[2];return d===1?i:(i=f[1].toSymbol(),i.power=i.power.multiply(new $0(d)),h.add(Z.Factor.factor(i)),Z.Factor.squareFree(f[0].toSymbol(),h))},powerFactor:function(i,h){if(i.group!==N0||i.previousGroup===T0)return i;var l=x1(i.symbols);if(!A.Utils.allNumeric(l))return i;var l=A.Utils.arrayMin(l),f=new p0(0),d=r.parse(i.value+"^"+l);return i.each(function(E){E=r.divide(E,d.clone()),f=r.add(f,E)}),h.add(d),f},coeffFactor:function(i,h){var l,f,d,E;return i.isComposite()&&((l=A.Math2.QGCD.apply(null,i.coeffs())).equals(1)?((f=function(L){var x;return L.group===e0?(x=0,L.each(function(H){x+=H.power})):x=Number(L.power),x})(E=(d=i.collectSymbols(null,null,null,!0).sort(function(L,x){return L.isConstant(!0)?1:x.power-L.power}))[0])>f(d[1])||d[1].isConstant(!0))&&E.multiplier.lessThan(0)&&(h.add(new p0(-1)),i.each(function(L){L.negate()},!0)):(i.each(function(L){L.isComposite()?L.each(function(x){x.multiplier=x.multiplier.divide(l)}):L.multiplier=L.multiplier.divide(l)}),i.updateHash()),h&&h.add(new p0(l))),i},trialAndError:function(i,h,l){var f=i.clone();try{var d=[];if(i.isConstant()||i.group===N1)return i;for(var E=new c1(i,l),L=E.coeffs[0],x=A.Math2.ifactor(L),H=Z.proots(i),u0=0;u0<H.length;u0++){var q0=H[u0],d0=1;if(!isNaN(q0)){for(var Q0 in x){var t1=A.Utils.round(Math.log(Q0)/Math.log(Math.abs(q0)),8);if(z0(t1)){q0=Q0,d0=t1;break}}var l1=new $0(q0),r0=[new $0(l1.num).negate()];r0[d0]=new $0(l1.den);var w0=c1.fromArray(r0,E.variable).fill(),I0=E.divide(w0);I0[1].equalsNumber(0)&&(E=I0[0],d.push(w0.toSymbol()))}}return E.equalsNumber(1)||(E=Z.Factor.search(E,h)),d.forEach(function(i0){h.add(i0)}),E.toSymbol()}catch{return f}},search:function(i,h,l){l=l||10;function f(k0,d1,H0,s0){return(H0=c1.fit(k0,d1,H0,l,s0,d))&&1<H0.coeffs.length&&(s0=i.divide(H0),s0[1].equalsNumber(0))?(h.add(H0.toSymbol()),[s0[0],H0]):null}var d=i.variable,E=i.coeffs[0],L=A.Math2.ifactor(E),x=i.lc(),H=A.Math2.ifactor(x),u0=i.sub(l),q0=A.Math2.ifactor(u0),d0=Z.Factor.mix(q0,u0<0),Q0=Math.ceil(i.coeffs.length/2),t1=x.lessThan(0),l1=E.lessThan(0);for(L[H[1]=1]=1;Q0--;)for(var r0 in H)for(var w0 in L)for(var I0=0;I0<d0.length;I0++){var i0=f(r0,w0,d0[I0],Q0);if(i0)return i=i0[0],i=A.Utils.isPrime(i.sub(l))?i:Z.Factor.search(i,h);i0||(t1&&l1?i0=f(-r0,-w0,d0[I0],Q0):t1?i0=f(-r0,w0,d0[I0],Q0):l1&&(i0=f(r0,-w0,d0[I0],Q0)))}return i},mSqfrFactor:function(i,h){if(i.group!==X1)for(var l=f1(i).reverse(),f=0;f<l.length;f++)do if(l[f]!==i.value){var d=A.Calculus.diff(i,l[f]),E=Z.Factor.coeffFactor(d);if(E.equals(0))break;var L=!0;if(E.isConstant()&&i.isComposite()&&i.each(function(u0){u0.multiplier%E!=0&&(L=!1)},!0),L){var x=Z.div(i,E.clone()),H=x[1].equals(0);if(i.equals(x[0])&&x[1].equals(0))break;if(x[0].isConstant()){h.add(x[0]);break}}else H=!1;H&&(h.add(x[0]),i=E)}else h.add(i),i=new p0(1);while(H);return i},sqdiff:function(i,h){if(i.isConstant("all"))return i;try{var l,f,d,E,L,x=function(q0){return A.Utils.block("POSITIVE_MULTIPLIERS",function(){return p0.unwrapPARENS(F1.sqrt(F1.abs(q0)))},!0)},H=A.Utils.separate(i.clone()),u0=[];for(l in H)l!=="constants"&&u0.push(H[l]);if(u0.sort(function(q0,d0){return d0.power-q0.power}),u0.length===2){if(L=u0.pop(),f=u0.pop(),A0(L.power)&&A0(f.power)&&L.sign()===f.sign()&&L.group===N1&&f.group===N1)throw new Error("Unable to factor");L.isComposite()&&f.power.equals(2)?(f=x(f),(d=Z.Factor.factor(r.add(L,H.constants))).power.equals(2)&&(d.toLinear(),h.add(r.subtract(d.clone(),f.clone())),h.add(r.add(d,f)),i=new p0(1))):(L=L.powSimp(),f=f.powSimp(),L.group!==N1&&L.fname!==""||!L.power.equals(2)||f.group!==N1&&f.fname!==""||!f.power.equals(2)||H.constants||(L.multiplier.lessThan(0)&&(E=f,f=L,L=E),L.multiplier.greaterThan(0)&&(L=x(L),f=x(f)),h.add(r.subtract(L.clone(),f.clone())),h.add(r.add(L,f)),i=new p0(1)))}}catch{}return i},mfactor:function(i,h){if(i.group===X1){var l,f;i.fname==="sqrt"?(l=new b1,f=Z.Factor.common(i.args[0].clone(),l),f=Z.Factor.coeffFactor(f,l),i=r.multiply(r.symfunction("sqrt",[f]),r.parse(i.multiplier)),l.each(function(d1){i=r.multiply(i,r.parse(A.Utils.format("sqrt({0})",d1)))})):h.add(i)}else{i=Z.Factor.mSqfrFactor(i,h);for(var d,E=f1(i),L=i.collectSymbols().map(function(d1){return p0.unwrapSQRT(d1)}),x={},H={},u0=E.length,q0=L.length,d0=0;d0<u0;d0++){var Q0=E[d0];x[Q0]=new p0(0);for(var t1=0;t1<q0;t1++){var l1,r0=L[t1];r0.contains(Q0)&&(l1=(r0.value===Q0?r0:r0.symbols[Q0]).power.toDecimal(),(!H[Q0]||l1<H[Q0])&&(H[Q0]=l1),x[Q0]=r.add(x[Q0],r0.clone()))}}for(d in x){var w0=r.parse(d+"^"+H[d]),I0=r.divide(x[d],w0),i0=r.expand(I0);if(i0.equals(1)||(I0=Z.div(i.clone(),i0),I0[0].equals(0)))break;if(I0[1].equals(0)){var k0=!1;if(I0[0].each(function(d1){z0(d1.multiplier)||(k0=!0)}),k0){I0[1]=r.expand(r.multiply(I0[1],i0));break}}if(i0=z0(i0)&&i0.lessThan(0),I0[1].equals(0)&&!i0)return i0=Z.div(i.clone(),I0[0].clone()),(w0=i0[0]).equals(0)||(i=i0[1],w0.equals(-1)&&!i.equals(0))?i:(i0=I0[0],i.equals(i0)?(I0=Z.Factor.reduce(i0,h),i.equals(I0)?I0:Z.Factor.mfactor(I0,h)):(h.add(i0),i.equals(0)?w0:w0.isConstant("all")?(h.add(w0),w0):Z.Factor.mfactor(w0,h)))}}return i=Z.Factor.sqdiff(i,h),i=Z.Factor.zeroes(i,h)}},allLinear:function(i){for(var h=i.length,l=0;l<h;l++)if(!Z.isLinear(i[l]))return!1;return!0},isLinear:function(i){var h=!1,l=i.group;if(l===N0||l===$)for(var f in h=!0,i.symbols){var d=i.symbols[f],f=d.group;if(f!==X1&&f!==T0||(h=!1),f===e0)h=f1(d).length===1;else if(f===N0||f===$)h=Z.isLinear(d);else if(d.group!==F&&d.power.toString()!=="1"){h=!1;break}}else l===N1&&i.power===1&&(h=!0);return h},gcd:function(){var i=arguments.length===1&&arguments[0]instanceof A.Vector?arguments[0].elements:A.Utils.arguments2Array(arguments);if(i.length===0)return new p0(1);if(i.length===1)return i[0];for(var h=[],l=!1,f=0;f<i.length;f++)if(i[f].group===X1&&i[f].fname==="gcd")(i=i.concat(arguments[f].args)).splice(f,1);else{var d=f1(i[f]);if(A.Utils.haveIntersection(d,h)){l=!0;break}h=h.concat(d)}if(l||h.length===0){if(i.every(function(L){return L.getDenom().equals(1)})){for(var E=i[0],f=1;f<i.length;f++)E=Z.gcd_(i[f],E);return E}return r.divide(Z.gcd.apply(null,i.map(function(L){return L.getNum()})),Z.lcm.apply(null,i.map(function(L){return L.getDenom()})))}return r.symfunction("gcd",i)},gcd_:function(i,h){if(i.group!==X1&&i.group!==_1||(i=A.Utils.block("PARSE2NUMBER",function(){return r.parse(i)})),h.group===X1&&(h=A.Utils.block("PARSE2NUMBER",function(){return r.parse(h)})),i.isConstant()&&h.isConstant())return new p0(A.Math2.QGCD(new $0(+i),new $0(+h)));var l=r.multiply(i.getDenom()||new p0(1),h.getDenom()||new p0(1)).invert();if(i=r.multiply(i.clone(),l.clone()),h=r.multiply(h.clone(),l.clone()),i=r.expand(i),h=r.expand(h),i.group===e0||h.group===e0){var f=r.divide(i.clone(),h.clone());if(!(H=r.multiply(h.clone(),f.getDenom().invert())).equals(1))return H}if(i.group===T0||h.group===T0){var f=new p0(A.Math2.GCD(i.multiplier,h.multiplier)),d=Z.gcd_(i.value===q1?new p0(1):r.parse(i.value),h.value===q1?new p0(1):r.parse(h.value)),E=Z.gcd_(r.parse(i.power),r.parse(h.power));return r.multiply(f,r.pow(d,E))}if(i.length<h.length&&(H=i,i=h,h=H),d=f1(i),E=f1(h),d.length===E.length&&d.length===1&&d[0]===E[0]||d.length===1&&E.length===0||d.length===0&&E.length===1)return i=new c1(i),h=new c1(h),r.divide(i.gcd(h).toSymbol(),l);var L,x=[];for(i.each(function(q0){x.push(q0.multiplier)}),h.each(function(q0){x.push(q0.multiplier)});!h.equals(0);){var H=h.clone();if(i=i.clone(),L=Z.div(i,H),h=L[1],L[0].equals(0))return r.divide(new p0(A.Math2.QGCD(i.multiplier,h.multiplier)),l);i=H}var u0=A.Math2.QGCD.apply(void 0,x);return u0.equals(1)||i.each(function(q0){q0.multiplier=q0.multiplier.divide(u0)}),!i.equals(1)||i.isConstant()||h.isConstant()?r.divide(i,l):r.divide(r.symfunction("gcd",arguments),l)},lcm:function(){var i;arguments.length===1?arguments[0]instanceof A.Vector?i=arguments[0].elements:r.error("lcm expects either 1 vector or 2 or more arguments"):i=A.Utils.arguments2Array(arguments);var h=i.reduce(function(f,d){return r.multiply(f,d.clone())},new p0(1)),l=function(f,d){d=Number(d);for(var E,L,x=[],H=Math.pow(2,f.length),u0=d;u0<H;u0++){for(E=[],L=f.length-1;(u0&1<<L)!=0&&E.push(f[L]),L--;);E.length===d&&x.push(E)}return x}(arguments,arguments.length-1).map(function(f){return f.reduce(function(d,E){return r.multiply(d,E.clone())},new p0(1))}),l=i.every(function(f){return A.Utils.isVariableSymbol(f)})?r.symfunction("gcd",A.Utils.arrayUnique(l)):Z.gcd.apply(null,l);return r.divide(h,l)},divide:function(i,h){var l=A.Algebra.Factor.factor(i.clone()),f=l.getDenom();return f.isConstant("all")?f=new p0(1):i=r.expand(p0.unwrapPARENS(r.multiply(l,f.clone()))),i=Z.div(i,h),h=r.divide(i[1],h),r.divide(r.add(i[0],h),f)},div:function(i,h){var l,f,d=[new p0(0),i.clone()];try{if(h.isConstant("all"))return i.each(function(F0){F0.multiplier=F0.multiplier.divide(h.multiplier)}),[i,new p0(0)];if(i=r.expand(i),h=r.expand(h),i.group===N1&&h.group===$){var E=i.value,L=A.Utils.decompose_fn(h.clone(),E,!0);if(i.isLinear()&&L.x&&L.x.isLinear()&&h.isLinear()){var x=p0.create(i.multiplier);return[r.divide(x.clone(),L.a.clone()),r.divide(r.multiply(x,L.b),L.a).negate()]}}if(i.group===N1&&h.group===N1){var H=r.divide(i.clone(),h.clone());return H.isConstant()?[H,new p0(0)]:[new p0(0),i.clone()]}var u0,q0,d0=i.hasFunc(),Q0=h.hasFunc(),t1=!1;(d0||Q0)&&(t1=!0,u0={},i=r.parse(A.Utils.subFunctions(i,u0)),h=r.parse(A.Utils.subFunctions(h,u0)),q0=A.Utils.getFunctionsSubs(u0));var l1=A.Utils.arrayUnique(f1(i).concat(f1(h)));if((i.isImaginary()||h.isImaginary())&&l1.push(A.Settings.IMAGINARY),l1.length===1)var r0=(E0=new c1(i).divide(new c1(h)))[0].toSymbol(),w0=E0[1].toSymbol();else{l1.push(q1);var I0=function(F0){for(var y0=new p0(0),L0=0;L0<F0.length;L0++)var _0=F0[L0].toSymbol(),y0=r.add(y0,_0);return y0},i0=function(F0,L0){var _0,y0=Math.max.apply(null,F0.terms),G0=0;if(!L0){for(var b0=0;b0<F0.terms.length;b0++)if(F0.terms[b0].equals(y0)&&(_0=b0,G0++),1<G0)return}if(L0){for(b0=0;b0<F0.terms.length;b0++)if(F0.terms[b0].equals(y0)){_0=b0;break}}return[y0,_0,F0]},k0=function(F0,L0){var _0=F0[L0=L0||0],y0=F0.length;if(_0){for(var G0,b0=i0(_0),R0=L0+1;R0<y0;R0++){var i1=F0[R0],A1=_0.sum.equals(i1.sum);if(!A1&&b0)break;if(A1){for(var a1,U1,D1,P1,Y1=_0.terms.length,$1=0;$1<Y1;$1++){var T1=_0.terms[$1],J1=i1.terms[$1];a1!==void 0&&!T1.greaterThan(a1)||(a1=T1,D1=$1),U1!==void 0&&!J1.greaterThan(U1)||(U1=J1,P1=$1)}var v2=a1.subtract(i1.terms[D1]),A1=U1.subtract(_0.terms[P1]);if(v2<A1){b0=[U1,P1,i1];break}if(A1<v2){b0=[a1,D1,_0];break}}else if(b0=i0(i1))break;b0=i0(i1)}if(!b0)return i0(F0[0],!0);for(R0=0;R0<n1.length;R0++){var H1,R1=n1[R0].terms;if((H1=b0[1])===R1.length-1)return;if(!(G0=R1[H1]).equals(0))break}return G0.equals(0)?k0(F0,++L0):b0}},d1=A.Utils.toMapObj(l1),H0=function(F0,L0){return L0.sum.subtract(F0.sum)},s0=function(F0,L0){if(!F0||!L0)return!1;for(var _0=0;_0<F0.terms.length;_0++)if(F0.terms[_0].lessThan(L0.terms[_0]))return!1;return!0},M0=i.tBase(d1).sort(H0),n1=h.tBase(d1).sort(H0),m1=s0(M0[0],n1[0])&&M0[0].count>n1[0].count?n1:M0,_=k0(m1),S=[];if(_){var W=_[1],O=function(b0,G0){var _0=b0.len(),y0=G0.len(),G0=G0.terms[W],b0=b0.terms[W];return _0<y0&&G0.greaterThan(b0)?y0-_0:G0.subtract(b0)},W=function(F0,L0){for(var _0=[],y0=0;y0<F0.length;y0++)for(var G0=F0[y0],b0=0;b0<G0.terms.length;b0++){var R0=_0[b0],i1=G0.terms[b0];y0===0?_0[b0]=i1:R0&&!R0.equals(i1)&&(_0[b0]=void 0)}for(y0=0;y0<_0.length;y0++)if((G0=_0[y0])&&!G0.equals(0))return y0;return L0}(M0,W);M0.sort(O),n1.sort(O);var X=n1[0],f0=M0[0],c0=new Z0(new $0(1),[],f0.map);if(X.sum.greaterThan(f0.sum)&&1<f0.len())for(var O0=0;O0<f0.terms.length;O0++){var Y=X.terms[O0].subtract(f0.terms[O0]);if(Y.equals(0))c0.terms[O0]=new $0(0);else{var q=Y.add(new $0(1));c0.terms[O0]=Y;for(var J=0;J<M0.length;J++)M0[J].terms[O0]=M0[J].terms[O0].add(q)}}for(var k=s0(M0[0],n1[0]),S0=0;k&&(f=n1,!(l=M0)[0].sum.equals(f[0].sum)||l.length>=f.length);){if(200<S0++)throw new A.exceptions.InfiniteLoopError("Unable to compute!");var E0=M0[0].divide(n1[0]);for(S.push(E0),M0.shift(),O0=1;O0<n1.length;O0++){var U0=n1[O0].multiply(E0).generateImage(),h0=M0.length;for(h0===0&&(U0.coeff=U0.coeff.neg(),M0.push(U0),M0.sort(O)),J=0;J<h0;J++){var l0=M0[J];if(l0.getImg()===U0.getImg()){l0.coeff=l0.coeff.subtract(U0.coeff),l0.coeff.equals(0)&&(A.Utils.remove(M0,J),J--);break}J===h0-1&&(U0.coeff=U0.coeff.neg(),M0.push(U0),M0.sort(O))}}if(!(k=s0(M0[0],n1[0]))&&M0.length>=n1.length){for(O0=1;O0<M0.length;O0++)if(k=s0(M0[O0],n1[0])){M0.unshift(A.Utils.remove(M0,O0));break}}}}r0=I0(S),w0=I0(M0),c0!==void 0&&(c0=c0.toSymbol(),r0=r.divide(r0,c0.clone()),w0=r.divide(w0,c0))}return t1&&(r0=r.parse(r0.text(),q0),w0=r.parse(w0.text(),q0)),[r0,w0]}catch{return d}},line:function(i,f,d){A.Utils.isArray(i)&&(i=A.Utils.convertToVector(i)),A.Utils.isArray(f)&&(f=A.Utils.convertToVector(f)),d=r.parse(d||"x"),A.Utils.isVector(i)&&A.Utils.isVector(f)||r.error('Line expects a vector! Received "'+i+'" & "'+f+'"');var E=r.subtract(f.e(1).clone(),i.e(1).clone()),f=r.subtract(f.e(2).clone(),i.e(2).clone()),E=r.divide(f,E),d=r.multiply(d,E.clone()),E=r.multiply(i.e(1).clone(),E);return r.add(r.subtract(d,E),i.e(2).clone())},PartFrac:{createTemplate:function(i,h,l,f){(i=Z.Factor.factor(i)).each(function(w0,I0){var i0;w0.group===X1&&w0.fname===""&&w0.args[0].group===N1&&(i0=w0.args[0],this.symbols?(delete this.symbols[I0],this.symbols[i0.value]=i0):i=w0.args[0])});for(var d=h.collectFactors(),E=[],L=[],x=new p0(1),H=0;H<d.length;H++){var u0=p0.unwrapPARENS(d[H]);if(u0.power.greaterThan(1))for(var q0=Number(u0.power),d0=u0.clone().toLinear(),Q0=Number(Z.degree(d0,f)),t1=0;t1<q0;t1++){var l1=r.pow(d0.clone(),new p0(t1+1));l.push(l1.clone());var r0=r.divide(i.clone(),l1.clone());L.push(Q0),E.push(r0)}else Q0=Number(Z.degree(u0,f)),l.push(u0),r0=r.divide(i.clone(),u0.clone()),r0=r.expand(p0.unwrapPARENS(r0)),L.push(Q0),E.push(r0)}return[l=l.map(function(w0){return r.multiply(w0,x.clone())}),E,L]},partfrac:function(i,h,l){var f=f1(i);h=h||r.parse(f[0]);try{var d,E,L,x,H,u0,q0,d0,Q0,t1,l1,r0,w0,I0,i0=r.expand(i.getNum()),k0=r.expand(i.getDenom().toUnitMultiplier());if(i0.multiplier=i.multiplier,L=i0.groupTerms(h),Number(Z.degree(i0,h))>=Number(Z.degree(k0,h))?(d0=(q0=Z.div(i0.clone(),r.expand(k0.clone())))[0],L=(i0=q0[1]).groupTerms(h)):d0=new p0(0),Number(Z.degree(k0,h))===1){var d1=r.divide(i0,k0);return l?[d0,d1]:r.add(d0,d1)}E=Z.Factor.factor(k0),l1=Z.PartFrac.createTemplate(k0.clone(),E,[],h),r0=l1[0],Q0=l1[1],x=l1[2],u0=[L.length],H=[],d=[],t1=[],Q0.map(function(X,f0){w0=r0[f0],I0=x[f0];for(var c0=0;c0<I0;c0++){d.push(w0.clone());var O0=p0.create(h,c0),Y=r.expand(r.multiply(X,O0.clone())).groupTerms(h),q=Y.length;u0.push(q),H.push(Y),t1.push(O0.clone())}});for(var H0=A.Utils.arrayMax(u0),s0=new A.Matrix(A.Utils.fillHoles(L,H0)).transpose(),M0=new A.Matrix,n1=0;n1<H.length;n1++)M0.elements.push(A.Utils.fillHoles(H[n1],H0));var m1=r.multiply(M0.transpose().invert(),s0),_=l?[d0]:d0;return m1.each(function(X,f0){f0=r.multiply(t1[f0],r.divide(X,d[f0])),l?_.push(f0):_=r.add(_,f0)}),_}catch{try{if(i.isComposite()){var S={};i.each(function(Y){var c0=Y.getDenom(),O0=Y.getNum(),Y=S[c0];S[c0]=Y?r.add(Y,O0):O0});var O,W=new p0(0);for(O in S)W=r.add(W,r.divide(S[O],r.parse(O)));i=W}}catch{}}return i}},degree:function(i,h,l){if(l=l||{nd:[],sd:[],depth:0},!h){var f=f1(i);if(1<f.length)throw new Error("You must specify the variable for multivariate polynomials!");if(f.length===0)return new p0(0);h=r.parse(f[0])}return f=i.group,i.isComposite()?((i=i.clone()).distributeExponent(),i.each(function(d){l.depth++,Z.degree(d,h,l),l.depth--})):i.group===e0?i.each(function(d){l.depth++,Z.degree(d,h,l),l.depth++}):f===T0&&i.value===h.value?l.sd.push(i.power.clone()):f===N1&&i.value===h.value?l.nd.push(r.parse(i.power)):l.nd.push(new p0(0)),i=0<l.nd.length?A.Utils.arrayMax(l.nd):void 0,l.depth===0&&0<l.sd.length?(i!==void 0&&l.sd.unshift(i),r.symfunction("max",l.sd)):A.Utils.isSymbol(i)?i:r.parse(i)},sqComplete:function(i,h,l){A.Utils.isSymbol(h)||(h=r.parse(h));var f,d,E,L,x,H=function(u0){throw new A.exceptions.ValueLimitExceededError(u0=u0||"Stopping")};return i.isPoly(!0)||H("Must be a polynomial!"),L=A.Utils.inBrackets,i=i.clone(),(f=A.Algebra.degree(i,h)).equals(2)||H("Cannot complete square for degree "+f),x=(E=A.Algebra.coeffs(i,h))[2],H=E[1].sign(),f=r.divide(E[1],new p0(2)),i=r.pow(f.clone(),new p0(2)),l?[x,f,d]:(x=F1.sqrt(x),i=r.divide(F1.sqrt(i),x.clone()),d=r.subtract(E[0],r.pow(i.clone(),new p0(2))),{a:i=r.parse(L(x.clone()+"*"+h+(H<0?"-":"+")+i)),c:d,f:r.add(r.pow(i.clone(),new p0(2)),d.clone())})},Simplify:{strip:function(i){var h=r.parse(i.multiplier);i.toUnitMultiplier();var l=r.parse(i.power);return i.toLinear(),[h,l,i]},unstrip:function(f,h){var l=f[0],f=f[1];return r.multiply(l,r.pow(h,f))},complexSimp:function(f,d){var L=f.realpart(),E=f.imagpart(),l=d.realpart(),x=d.imagpart(),f=r.multiply(L.clone(),l.clone()),d=r.multiply(E.clone(),x.clone()),E=r.multiply(l.clone(),E),L=r.multiply(L,x.clone()),x=r.add(r.pow(l,new p0(2)),r.pow(x,new p0(2)));return r.divide(r.add(r.add(f,d),r.multiply(r.subtract(E,L),p0.imaginary())),x)},trigSimp:function(i){var h,l,f,d,E,L;return i.containsFunction(["cos","sin","tan"])&&(i=i.clone(),l=(i=(h=Z.Simplify.strip(i)).pop()).clone(),i.group===$?(f=new p0(0),i.each(function(x){x=Z.Simplify.trigSimp(x.fnTransform()),f=r.add(f,x)},!0),l=r.pow(r.multiply(new p0(i.multiplier),f),new p0(i.power))):i.group===e0&&(d=i.getNum(),E=i.getDenom(),(l=d.fname==="sin"&&E.fname==="cos"&&d.args[0].equals(E.args[0])&&d.power.equals(E.power)?r.parse(A.Utils.format("({0})*({1})*tan({2})^({3})",E.multiplier,d.multiplier,d.args[0],d.power)):l).group===e0&&(L=new p0(1),l.each(function(x){x.fname==="tan"&&(x=r.parse(A.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",x.multiplier,Z.Simplify.simplify(x.args[0]),x.power))),L=r.multiply(L,x)}),l=L)),i=l=Z.Simplify.unstrip(h,l).distributeMultiplier()),i},fracSimp:function(i){var h=i.getDenom();if((i=(x=i.getNum()).isImaginary()&&h.isImaginary()?Z.Simplify.complexSimp(x,h):i).isComposite()){for(var l,f,d,E,L,x,H=(i=1<i.power?r.expand(i):i).collectSymbols(),u0=H.pop();H.length;)L=H.pop(),E=r.parse(u0.getDenom()),d=r.parse(L.getDenom()),l=u0.getNum(),f=L.getNum(),L=r.multiply(E.clone(),d.clone()),d=r.multiply(l,d),E=r.multiply(f,E),E=r.add(d,E),u0=r.divide(E,L);return h=r.expand(u0.getDenom()),(h=(x=r.expand(u0.getNum())).isImaginary()&&h.isImaginary()?Z.Simplify.complexSimp(x,h):r.divide(x,h)).equals(i)?i:Z.Simplify.simplify(h)}return i},ratSimp:function(i){var h,l;return i.group===e0&&(h=i.getDenom(),l=i.getNum().distributeMultiplier(),h=Z.Simplify.fracSimp(h),l=Z.Simplify.fracSimp(l),i=r.divide(l,h)),i},sqrtSimp:function(i,h){if(i.isSQRT()){var l,f,d=Z.Factor.factor(i.args[0].clone()),E=r.parse(d.multiplier),L=E.sign(),x=r.sqrt(E.abs());if(z0(x))return d.group===e0?(l=new p0(1),d.each(function(H){var u0;H.group===F?(u0=r.sqrt(H.clone()),z0(u0)?x=r.multiply(x,u0):l=r.multiply(l,H)):l=r.multiply(l,H)}),L=r.multiply(l,r.parse(L)),(f=r.sqrt(L.clone())).isImaginary&&(f=r.sqrt(r.expand(L.clone())))):f=r.sqrt(d.clone().toUnitMultiplier()),r.multiply(x,f)}else i.isComposite()&&i.isLinear()?(x=new p0(0),i.each(function(H){x=r.add(x,Z.Simplify.sqrtSimp(H))},!0),x=r.multiply(x,r.parse(i.multiplier))):i.group===e0&&(x=r.parse(i.multiplier),i.each(function(H){H=Z.Simplify.sqrtSimp(H),x=r.multiply(x,H)},!0),x=r.pow(x,r.parse(i.power)));return x||r.parse(i)},patternSub:function(i){var h={},l=function(d){var E=!1;return d.each(function(L){L.group===$?E=!0:L.symbols&&(E=l(L))}),E},f=function(d){d.each(function(E){var L;!E.symbols&&E.group!==X1||(l(E)?f(E):h[E.value]||(L=A.Utils.getU(i),h[E.value]=L,i=i.sub(E.value,L)))},!0)};return f(i),[i,h]},simplify:function(i){var h=Z.Simplify.strip(i);if(i=h.pop(),(i=Z.Simplify.fracSimp(i)).isConstant()||i.group===A.groups.S)return h.push(i),Z.Simplify.unstrip(h,i);var l,f=i.clone(),f=Z.Simplify.trigSimp(f);return f=Z.Simplify.ratSimp(f),(f=Z.Factor.factor(f)).group===A.groups.CP&&f.isLinear()&&(i=f.multiplier.clone(),f.toUnitMultiplier(),l=new p0(0),f.each(function(d){d=Z.Simplify.simplify(d),l=r.add(l,d)}),(f=l).multiplier=l.multiplier.multiply(i)),Z.Simplify.unstrip(h,f)}},Classes:{Polynomial:c1,Factors:b1,MVTerm:Z0}};A.Expression.prototype.simplify=function(){return Z.Simplify.simplify(this.symbol)},A2.useAlgebraDiv=function(){var i=Z.divideFn=r.divide,h=0;r.divide=function(l,f){return f=++h===1?A.Algebra.divide(l,f):i(l,f),h=0,f}},A2.useParserDiv=function(){Z.divideFn&&(r.divide=Z.divideFn),delete Z.divideFn},A2.register([{name:"factor",visible:!0,numargs:1,build:function(){return Z.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return Z.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return Z.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return Z.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return Z.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return Z.divide}},{name:"div",visible:!0,numargs:2,build:function(){return Z.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return Z.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return Z.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){return function(){var i=Z.coeffs.apply(Z,arguments);return new A.Vector(i)}}},{name:"line",visible:!0,numargs:[2,3],build:function(){return Z.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){return function(i,h){try{return h=h||f1(i)[0],Z.sqComplete(i.clone(),h).f}catch{return i}}}}]),A2.updateAPI()}(),A2===void 0&&(A2=d3.exports,b3.exports),function(){var A=A2.getCore(),r=A.PARSER,F=A.Frac,_1=A.Settings,N1=A.Utils.isSymbol,o1=A.groups.FN,T0=A.Symbol,X1=A.Utils.text,N0=A.Utils.inBrackets,$=A.Utils.isInt,e0=A.Utils.format,x1=A.Utils.even,A0=A.Utils.evaluate,f1=A.groups.N,X0=A.groups.S,o1=A.groups.FN,$0=A.groups.PL,z0=A.groups.CP,p0=A.groups.CB,q1=A.groups.EX,F1=A.groups.P,c1=_1.LOG,b1="sqrt",Z0="sin",Z="cos",i="tan",h="sec",l="csc",f="cot",d="asin",E="atan",L="sinh",x="cosh",H="tanh";function u0(w0){this.message=w0||""}u0.prototype=new Error,T0.prototype.hasIntegral=function(){return this.containsFunction("integrate")},T0.prototype.fnTransform=function(){if(this.group!==o1)return this;var w0,I0,i0,k0=this.args[0],d1=new T0(this.multiplier),H0=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case L:i0=r.parse(e0("(e^({0})-e^(-({0})))/2",k0));break;case x:i0=r.parse(e0("(e^({0})+e^(-({0})))/2",k0));break;case H:i0=r.parse(e0("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",k0));break;case i:i0=r.parse(e0("sin({0})/cos({0})",k0));break;case l:i0=r.parse(e0("1/sin({0})",k0));break;case h:i0=r.parse(e0("1/cos({0})",k0));break;default:i0=H0}else if(this.power.equals(2))switch(this.fname){case Z0:i0=r.parse(e0("1/2-cos(2*({0}))/2",k0));break;case Z:i0=r.parse(e0("1/2+cos(2*({0}))/2",k0));break;case i:i0=r.parse(e0("sin({0})^2/cos({0})^2",k0));break;case x:i0=r.parse(e0("1/2+cosh(2*({0}))/2",k0));break;case L:i0=r.parse(e0("-1/2+cosh(2*({0}))/2",k0));break;case H:i0=r.parse(e0("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",k0));break;case h:i0=r.parse(e0("(1-cos(2*({0})))/(1+cos(2*({0})))+1",k0));break;default:i0=H0}else this.fname===h?i0=r.parse(e0("1/cos({0})^({1})",this.args[0],this.power)):this.fname===l?i0=r.parse(e0("1/sin({0})^({1})",this.args[0],this.power)):this.fname===i?i0=this.power.lessThan(0)?r.parse(e0("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):r.parse(e0("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power)):this.fname===Z0&&this.power.lessThan(0)?i0=r.parse(e0("csc({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===Z&&this.power.lessThan(0)?i0=r.parse(e0("sec({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===Z0&&this.power.equals(3)?i0=r.parse(e0("(3*sin({0})-sin(3*({0})))/4",this.args[0])):this.fname===Z&&this.power.equals(3)?i0=r.parse(e0("(cos(3*({0}))+3*cos({0}))/4",this.args[0])):this.fname!==Z&&this.fname!==Z0||!x1(this.power)?i0=H0:(I0=this.power/2,w0=r.pow(this.clone().toLinear(),r.parse(2)).fnTransform(),I0=r.expand(r.pow(w0,r.parse(I0))),i0=new T0(0),I0.each(function(s0){s0=s0.fnTransform(),i0=r.add(i0,s0)},!0));return r.multiply(i0,d1)},T0.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===X0)return!1;if(this.fname&&(A.Utils.in_trig(this.fname)||A.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols){for(var w0 in this.symbols)if(this.symbols[w0].hasTrig())return!0}return!1},A.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},A.Utils.toCommonDenominator=function(w0){if(w0.isComposite()&&w0.isLinear()){var I0=new T0(w0.multiplier),i0=new T0(1),k0=new T0(0);return w0.each(function(d1){i0=r.multiply(i0,d1.getDenom())},!0),w0.each(function(s0){var H0=s0.getNum(),s0=s0.getDenom(),s0=r.multiply(H0,r.divide(i0.clone(),s0));k0=r.add(k0,s0)}),r.multiply(I0,A.Algebra.divide(r.expand(k0),r.expand(i0)))}return w0},A.Utils.in_inverse_trig=function(w0){return[d,"acos",E,"acsc","asec","acot"].indexOf(w0)!==-1},A.Utils.in_trig=function(w0){return[Z,Z0,i,h,l,f].indexOf(w0)!==-1},A.Utils.in_htrig=function(w0){return[L,x,H,"acsch","asech","acoth"].indexOf(w0)!==-1},A.Matrix.jacobian=function(w0,I0){var i0=new A.Matrix;return(I0=I0||A.Utils.arrayGetVariables(w0)).forEach(function(k0,d1){w0.forEach(function(H0,s0){H0=A.Calculus.diff(H0.clone(),k0),i0.set(s0,d1,H0)})}),i0},A.Matrix.prototype.max=function(){var w0=new T0(0);return this.each(function(I0){I0=I0.abs(),I0.gt(w0)&&(w0=I0)}),w0},A.Matrix.cMatrix=function(w0,I0){var i0=new A.Matrix;return I0.forEach(function(k0,d1){i0.set(d1,0,r.parse(w0))}),i0};var q0=A.Utils.all_functions=function(w0){for(var I0=0,i0=w0.length;I0<i0;I0++)if(w0[I0].group!==o1)return!1;return!0},d0=A.Utils.cosAsinBtranform=function(w0,I0){return w0=w0.args[0],I0=I0.args[0],r.parse(e0("(sin(({0})+({1}))-sin(({0})-({1})))/2",w0,I0))},Q0=A.Utils.cosAsinAtranform=function(w0,I0){return Number(I0.power)!==1?r.multiply(w0,I0):(w0=w0.args[0],r.parse(e0("(sin(2*({0})))/2",w0)))},t1=A.Utils.cosAsinBtranform=function(w0,I0){return w0=w0.args[0],I0=I0.args[0],r.parse(e0("(cos(({0})+({1}))-cos(({0})-({1})))/2",w0,I0))},l1=A.Utils.trigTransform=function(w0){for(var I0,i0,k0,d1,H0={},s0=new T0(1),M0=0,n1=w0.length;M0<n1;M0++)(k0=w0[M0]).group===o1?(i0=k0.fname)===Z&&H0.sin?(I0=(H0.sin.args[0].toString()!==k0.args[0].toString()?d0:Q0)(k0,H0.sin),delete H0.sin,s0=r.multiply(s0,I0)):i0===Z0&&H0.cos?(I0=(H0.cos.args[0].toString()!==k0.args[0].toString()?d0:Q0)(k0,H0.cos),delete H0.cos,s0=r.multiply(s0,I0)):i0===Z0&&H0.sin?(I0=H0.sin.args[0].toString()!==k0.args[0].toString()?t1(k0,H0.sin):r.multiply(k0,H0.sin),delete H0.sin,s0=I0):H0[i0]=k0:s0=r.multiply(s0,k0);for(d1 in H0)s0=r.multiply(s0,H0[d1]);return s0};A.Settings.integration_depth=10,A.Settings.max_lim_depth=10;var r0=A.Calculus={version:"1.4.6",sum:function(w0,I0,i0,k0){if(I0.group!==A.groups.S)throw new A.exceptions.NerdamerTypeError("Index must be symbol. "+X1(I0)+" provided");var d1;return I0=I0.value,A.Utils.isNumericSymbol(i0)&&A.Utils.isNumericSymbol(k0)?(d1=k0-i0<200?"":"PARSE2NUMBER",i0=Number(i0),k0=Number(k0),A.Utils.block(d1,function(){for(var H0=w0.text(),s0={"~":!0},M0=new A.Symbol(0),n1=i0;n1<=k0;n1++){s0[I0]=new T0(n1);var m1=r.parse(H0,s0),M0=r.add(M0,m1)}return M0})):r.symfunction("sum",arguments)},product:function(w0,I0,i0,k0){if(I0.group!==A.groups.S)throw new A.exceptions.NerdamerTypeError("Index must be symbol. "+X1(I0)+" provided");return I0=I0.value,A.Utils.isNumericSymbol(i0)&&A.Utils.isNumericSymbol(k0)?A.Utils.block(k0-i0<200?"":"PARSE2NUMBER",function(){i0=Number(i0),k0=Number(k0.multiplier);for(var d1=w0.text(),H0={},s0=new A.Symbol(1),M0=i0;M0<=k0;M0++)H0[I0]=new T0(M0),s0=r.multiply(s0,r.parse(d1,H0));return s0}):r.symfunction("product",arguments)},diff:function(w0,I0,i0){if(A.Utils.isVector(w0)){var k0=new A.Vector([]);return w0.each(function(S){k0.elements.push(r0.diff(S,I0,i0))}),k0}if(A.Utils.isMatrix(w0)){var d1=new A.Matrix;return w0.each(function(S,O,W){d1.set(O,W,r0.diff(S,I0,i0))}),d1}var H0,s0,M0=N1(I0)?I0.text():I0;return i0=N1(i0)?i0.multiplier:i0||1,M0===void 0&&(M0=A.Utils.variables(w0)[0]),w0.group===o1&&w0.fname===b1&&(s0=w0.args[0],H0=w0.power.clone(),s0.group===f1&&s0.group===F1||(s0.power=N1(s0.power)?r.multiply(s0.power,r.multiply(new T0(.5)),H0):s0.power.multiply(new F(.5)).multiply(H0),s0.multiplier=s0.multiplier.multiply(w0.multiplier)),w0=s0),w0=w0.group!==o1||N1(w0.power)?m1(w0):(H0=m1(r.parse(w0)),s0=r0.diff(w0.args[0].clone(),M0),r.multiply(H0,s0)),w0=1<i0?r0.diff(w0,I0,--i0):w0;function n1(S){return S.value!==M0&&!S.contains(M0,!0)||(S.multiplier=S.multiplier.multiply(S.power),S.power=S.power.subtract(new F(1)),S.power.equals(0)&&(S=T0(S.multiplier))),S}function m1(S){var O=S.group;if(O===f1||O===X0&&S.value!==M0||O===F1)S=T0(0);else if(O===X0)S=n1(S);else{if(O===p0){var W=S.multiplier.clone();S.toUnitMultiplier();var X=r.multiply(function(J){for(var k=J.collectSymbols(),S0=new T0(0),E0=k.length,U0=0;U0<E0;U0++){for(var h0=r0.diff(k[U0].clone(),M0),l0=0;l0<E0;l0++)U0!==l0&&(h0=r.multiply(h0,k[l0].clone()));S0=r.add(S0,h0)}return S0}(S),n1(S));return X.multiplier=X.multiplier.multiply(W),X}if(O===o1&&S.power.equals(1))switch(S.fname){case c1:f0=S.clone(),(S=S.args[0].clone()).power=S.power.negate(),S.multiplier=f0.multiplier.divide(S.multiplier);break;case Z:S.fname=Z0,S.multiplier.negate();break;case Z0:S.fname=Z;break;case i:S.fname=h,S.power=new F(2);break;case h:S=_(S,i);break;case l:S=_(S,"-cot");break;case f:S.fname=l,S.multiplier.negate(),S.power=new F(2);break;case d:S=r.parse("(sqrt(1-("+X1(S.args[0])+")^2))^(-1)");break;case"acos":S=r.parse("-(sqrt(1-("+X1(S.args[0])+")^2))^(-1)");break;case E:S=r.parse("(1+("+X1(S.args[0])+")^2)^(-1)");break;case"abs":W=S.multiplier.clone(),S.toUnitMultiplier(),(O0=S.args[0].clone()).toUnitMultiplier(),(S=r.parse(N0(X1(S.args[0]))+"/abs"+N0(X1(O0)))).multiplier=W;break;case"parens":S=T0(1);break;case"cosh":S.fname="sinh";break;case"sinh":S.fname="cosh";break;case H:S.fname="sech",S.power=new F(2);break;case"sech":S=_(S,"-tanh");break;case"csch":var c0=String(S.args[0]);return r.parse("-coth("+c0+")*csch("+c0+")");case"coth":return c0=String(S.args[0]),r.parse("-csch("+c0+")^2");case"asinh":S=r.parse("(sqrt(1+("+X1(S.args[0])+")^2))^(-1)");break;case"acosh":S=r.parse("(sqrt(-1+("+X1(S.args[0])+")^2))^(-1)");break;case"atanh":S=r.parse("(1-("+X1(S.args[0])+")^2)^(-1)");break;case"asech":c0=String(S.args[0]),S=r.parse("-1/(sqrt(1/("+c0+")^2-1)*("+c0+")^2)");break;case"acoth":S=r.parse("-1/(("+S.args[0]+")^2-1)");break;case"acsch":c0=String(S.args[0]),S=r.parse("-1/(sqrt(1/("+c0+")^2+1)*("+c0+")^2)");break;case"asec":c0=String(S.args[0]),S=r.parse("1/(sqrt(1-1/("+c0+")^2)*("+c0+")^2)");break;case"acsc":c0=String(S.args[0]),S=r.parse("-1/(sqrt(1-1/("+c0+")^2)*("+c0+")^2)");break;case"acot":S=r.parse("-1/(("+S.args[0]+")^2+1)");break;case"S":c0=String(S.args[0]),S=r.parse("sin((pi*("+c0+")^2)/2)");break;case"C":c0=String(S.args[0]),S=r.parse("cos((pi*("+c0+")^2)/2)");break;case"Si":c0=S.args[0],S=r.parse("sin("+c0+")/("+c0+")");break;case"Shi":c0=S.args[0],S=r.parse("sinh("+c0+")/("+c0+")");break;case"Ci":c0=S.args[0],S=r.parse("cos("+c0+")/("+c0+")");break;case"Chi":c0=S.args[0],S=r.parse("cosh("+c0+")/("+c0+")");break;case"Ei":c0=S.args[0],S=r.parse("e^("+c0+")/("+c0+")");break;case"Li":c0=S.args[0],S=r.parse("1/"+_1.LOG+"("+c0+")");break;case"erf":S=r.parse("(2*e^(-("+S.args[0]+")^2))/sqrt(pi)");break;case"atan2":var f0=String(S.args[0]),c0=String(S.args[1]);S=r.parse("("+c0+")/(("+c0+")^2+("+f0+")^2)");break;case"sign":S=new T0(0);break;case"sinc":S=r.parse(e0("(({0})*cos({0})-sin({0}))*({0})^(-2)",S.args[0]));break;case _1.LOG10:S=r.parse("1/(("+S.args[0]+")*"+_1.LOG+"(10))");break;default:S=r.symfunction("diff",[S,I0])}else if(O===q1||O===o1&&N1(S.power)){var X=O===q1?S.value:O===o1&&S.contains(M0)?S.fname+N0(X1(S.args[0])):S.value+N0(X1(S.args[0])),O0=(r.multiply(r.parse(c1+N0(X)),S.power.clone()),r0.diff(r.multiply(r.parse(c1+N0(X)),S.power.clone()),M0));S=r.multiply(S,O0)}else if(O!==o1||S.power.equals(1)){if(O===z0||O===$0){var Y,O=S.clone(),q=new T0(0);for(Y in S.symbols)q=r.add(q,r0.diff(S.symbols[Y].clone(),M0));S=r.multiply(n1(O),q)}}else(O0=S.clone()).toLinear(),O0.toUnitMultiplier(),S=r.multiply(n1(S.clone()),m1(O0))}return S.updateHash(),S}function _(S,O,W){return r.multiply(S,r.parse(O+N0(W||X1(S.args[0]))))}},integration:{u_substitution:function(n1,I0){function i0(W,X,f0){var c0=r0.diff(X,I0),c0=f0?f0(W,X):r.divide(W.clone(),c0);return c0.contains(I0,!0)?null:c0}function k0(W,X){return W=r0.integrate(r.symfunction(W,[new T0(m1)]),m1,0),(W=W.sub(new T0(m1),X)).updateHash(),W}var d1,H0=n1[0].clone(),s0=n1[1].clone(),M0=H0.group,n1=s0.group,m1="__u__";if(M0===o1&&n1!==o1)return(d1=i0(s0,(S=H0.args[0]).clone()))?r.multiply(d1,k0(H0.fname,S)):(d1=i0(s0,H0))?r0.integration.poly_integrate(H0):void 0;if(n1===o1&&M0!==o1){if(d1=i0(H0,(S=s0.args[0]).clone()))return r.multiply(d1,k0(s0.fname,S))}else{if(M0===o1&&n1===o1)return(d1=i0(H0.clone(),s0.clone()))||(d1=i0(s0.clone(),H0.clone()))?r.multiply(r0.integration.poly_integrate(s0),d1):void 0;if(M0===q1&&n1!==q1){if(!(d1=i0(s0,(O=H0.power).clone()))){var _=r0.integration.decompose_arg(O.clone(),I0),S=r0.diff(_[2].clone(),I0),S=r0.integration.decompose_arg(S.clone(),I0);if(r.multiply(_[1],S[1]).power.equals(s0.power))return S=r.divide(_[0].clone(),S[0].clone()),S=r.multiply(S.clone(),r.pow(new T0(H0.value),r.multiply(_[0],new T0(m1)))),S=r.multiply(S,new T0(m1)),r0.integration.by_parts(S,m1,0,{}).sub(m1,_[1].clone())}return _=r0.integrate(H0.sub(O.clone(),new T0(m1)),m1,0),r.multiply(_.sub(new T0(m1),O),d1)}if(n1===q1&&M0!==q1)return d1=i0(H0,(O=s0.power).clone()),_=r0.integrate(s0.sub(O,new T0(m1)),m1,0),r.multiply(_.sub(new T0(m1),O),d1);if(H0.isComposite()||s0.isComposite()){var M0=function(f0,c0){return c0=r0.diff(c0,I0),f0=A.Algebra.Factor.factor(f0),c0=A.Algebra.Factor.factor(c0),r.divide(f0,c0)},_=H0.isComposite()?H0.clone().toLinear():H0.clone(),O=s0.isComposite()?s0.clone().toLinear():s0.clone();return(d1=i0(_.clone(),O.clone(),M0))?r.multiply(r0.integration.poly_integrate(s0),d1):(d1=i0(O.clone(),_.clone(),M0))?r.multiply(r0.integration.poly_integrate(H0),d1):void 0}}},poly_integrate:function(k0){var I0=k0.power.toString(),i0=k0.multiplier.toDecimal(),k0=k0.toUnitMultiplier().toLinear();return Number(I0)===-1?r.multiply(new T0(i0),r.symfunction(c1,[k0])):r.parse(e0("({0})*({1})^(({2})+1)/(({2})+1)",i0,k0,I0))},stop:function(w0){throw A.Utils.warn(w0=w0||"Unable to compute integral!"),new u0(w0)},partial_fraction:function(w0,I0,i0,k0){var d1;return N1(I0)||(I0=r.parse(I0)),d1=new T0(0),(w0=A.Algebra.PartFrac.partfrac(w0,I0)).group===p0&&w0.isLinear()?(w0.each(function(H0){H0.isLinear()||r0.integration.stop()}),w0.each(function(H0){d1=r.add(d1,r0.integrate(H0,I0,i0,k0))})):d1=r.add(d1,r0.integrate(w0,I0,i0,k0)),d1},get_udv:function(w0){function I0(_){var S,O=_.group;O===o1?(S=_.fname,A.Utils.in_trig(S)||A.Utils.in_htrig(S)?i0[3].push(_):A.Utils.in_inverse_trig(S)?i0[1].push(_):S===c1?i0[0].push(_):r0.integration.stop()):O===X0||_.isComposite()&&_.isLinear()||O===p0&&_.isLinear()?i0[2].push(_):O===q1||_.isComposite()&&!_.isLinear()?i0[4].push(_):r0.integration.stop()}var i0=[[],[],[],[],[]];w0.group===p0?w0.each(function(_){I0(T0.unwrapSQRT(_,!0))}):I0(w0);for(var k0,d1=new T0(1),H0=0;H0<5;H0++){var s0=i0[H0],M0=s0.length;if(0<M0){if(1<M0)for(var n1=new T0(1),m1=0;m1<M0;m1++)n1=r.multiply(n1,s0[m1].clone());else n1=s0[0].clone();k0?d1=r.multiply(d1,n1):(k0=n1).multiplier=k0.multiplier.multiply(w0.multiplier)}}return[k0,d1]},trig_sub:function(w0,I0,i0,k0,d1,H0){(d1=d1||r0.integration.decompose_arg(w0.clone().toLinear(),I0))[3],d1[2];var s0=d1[0],M0=d1[1];if(M0.power.equals(2)&&s0.greaterThan(0))return I0=A.Utils.getU(w0),d1=r.parse(i+N0(I0)),s0=r.parse(h+N0(I0)+"^2"),s0=r.multiply(w0.sub(M0,d1),s0),M0=r0.integrate(s0,I0,i0,k0).sub(d1,M0),A.Utils.clearU(d1),M0},by_parts:function(w0,I0,i0,k0){var d1,H0,s0,M0,n1,m1;return k0.previous=k0.previous||[],s0=(H0=r0.integration.get_udv(w0))[0],d1=H0[1],n1=(M0=T0.unwrapSQRT(r.expand(r0.diff(s0.clone(),I0)),!0)).clone().stripVar(I0),M0=r.divide(M0,n1.clone()),w0=r0.integrate(d1.clone(),I0,i0||0),M0=(H0=r.multiply(w0.clone(),M0)).toString(),k0.previous.indexOf(M0)!==-1&&A.Utils.in_trig(s0.fname)&&d1.isE()?(k0.is_cyclic=!0,new T0(1)):(k0.previous.push(M0),s0=r.multiply(s0,w0),w0=H0.multiplier.clone(),H0.toUnitMultiplier(),(n1=r.multiply(r0.integrate(H0.clone(),I0,i0,k0),n1)).multiplier=n1.multiplier.multiply(w0),n1=r.subtract(s0,n1),k0.is_cyclic&&(k0.previous.pop(),k0.previous.length===0&&(n1=r.expand(n1),m1=new T0(0),n1.each(function(_){_.contains(I0)||(m1=r.add(m1,_.clone()))}),n1=r.divide(r.subtract(n1,m1.clone()),r.subtract(new T0(1),m1)))),n1)},decompose_arg:A.Utils.decompose_fn},integrate:function(w0,I0,i0,k0){var d1;if(I0||(d1=A.Utils.variables(w0),I0=(I0=d1.length===1?d1[0]:I0)||"x"),A.Utils.isVector(w0)){var H0=new A.Vector([]);return w0.each(function(s0){H0.elements.push(r0.integrate(s0,I0))}),H0}return isNaN(I0)||r.error("variable expected but received "+I0),w0.isConstant(!0)?r.multiply(w0.clone(),r.parse(I0)):(k0=k0||{},A.Utils.block("PARSE2NUMBER",function(){i0=i0||0;var s0,M0=N1(I0)?I0.toString():I0,n1=(n0=T0.unwrapSQRT(w0.clone(),!0)).group;try{if(++i0>A.Settings.integration_depth&&r0.integration.stop("Maximum depth reached. Exiting!"),n0.contains(M0,!0)){if(n1===X0)s0=r0.integration.poly_integrate(n0,M0,i0);else if(n1===q1)if(n0.previousGroup===o1&&n0.fname!=="sqrt"&&n0.fname!==_1.PARENTHESIS&&r0.integration.stop(),n0.contains(M0)&&n0.previousGroup!==o1)n0.power.contains(M0)?r0.integration.stop():((k1=r0.diff(n0.clone().toLinear(),M0)).contains(M0)&&r0.integration.stop(),s0=r0.integration.poly_integrate(n0,M0,i0));else{if((Y=r0.diff(n0.power.clone(),M0)).contains(M0)){var m1=Y.stripVar(M0);if((q=r.divide(Y.clone(),m1.clone())).group===X0&&q.isLinear())return m1.multiplier=m1.multiplier.divide(new F(2)),r.parse(e0("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",m1,M0,n0.multiplier));r0.integration.stop()}n0.isE()?Y.isLinear()?s0=n0:Y.isE()&&Y.power.group===X0&&Y.power.power.equals(1)?s0=r.multiply(r.symfunction("Ei",[n0.power.clone()]),n0.power):r0.integration.stop():(k=r.symfunction(c1,[r.parse(n0.value)]),s0=r.divide(n0,k)),s0=r.divide(s0,Y)}else if(n0.isComposite()&&n0.isLinear()){var _=r.parse(n0.multiplier);n0.toUnitMultiplier(),s0=new T0(0),n0.each(function(M1){s0=r.add(s0,r0.integrate(M1,M0,i0))}),s0=r.multiply(_,s0)}else if(n1===z0)if((n0=n0.power.greaterThan(1)?r.expand(n0):n0).power.equals(1))s0=new T0(0),n0.each(function(M1){s0=r.add(s0,r0.integrate(M1,M0,i0))},!0);else{var S=Number(n0.power),_=n0.multiplier.clone();n0.toUnitMultiplier();var O,W,X,f0=n0.clone().toLinear(),c0=(m0=r0.integration.decompose_arg(f0,M0))[3],O0=m0[2],Y=m0[0],q=m0[1];if(S===-1&&q.group!==$0&&q.power.equals(2)){var J,k,S0,E0,U0,h0,l0,F0,L0,_0,y0,G0=!$(c0)||0<c0;s0=q.group===X0&&q.power.equals(2)&&G0?(J=function(u2){var s2=new T0(1);return u2.each(function(l2){s2=r.multiply(s2,l2.fname==="abs"?l2.args[0]:l2)}),s2},S0=Y.clone(),E0=c0.clone(),S0=r.pow(S0,new T0(.5)),E0=r.pow(E0,new T0(.5)),k=r.multiply(J(E0),J(S0)),Y1=r.symfunction(E,[r.divide(r.multiply(Y,q.toLinear()),k.clone())]),r.divide(Y1,k)):q.group===X0&&q.isLinear()?r.divide(r0.integration.poly_integrate(n0),Y):q.power.equals(4)?(y0=N0,S0=r.parse(b1+y0(Y)+"*"+M0+"^2"),E0=r.parse(b1+y0(2)+"*"+y0(Y)+"^"+y0("1/4")+"*"+y0(c0)+"^"+y0("1/4")+"*"+M0),U0=r.parse(b1+y0(c0)),T1=r.add(r.add(S0.clone(),E0.clone()),U0.clone()),T=r.add(r.subtract(S0,E0),U0),h0=r.parse(b1+y0(2)+"*"+y0(c0)+"^"+y0("3/4")),l0=r.parse(b1+y0(c0)+"*"+y0(c0)+"^"+y0("1/4")+"*"+M0),F0=r.parse("2*"+y0(c0)+"*"+b1+y0(2)+"*"+y0(c0)+"^"+y0("1/4")),L0=r.divide(r.subtract(h0.clone(),l0.clone()),r.multiply(F0.clone(),T)),_0=r.divide(r.add(h0,l0),r.multiply(F0,T1.clone())),r.add(r0.integrate(L0,M0,i0,k0),r0.integrate(_0,M0,i0,k0))):r0.integration.partial_fraction(n0,M0,i0)}else if(S===-.5)q.group===X0&&q.power.equals(2)&&O0.multiplier.lessThan(0)&&!c0.multiplier.lessThan(0)?(Y.negate(),s0=c0.isConstant()&&Y.isConstant()?(k=r.symfunction(b1,[Y.clone()]),O=r.symfunction(b1,[r.multiply(Y.clone(),c0)]),r.divide(r.symfunction(d,[r.divide(O0.toLinear(),O)]),k)):(W=r.symfunction(b1,[Y]),X=r.multiply(W.clone(),q.clone().toLinear()),r.divide(r.symfunction(E,[r.divide(X,r.symfunction(b1,[f0.clone()]))]),W))):r0.integration.stop();else if(S===.5&&q.power.equals(2)&&Y.greaterThan(0))r0.integration.stop();else if(q.isLinear()&&q.group!==$0)s0=r.divide(r0.integration.poly_integrate(n0),Y);else{if(q.power.equals(2)&&Y.greaterThan(0)){var b0=r.parse(b1+N0(Y)),R0=r.parse(b1+N0(c0)),i1=r.multiply(b0.clone(),R0.clone()).invert(),A1=r.pow(c0,new T0(n0.power)),a1=A.Utils.getU(n0);s1=r.multiply(i1,q.clone().toLinear());var U1=r.parse(E+N0(s1)),D1=2*(Math.abs(n0.power)-1),P1=r0.integrate(r.parse(Z+N0(a1)+"^"+D1));return A.Utils.clearU(a1),r.multiply(P1.sub(a1,U1),A1)}if(n0.group===p0||n0.power.lessThan(0)){var Y1=n0.clone().toLinear(),$1=A.Algebra.Factor.factor(Y1).toString()!==Y1.toString();if(A.Algebra.degree(Y1,r.parse(M0)).equals(2)&&!$1)try{var T1,J1,v2=A.Algebra.sqComplete(Y1,M0);s1=A.Utils.getU(Y1),T1=v2.f.sub(v2.a,s1),J1=r.pow(T1,r.parse(n0.power)),s0=r0.integrate(J1,s1).sub(s1,v2.a)}catch{r0.integration.stop()}else s0=r0.integration.partial_fraction(n0,M0,i0,k0)}else s0=r0.integration.by_parts(n0,M0,i0,k0)}s0.multiplier=s0.multiplier.multiply(_)}else if(n1===o1){var H1=n0.args[0],_=n0.multiplier.clone();n0.toUnitMultiplier();var R1,v1,e2,t2,C,T,a,w,y,Y=(m0=r0.integration.decompose_arg(H1,M0))[0],q=m0[1],v=n0.fname;if(v===c1||v===d||v==="acos"||v===E&&q.isLinear()){var U,S=n0.power.toString();$(S)&&(i0-=S),s0=H1.isComposite()?(s1=A.Utils.getU(n0),Y1=r.pow(r.parse(c1+N0(s1)),new T0(S)),p=r0.diff(H1,M0),U=r.multiply(Y1,p),P1=r0.integrate(U,s1,i0,k0),r.multiply(r.parse(_),P1.sub(s1,H1))):r.multiply(r.parse(_),r0.integration.by_parts(n0,M0,i0,k0))}else{if(v===i&&n0.power.lessThan(0))return(h1=n0.clone()).power.negate(),h1.fname=f,r.multiply(r.parse(_),r0.integrate(h1,M0,i0));if(!Y.contains(M0,!0)&&n0.isLinear())if(v==="abs")(q=r.divide(H1.clone(),Y.clone())).group!==X0||q.power.lessThan(0)?r0.integration.stop():s0=A.Utils.even(q.power)?r0.integrate(H1,M0,i0):((y=r0.integrate(q,M0,i0)).power=y.power.subtract(new F(1)),r.multiply(r.multiply(r.symfunction("abs",[q.toLinear()]),y),Y));else{var b=n0.args[0].group,R=r0.integration.decompose_arg(H1,M0);switch((b!==z0&&b!==X0&&b!==p0||!R[1].power.equals(1)||H1.hasFunc())&&r0.integration.stop(),v){case Z:s0=r.symfunction(Z0,[H1]);break;case Z0:(s0=r.symfunction(Z,[H1])).negate();break;case i:s0=r.parse(e0(_1.LOG+"(sec({0}))",H1));break;case h:s0=r.parse(e0(_1.LOG+"(tan({0})+sec({0}))",H1));break;case l:s0=r.parse(e0("-"+_1.LOG+"(csc({0})+cot({0}))",H1));break;case f:s0=r.parse(e0(_1.LOG+"(sin({0}))",H1));break;case L:s0=r.symfunction(x,[H1]);break;case x:s0=r.symfunction(L,[H1]);break;case H:s0=r.parse(e0(_1.LOG+"(cosh({0}))",H1));break;case"asec":case"acsc":case"acot":case"asech":case"acsch":case"acoth":s0=r0.integration.by_parts(n0,M0,i0,k0);break;case"sech":s0=r.parse(e0("atan(sinh({0}))",H1));break;case"csch":s0=r.parse(e0(_1.LOG+"(tanh(({0})/2))",H1));break;case"coth":s0=r.parse(e0(_1.LOG+"(sinh({0}))",H1));break;case"exp":s0=r0.integrate(r.parse(e0("e^({0})",H1)),M0,i0);break;case"S":var H1=n0.args[0].clone(),z=(w1=r0.integration.decompose_arg(H1,M0))[1],Q=w1[0],a0=w1[3];s0=r.parse(e0("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",Q,a0,q));break;case"C":H1=n0.args[0].clone(),z=(w1=r0.integration.decompose_arg(H1,M0))[1],Q=w1[0],a0=w1[3],s0=r.parse(e0("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",Q,a0,z));break;case"erf":H1=n0.args[0].clone(),z=(w1=r0.integration.decompose_arg(H1,M0))[1],Q=w1[0],s0=r.parse(e0("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",Q,z,H1));break;case"sign":s0=r.multiply(n0.clone(),H1.clone());break;default:r0.integration.stop()}s0=r.divide(s0,Y)}else q.isLinear()?v===Z||v===Z0?(S=Number(n0.power),s0=S<0?(n0.fname=v===Z0?l:h,n0.invert().updateHash(),r0.integrate(n0,M0,i0)):(H1=n0.args[0],R1=n0.clone(),v1=n0.clone(),I=new T0((S-1)/S),e2=r.multiply(Y.clone(),new T0(S)).invert(),R1.power=R1.power.subtract(new F(1)),v1.power=v1.power.subtract(new F(2)),k1=r.symfunction(v===Z?Z0:Z,[H1.clone()]),v===Z0&&k1.negate(),r.add(r.multiply(r.multiply(e2,R1),k1),r.multiply(I,r0.integrate(r.parse(v1),M0,i0))))):v===i||v===f?n0.args[0].isLinear(M0)&&(D1=n0.power.subtract(new F(1)).toString(),W1=n0.clone().toUnitMultiplier(),w=r.parse(e0((v===f?"-":"")+"1/({2}*{0})*{3}({1})^({0})",D1,H1,Y,v)),W1.power=W1.power.subtract(new F(2)),W1.power.equals(0)&&(W1=r.parse(W1)),s0=r.subtract(w,r0.integrate(W1,M0,i0))):v===h||v===l?(t2=n0.power.subtract(new F(1)).toString(),C=n0.power.subtract(new F(2)).toString(),T=v===h?i:f,W1=n0.clone().toUnitMultiplier(),a=e0((v===l?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",Y,t2,C,H1,v,T),w=r.parse(a),W1.power=W1.power.subtract(new F(2)),W1.power.equals(0)&&(W1=r.parse(W1)),s0=r.add(w,r.multiply(new T0(C/t2),r0.integrate(W1,M0,i0)))):v!==x&&v!==L||!n0.power.equals(2)?r0.integration.stop():s0=r0.integrate(n0.fnTransform(),M0,i0):r0.integration.stop();s0.multiplier=s0.multiplier.multiply(_)}}else if(n1===$0)s0=r0.integration.partial_fraction(n0,M0,i0);else if(n1===p0){var g0=(n0=n0.getDenom().group===X0?r.expand(n0):n0).stripVar(M0),e=r.divide(n0.clone(),g0.clone());if(g0.contains(M0)&&(e=r.multiply(e,g0),g0=new T0(1)),e.group!==p0){if(e.equals(1))return r0.integrate(r.expand(n0),M0,i0);e.clone().toLinear().isPoly(!0)&&1<A.Utils.variables(e).length&&(e=A.Algebra.Factor.factor(e)),s0=r0.integrate(e,M0,i0)}else{var u=e.collectSymbols().sort(function(M1,u2){return M1.group===u2.group?Number(M1.power)===Number(u2.power)?M1<u2?1:-1:u2.power-M1.power:u2.group-M1.group}).map(function(M1){return M1=T0.unwrapSQRT(M1,!0),M1.fname==="exp"?r.parse(e0("({1})*e^({0})",M1.args[0],M1.multiplier)):M1}),m=u.length;if(n0.power<0){if(m===2)return r0.integrate(r.expand(n0),M0,i0,k0)}else if(m===2){try{s0=r0.integration.u_substitution(u,M0)}catch{}if(!s0){var N,B,o0,x0,n0,W0,V0,K0,O1,D0,G,I1,Z1,B1,z1,w1,L1,c2,i2,b2,K1,t,p,M,I,D,t0,j,C0,j0,J0=u[0].group,e1=u[1].group,s=u[0],c=u[1],P=s.fname,V=c.fname;if(n0=r.multiply(s.clone(),c.clone()),J0===o1&&e1===o1)if(P===c1||V===c1)s0=r0.integration.by_parts(n0.clone(),M0,i0,k0);else{u.sort(function(M1,u2){return u2.fname>M1.fname});var m0,P0=s.args[0];P0.isLinear()&&(P0.group===z0||P0.group===p0||P0.group===X0)||r0.integration.stop(),q=(m0=r0.integration.decompose_arg(P0,M0))[1],Y=m0[0],q.isLinear()||r0.integration.stop();var r1,y1=c.args[0];if(P0.equals(y1))if(P===Z0&&V===Z||P===Z&&V===Z0)if(s.power.lessThan(0)&&r0.integration.stop(),P===Z0&&s.power.add(c.power).equals(0))s.fname=i,s.updateHash(),s0=r0.integrate(s,M0,i0);else if(x1(s.power)&&V===Z&&c.power.lessThan(0)){var D1=Number(s.power)/2,u1=r.parse(e0("(1-cos({0})^2)^({1})",s.args[0],D1));s0=r0.integrate(r.expand(r.multiply(u1,c.clone())),M0,i0,k0)}else if(x1(s.power)&&V===Z0&&c.power.lessThan(0))D1=Number(s.power)/2,u1=r.parse(e0("(1-sin({0})^2)^({1})",s.args[0],D1)),s0=r0.integrate(r.expand(r.multiply(u1,c.clone())),M0,i0,k0);else{var s1,C1=A.Utils.even(s.power),g1=A.Utils.even(c.power);if(s0=new T0(0),C1&&g1){var f2=function(s2){var l2=s2.power/2,l2=s2.fname===Z?"((1/2)+(cos(2*("+s2.args[0]+"))/2))^"+l2:"((1/2)-(cos(2*("+s2.args[0]+"))/2))^"+l2;return r.parse(l2)},Y=f2(s),c0=f2(c),k1=r.multiply(Y,c0);return(h1=r.expand(k1)).each(function(s2){s0=r.add(s0,r0.integrate(s2,M0,i0))}),r.multiply(s0,g0)}W1=C1?(s1=s,c):(s1=c,s);var h1,Q1=s1.fname===Z?-1:1,p2=((D1=W1.power)-1)/2,a2=r.parse("(1-"+s1.fname+A.Utils.inBrackets(P0)+"^2)^"+p2);(h1=r.expand(r.multiply(new T0(Q1),r.multiply(s1.clone(),a2)))).each(function(M1){s0=r.add(s0,r0.integration.poly_integrate(M1.clone()))})}else P===h&&V===i&&q.isLinear()&&c.isLinear()?s0=r.parse(e0("sec({0})^({1})/({1})",s.args[0],s.power)):P===i&&V===h&&q.isLinear()?s.isLinear()&&c.isLinear()?s0=r.divide(r.symfunction(h,[P0.clone()]),Y):x1(s.power)?(S=Number(s.power)/2,k1=r.parse(e0("(sec({0})^2-1)^({1})",s.args[0],S)),s0=r0.integrate(r.expand(r.multiply(k1,c)),M0,i0)):r0.integration.stop():s0=P===h&&V===Z?(s.fname=Z,s.invert().updateHash(),r0.integrate(r.multiply(s,c),M0,i0)):P===Z0&&V===l?(c.fname=Z0,c.invert().updateHash(),r0.integrate(r.multiply(s,c),M0,i0)):(k1=P!==i||V!==Z&&V!==Z0||!c.power.lessThan(0)?r.multiply(s.fnTransform(),c.fnTransform()):r.multiply(s.fnTransform(),c),r0.integrate(r.expand(k1),M0,i0));else P!==Z0&&P!==Z||V!==Z0&&V!==Z?r0.integration.stop():s.isLinear()&&c.isLinear()?s0=s.args[0].isLinear()&&c.args[0].isLinear()?(V===Z0?(O0=s.args[0],r1=c.args[0]):(r1=s.args[0],O0=c.args[0]),Y1=r.parse(e0("(sin(({1})+({0}))+sin(({1})-({0})))/2",O0.toString(),r1.toString())),r0.integrate(Y1,M0,i0)):(h2=l1(u),r0.integrate(r.expand(h2),M0,i0)):(h2=new T0(1),u.map(function(M1){M1=M1.fnTransform(),h2=r.multiply(h2,M1)}),k1=r.expand(h2),(s0=r0.integrate(k1,M0,i0)).hasIntegral()&&(s0=r0.integrate(l1(h2.collectSymbols()),M0,i0)))}else J0===o1&&e1===X0?(N=s.isLinear(),s.fname===Z&&N&&c.power.equals(-1)?s0=r.symfunction("Ci",[s.args[0]]):s.fname===Z&&c.power.equals(-1)?s0=r0.integrate(r.multiply(s.fnTransform(),c.clone()),M0,i0):s.fname===x&&N&&c.power.equals(-1)?s0=r.symfunction("Chi",[s.args[0]]):s.fname===x&&c.power.equals(-1)?s0=r0.integrate(r.multiply(s.fnTransform(),c.clone()),M0,i0):s.fname===Z0&&N&&c.power.equals(-1)?s0=r.symfunction("Si",[s.args[0]]):s.fname===Z0&&c.power.equals(-1)?s0=r0.integrate(r.multiply(s.fnTransform(),c.clone()),M0,i0):s.fname===L&&N&&c.power.equals(-1)?s0=r.symfunction("Shi",[s.args[0]]):s.fname===L&&c.power.equals(-1)?s0=r0.integrate(r.multiply(s.fnTransform(),c.clone()),M0,i0):s.fname===c1&&c.power.equals(-1)?s0=r0.integration.poly_integrate(s,M0,i0):s.fname==="erf"?c.power.equals(1)&&(Q=(w1=r0.integration.decompose_arg(s.args[0],M0))[0],z=w1[1],H1=s.args[0].toString(),s0=r.parse(e0("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",Q,z,H1))):s0=r0.integration.by_parts(n0,M0,i0,k0)):J0===q1&&e1===X0?(q=P===c1?r0.integration.decompose_arg(s.args[0],M0)[1]:null,s0=s.isE()&&(s.power.group===X0||s.power.group===p0)&&c.power.equals(-1)?r.symfunction("Ei",[s.power.clone()]):P===c1&&q.value===c.value?r0.integration.poly_integrate(s,M0,i0):r0.integration.by_parts(n0,M0,i0,k0)):J0===$0&&e1===X0?(n0=c.value===s.value&&s.power.equals(-1)?(B=Math.min.apply(null,A.Utils.keys(s.symbols)),o0=Math.min(B,c.power),(x0=c.clone()).power=new F(o0),c=r.divide(c,x0.clone()),k1=new T0(0),s.each(function(M1){k1=r.add(k1,r.divide(M1.clone(),x0.clone()))}),k1.multiplier=s.multiplier,r.divide(c,k1)):r.expand(n0),s0=r0.integration.partial_fraction(n0,M0,i0)):J0===z0&&e1===X0?(Y1=s.clone().toLinear(),W0=A.Algebra.degree(Y1,r.parse(M0)).equals(1),s.power.equals(-.5)?(Y=(m0=r0.integration.decompose_arg(s.clone().toLinear(),M0))[0].negate(),q=m0[1],c0=m0[3],K1=Number(s.power),t=Number(c.power),$(t)&&A.Utils.even(t)&&q.power.equals(2)?(L1=r.divide(r.multiply(r.pow(c0.clone(),new T0(2)),r.symfunction(b1,[r.divide(c0.clone(),Y.clone())])),r.pow(Y.clone(),new T0(2))),L1=r.multiply(L1,r.symfunction(b1,[c0]).invert()),(V0=r.parse("sin(u)")).power=V0.power.multiply(c.power),P1=r0.integrate(V0,"u",i0),K0=r.parse("asin(sqrt("+Y+"/"+c0+")*"+M0+")"),s0=r.multiply(L1,P1.sub(new T0("u"),K0))):K1===-.5&&(O1=function(M1,u2){if(u2=r.parse(r0.integrate(M1,M0,i0,k0).sub(M0,e0(u2,M0))),!u2.hasIntegral())return u2},t===-1?s0=O1(r.expand(r.expand(r.pow(r.multiply(s.invert(),c.invert()),new T0(2)))).invert(),"sqrt(1-1/({0})^2)"):t===-2&&(s0=O1(r.sqrt(r.expand(r.divide(r.pow(n0,new T0(2)).invert(),r.pow(new T0(M0),new T0(2))).negate())).invert(),"sqrt(1-1/({0})^2)")))):s.power.equals(-1)&&c.isLinear()&&W0?s0=r0.integration.partial_fraction(n0,M0,i0):!s.power.lessThan(0)&&$(s.power)?(D0=r.expand(s),s0=new T0(0),D0.each(function(M1){M1.group===$0?M1.each(function(u2){s0=r.add(s0,r0.integrate(r.multiply(c.clone(),u2),M0,i0))}):s0=r.add(s0,r0.integrate(r.multiply(c.clone(),M1),M0,i0))})):s.power.lessThan(-2)?s0=r0.integration.by_parts(n0,M0,i0,k0):s.power.lessThan(0)&&c.power.greaterThan(1)?(Y=(m0=r0.integration.decompose_arg(s.clone().toLinear(),M0))[0].negate(),q=m0[1],c0=m0[3],f0=s.clone().toLinear(),s0=q.group!==$0&&q.isLinear()?(S=Number(c.power),s1=new T0(p="_u_"),G=r.expand(r.divide(r.pow(r.subtract(s1.clone(),c0.clone()),new T0(S)),s1.clone())),(I1={})[p]=f0,Z1=r.parse(G,I1),r0.integrate(Z1,M0,0)):c.power.greaterThan(q.power)||c.power.equals(q.power)?(B1=new A.Algebra.Classes.Factors,s=A.Algebra.Factor.coeffFactor(s.invert(),B1),(z1=A.Algebra.divide(c,s)).group!==p0?(s0=new T0(0),z1.each(function(M1){s0=r.add(s0,r0.integrate(M1,M0,i0))}),B1.each(function(M1){s0=r.divide(s0,M1)}),r.expand(s0)):r0.integration.by_parts(n0,M0,i0,k0)):r0.integration.partial_fraction(n0,M0,i0)):s.power.den.equals(2)?(Y=(w1=r0.integration.decompose_arg(s.clone().toLinear(),M0))[3],q=w1[1],c0=w1[0],r1=w1[2],s0=q.power.equals(2)&&c0.lessThan(0)?(Y.equals(1)||(g0=r.multiply(g0,r.pow(Y,new T0(2)))),s1=M0,L1=r.divide(r.pow(c0.clone().negate(),new T0(.5)),r.pow(Y,new T0(.5))),p=r.symfunction(Z,[new T0(s1)]),c2=r.pow(r.symfunction(Z,[new T0(s1)]),new T0(s.power.num)),i2=r.pow(r.symfunction(Z0,[new T0(s1)]),new T0(c.power)),b2=r.multiply(r.multiply(c2,p),i2),(P1=r0.integrate(b2,s1,i0)).sub(s1,r.symfunction(d,[r.multiply(new T0(M0),L1)]))):r0.integration.partial_fraction(n0,M0,i0,k0)):W0&&(s0=r0.integration.partial_fraction(n0,M0,i0))):s.isComposite()&&c.isComposite()?(s0=new T0(0),s.power.greaterThan(0)&&c.power.greaterThan(0)?(h1=r.expand(n0)).each(function(M1){s0=r.add(s0,r0.integrate(M1,M0,i0))},!0):(K1=Number(s.power),t=Number(c.power),K1<0&&0<t&&(k1=s,s=c,c=k1),K1===-1&&t===-1?s0=r0.integration.partial_fraction(n0,M0):s.each(function(M1){M1=r.multiply(M1,c.clone()),M1=r0.integrate(M1,M0,i0),s0=r.add(s0,M1)}))):J0===z0&&u[0].power.greaterThan(0)?(s=r.expand(s),s0=new T0(0),s.each(function(M1){s0=r.add(s0,r0.integrate(r.multiply(M1,c.clone()),M0,i0))},!0)):J0===o1&&e1===q1&&A.Utils.in_htrig(s.fname)?(s=s.fnTransform(),s0=r0.integrate(r.expand(r.multiply(s,c)),M0,i0)):J0===o1&&e1===z0||e1===o1&&J0===z0?(e1===o1&&J0===z0&&(k1=s,s=c,c=k1),p=T0.unwrapSQRT(r0.diff(s.clone(),M0),!0),M=T0.unwrapSQRT(c,!0),p.power.equals(M.power)?(S=new T0(c.power),D=p.clone().toLinear(),t0=c.clone().toLinear(),(I=A.Algebra.divide(D.toLinear(),t0)).isConstant()&&(j=r.pow(I,S.negate()),s0=r.multiply(j,r0.integration.poly_integrate(s.clone())))):s0=r0.integration.by_parts(n0,M0,i0,k0)):(C0=s.clone().toLinear(),j0=c.clone().toLinear(),s0=J0===q1&&e1===q1&&s.power.contains(M0)&&c.power.contains(M0)&&!C0.contains(M0)&&!j0.contains(M0)?r.parse(e0("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",C0.toString(),j0.toString(),s.power.multiplier.toString(),c.power.multiplier.toString(),M0)):r0.integration.by_parts(n0,M0,i0,k0))}}else if(m===3&&(u[2].group===X0&&u[2].power.lessThan(2)||u[0].group===z0)){var W1,r2=u[0];r2.group===z0?(r2.power.greaterThan(1)&&(r2=r.expand(r2)),W1=r.multiply(u[1],u[2]),s0=new T0(0),r2.each(function(M1){M1=r.multiply(M1,W1.clone()),M1=r0.integrate(M1,M0,i0),s0=r.add(s0,M1)},!0)):s0=r0.integration.by_parts(n0,M0,i0,k0)}else if(q0(u)){for(var k1=new T0(1),o2=0,m=u.length;o2<m;o2++)k1=r.multiply(k1,u[o2].fnTransform());k1=r.expand(k1),s0=r0.integrate(k1,M0,i0)}else{var h2=l1(u);s0=r0.integrate(r.expand(h2),M0,i0)}}s0=r.multiply(s0,g0)}}else s0=r.multiply(n0.clone(),r.parse(M0));if(s0)return s0}catch(M1){if(!(M1 instanceof u0||M1 instanceof A.exceptions.DivisionByZero))throw M1}return r.symfunction("integrate",[w0,I0])},!1))},defint:function(w0,I0,i0,k0){k0=k0||"x";function d1(m1,_,S){try{return r.parse(m1,_)}catch{return r0.Limit.limit(m1,k0,S)}}var H0,s0,M0=A.Utils.variables(w0),n1=w0.hasTrig();return M0.length!==1||k0||(k0=M0[0]),n1||(H0=r0.integrate(w0,k0)),n1||H0.hasIntegral()?M0.length===1&&I0.isConstant()&&i0.isConstant()?(s0=A.Utils.build(w0),new T0(A.Math2.num_integrate(s0,Number(I0),Number(i0)))):r.symfunction("defint",[w0,I0,i0,k0]):(s0={},(w0={})[k0]=i0,s0[k0]=I0,i0=d1(H0,w0,i0),I0=d1(H0,s0,I0),r.subtract(i0,I0))},Limit:{interval:function(w0,I0){return r.parse(e0("[{0}, {1}]",w0,I0))},diverges:function(){return r0.Limit.interval("-Infinity","Infinity")},divide:function(w0,I0,i0,k0,d1){if(!(d1++>_1.max_lim_depth)){w0.clone();var H0=I0.clone();if(I0.fname==="abs"){var s0=w0.sign(),M0=k0.sign();if(k0.isInfinity)return r.multiply(new T0(s0),new T0(M0));if(k0.equals(0)){var M0=r.parse(w0.multiplier),n1=r.parse(I0.multiplier);return r.divide(r.multiply(M0,r0.Limit.interval("-1","1")),n1)}r0.Limit.diverges()}var m1=function(c0){if(A.Utils.isVector(c0)){for(var O0=0;O0<c0.elements.length;O0++)if(!c0.elements[O0].isInfinity)return!1;return!0}return c0.isInfinity},_=function(c0,O0){return!A.Utils.isVector(c0)&&c0.equals(O0)};do var S,O,W=A0(r0.Limit.limit(w0.clone(),i0,k0,d1)),X=A0(r0.Limit.limit(I0.clone(),i0,k0,d1)),f0=m1(W)&&m1(X)||_(W,0)&&_(X,0);while(f0&&(S=r0.diff(w0.clone(),i0),O=r0.diff(I0.clone(),i0),w0=(O=r.expand(r.divide(S,O))).getNum(),I0=O.getDenom()),f0);return n1=X.equals(0),H0=Number(H0.power),k0.isConstant(!0)&&n1?T0.infinity(A.Utils.even(H0)&&W.lessThan(0)?-1:void 0):n1?r0.Limit.diverges():r.divide(W,X)}},rewriteToLog:function(w0){var I0=w0.power.clone();return w0.toLinear(),r.pow(new T0("e"),r.multiply(I0,r.symfunction(_1.LOG+"",[w0])))},getSubbed:function(w0,I0,i0){var k0;w0.group===q1&&(w0=r0.rewriteToLog(w0));try{k0=w0.sub(I0,i0)}catch{k0=w0}return k0},isInterval:function(w0){return A.Utils.isVector(w0)},isConvergent:function(w0){return!(r0.Limit.isInterval(w0)&&w0.elements[0].isInfinity&&w0.elements[1].isInfinity||w0.containsFunction("limit"))},limit:function(w0,I0,i0,k0){if(w0.isLinear()&&w0.isComposite()){var d1=new T0(0);return w0.each(function(U1){d1=r.add(d1,r0.Limit.limit(U1,I0,i0,k0))},!0),d1}if(w0=A.Algebra.Simplify.simplify(w0),k0=k0||1,!(k0++>_1.max_lim_depth)){var H0=r.parse(w0.multiplier);w0.toUnitMultiplier();try{if(w0.isConstant(!0))c0=w0;else{var s0={};s0[I0]=i0;try{var M0=r.parse(w0.sub(I0,i0),s0);(M0.isConstant(!0)||M0.isInfinity)&&(c0=M0)}catch{}if(!c0){var n1,m1=w0.getNum(),_=w0.getDenom();if(_.isConstant(!0)){if(w0.group===q1){var S,O,W,X,f0,c0,O0=w0.clone().toLinear(),Y=(w0.power.clone(),O0.getNum()),q=O0.getDenom(),J=A.Utils.decompose_fn(q,I0,!0);c0=Y.group===X0&&Y.multiplier.isOne()&&J.ax.group===X0&&J.b.isConstant(!0)&&J.a.isOne()&&J.b.isConstant(!0)?r.parse(e0("(1/e^({0}))",J.b)):(O=(S=r0.Limit.rewriteToLog(w0.clone())).power.clone(),W=S.clone().toLinear(),X=r0.Limit.limit(W,I0,i0,k0),f0=r0.Limit.limit(O,I0,i0,k0),r.pow(X,f0))}else if(w0.group===o1&&w0.args.length===1){var k,S0=r0.Limit.limit(w0.args[0],I0,i0,k0);if(A.Utils.isVector(S0))return c0=S0.map(function(U1){return w0.clone().args[0]=U1,r0.Limit.limit(r.symfunction(w0.fname,[U1]),I0,i0,k0)}),r.multiply(H0,c0);if(S0.isConstant(!0)){var E0=r.symfunction(w0.fname,[S0]);try{A0(E0),k=!0}catch{k=!1}}if(k)c0=E0;else if(r0.Limit.isConvergent(S0))if(w0.fname===c1)switch(S0.toString()){case"0":c0=T0.infinity().negate();break;case"Infinity":case"-Infinity":c0=T0.infinity()}else if(w0.fname!==Z&&w0.fname!==Z0||!i0.isInfinity){if(w0.fname===i){var U0=w0.args[0],h0=U0.getNum(),l0=U0.getDenom(),F0=h0.toUnitMultiplier();(i0.isInfinity||F0.equals("pi")&&l0.equals(2))&&(c0=divergent())}else if(w0.fname===_1.FACTORIAL&&S0.isInfinity)return T0.infinity()}else c0=r0.Limit.interval(-1,1)}else if(w0.group===X0){if(0<w0.power)return r.parse(w0,s0);c0=A.Utils.even(w0.power)?T0.infinity():r0.Limit.diverges()}else if(w0.group===p0){for(var O0=(G0=w0.collectSymbols().sort(function(D1,P1){return D1.group-P1.group})).pop(),L0=A0(r0.Limit.limit(O0,I0,i0,k0));G0.length;){var _0=G0.pop(),y0=A0(r0.Limit.limit(_0,I0,i0,k0));L0.isInfinity||!r0.Limit.isConvergent(L0)&&y0.equals(0)||L0.equals(0)&&r0.Limit.isConvergent(y0)?((_0=_0.containsFunction(c1)?[O0,O0=_0][0]:_0).invert(),L0=L0.isInfinity&&y0.isInfinity?T0.infinity():r0.Limit.divide(O0,_0,I0,i0,k0)):(L0=r.multiply(L0,y0),O0=r.multiply(O0,_0))}c0=L0}else if(w0.isComposite()){w0.isLinear()||(w0=r.expand(w0)),c0=new T0(0);for(var G0=w0.collectSymbols().sort(function(U1,D1){return D1.group-U1.group}),b0=[],R0=new T0(0),i1=0,A1=G0.length;i1<A1;i1++)(a1=G0[i1].clone()).group===o1||a1.group===p0&&a1.hasFunc()?R0=r.add(R0,a1):b0.push(a1);for(b0.unshift(R0),b0.length!==1&&(G0=b0),i1=0,A1=G0.length;i1<A1;i1++){var a1=G0[i1];try{n1=r0.Limit.limit(a1,I0,i0,k0)}catch{n1=r0.Limit.diverges()}try{c0=r.add(c0,n1)}catch{if(k0++>_1.max_lim_depth)return;c0=r0.Limit.limit(r0.diff(w0,I0),I0,i0,k0)}}}}else c0=r0.Limit.divide(m1,_,I0,i0,k0)}}c0=c0||r.symfunction("limit",[w0,I0,i0])}catch{c0=r.symfunction("limit",[w0,I0,i0])}return r.multiply(H0,c0)}}},Fresnel:{S:function(w0){return w0.isConstant(!0)?r0.defint(r.parse("sin(pi*x^2/2)"),T0(0),w0,"x"):r.symfunction("S",arguments)},C:function(w0){return w0.isConstant(!0)?r0.defint(r.parse("cos(pi*x^2/2)"),T0(0),w0,"x"):r.symfunction("C",arguments)}}};A2.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return r0.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return r0.sum}},{name:"product",visible:!0,numargs:4,build:function(){return r0.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return r0.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return r0.defint}},{name:"S",visible:!0,numargs:1,build:function(){return r0.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return r0.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return r0.Limit.limit}}]),A2.updateAPI()}(),A2=d3.exports,b3.exports,function(){var A,r=A2.getCore(),F=r.PARSER,_1=r.Algebra,N1=r.Calculus,T0=N1.integration.decompose_arg,X1=r.Utils.evaluate,N0=r.Utils.remove,$=r.Utils.format,e0=r.Utils.build,x1=r.Utils.knownVariable,A0=r.Symbol,f1=r.Utils.isSymbol,X0=r.Utils.variables,o1=r.groups.S,$0=r.groups.PL,z0=r.groups.CB,p0=r.groups.CP,q1=r.groups.FN,F1=r.Settings,c1=r.Utils.range,b1=r.Utils.isArray;function Z0(f,d){if(d.isConstant()&&f.isConstant()&&!f.equals(d)||f.equals(r.Settings.IMAGINARY)&&d.isConstant(!0)||d.equals(r.Settings.IMAGINARY)&&f.isConstant(!0))throw new r.exceptions.NerdamerValueError(f.toString()+" does not equal "+d.toString());this.LHS=f,this.RHS=d}r.Settings.SOLVE_RADIUS=1e3,r.Settings.ROOTS_PER_SIDE=10,r.Settings.make_pi_conversions=!1,r.Settings.STEP_SIZE=.1,r.Settings.EPSILON=1e-13,r.Settings.MAX_NEWTON_ITERATIONS=200,r.Settings.MAX_NON_LINEAR_TRIES=12,r.Settings.NON_LINEAR_JUMP_AT=50,r.Settings.NON_LINEAR_JUMP_SIZE=100,r.Settings.NON_LINEAR_START=.01,r.Settings.NEWTON_SLICES=200,r.Settings.NEWTON_EPSILON=2*Number.EPSILON,r.Settings.SOLUTION_PROXIMITY=1e-14,r.Settings.FILTER_SOLUTIONS=!0,r.Settings.MAX_SOLVE_DEPTH=10,r.Settings.ZERO_EPSILON=1e-9,r.Settings.MAX_BISECTION_ITER=2e3,r.Settings.BI_SECTION_EPSILON=1e-12,r.Symbol.prototype.hasTrig=function(){return this.containsFunction(["cos","sin","tan","cot","csc","sec"])},r.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var f in this.symbols){var d=this.symbols[f];if(d.group===$0&&d.hasNegativeTerms()||this.symbols[f].power.lessThan(0))return!0}return!1},Z0.prototype={toString:function(){return this.LHS.toString()+"="+this.RHS.toString()},text:function(f){return this.LHS.text(f)+"="+this.RHS.text(f)},toLHS:function(f){var d=(E=(f=f===void 0)?this.removeDenom():this.clone()).LHS,E=E.RHS;return d.isConstant(!0)&&!E.isConstant(!0)&&([d,E]=[E,d]),E=F.subtract(d,E),new Z0(f?F.expand(E):E,new A0(0)).removeDenom().LHS},removeDenom:function(){var f=this.LHS.clone(),d=this.RHS.clone(),E=F.multiply(f.getDenom(),d.getDenom());if(f=F.expand(F.multiply(f,E.clone())),(d=F.expand(F.multiply(d,E))).group===p0&&d.group!==p0&&(L=f,f=d,d=L),f.group===z0){var L=new A0(f.multiplier),x=d.clone();f.each(function(d0){d0.power.lessThan(0)?x=F.divide(x,d0):L=F.multiply(L,d0)}),f=L,d=x}else if(f.group===p0)for(var H in f.symbols){var u0=f.symbols[H];if(u0.group===z0){for(var q0 in u0.symbols)if(q0=u0.symbols[q0],q0.power.lessThan(0))return new Z0(F.expand(F.multiply(q0.clone().toLinear(),f)),F.expand(F.multiply(q0.clone().toLinear(),d)))}}return new Z0(f,d)},clone:function(){return new Z0(this.LHS.clone(),this.RHS.clone())},sub:function(f,d){var E=this.clone();return E.LHS=E.LHS.sub(f.clone(),d.clone()),E.RHS=E.RHS.sub(f.clone(),d.clone()),E},isZero:function(){return r.Utils.evaluate(this.toLHS()).equals(0)},latex:function(f){return[this.LHS.latex(f),this.RHS.latex(f)].join("=")}},F.equals=function(f,d){return new Z0(f,d)},A=F.functions.simplify[0],F.functions.simplify[0]=function(f){return f instanceof Z0?(f.LHS=A(f.LHS),f.RHS=A(f.RHS),f):A(f)},r.Expression.prototype.equals=function(f){return f instanceof r.Expression&&(f=f.symbol),new Z0(this.symbol,f)},r.Expression.prototype.solveFor=function(f){var d;if(this.symbol instanceof Z0){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(f))return new r.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(f))return new r.Expression(this.symbol.RHS);d=this.symbol.toLHS()}else d=this.symbol;return l(d,f).map(function(E){return new r.Expression(E)})},r.Expression.prototype.expand=function(){if(this.symbol instanceof Z0){var f=this.symbol.clone();return f.RHS=F.expand(f.RHS),f.LHS=F.expand(f.LHS),new r.Expression(f)}return new r.Expression(F.expand(this.symbol))},r.Expression.prototype.variables=function(){return this.symbol instanceof Z0?r.Utils.arrayUnique(X0(this.symbol.LHS).concat(X0(this.symbol.RHS))):X0(this.symbol)};function Z(f,d){return F.equals(f,d)}r.Equation=Z0;var i=r.Utils.checkAll=function(f,d){for(var E=0;E<f.length;E++)if(d(f[E]))return!1;return!0},h=r.Solve={version:"2.0.3",solutions:[],solve:function(f,d){return d=l(f,String(d)),new r.Vector(d)},toLHS:function(f,d){return f1(f)?f:(f instanceof Z0||((E=f.split("="))[1]=E[1]||"0",f=new Z0(F.parse(E[0]),F.parse(E[1]))),f.toLHS(d));var E},solveCircle:function(f,d){for(var E=d.map(function(r0){return F.parse(r0)}),L=[],x=[],H=0;H<f.length;H++){for(var u0=[],q0=0;q0<E.length;q0++)u0.push(Number(r.Algebra.degree(f[H],E[q0])));u0.push(r.Utils.arraySum(u0,!0)),L.push(u0)}var d0,Q0,t1=f[0],l1=f[1];return L[0][2]>L[1][2]&&([l1,t1]=[t1,l1],[L[1],L[0]]=[L[0],L[1]]),L[0][0]===1&&L[0][2]===2&&L[1][0]===2&&L[1][2]===4&&(d0=d[0],Q0=d[1],d=l(F.parse(l1,x1(d0,l(F.parse(t1),d0)[0])),Q0).map(function(r0){return r0.toString()}),l1=[l(F.parse(t1,x1(Q0,d[0])))[0].toString()],d[1]&&l1.push(l(F.parse(t1,x1(Q0,d[1])))[0].toString()),F1.SOLUTIONS_AS_OBJECT?((x={})[d0]=l1,x[Q0]=d):(d.unshift(Q0),l1.unshift(d0),x=[l1,d])),x},solveNonLinearSystem:function(f,d,E){if(d<0)return[];E=E===void 0?r.Settings.NON_LINEAR_START:E;var w0=r.Settings.MAX_NON_LINEAR_TRIES,L=Math.floor(w0/2);d=d===void 0?w0:d;var x,H,u0,q0,d0,Q0=r.Settings.NON_LINEAR_JUMP_AT,t1=r.Settings.NON_LINEAR_JUMP_SIZE,l1=!0,r0=r.Utils.arrayGetVariables(f),w0=r.Matrix.jacobian(f,r0,function(m1){return e0(m1,r0)},!0),I0=r.Settings.MAX_NEWTON_ITERATIONS,i0=f.map(function(m1){return e0(m1,r0)}),k0=w0.map(function(m1){return e0(m1,r0)},!0),d1=r.Matrix.cMatrix(0,r0),H0=r.Matrix.cMatrix(E,r0),s0=0;do{if(I0<s0)break;x=function(m1,_){return m1.map(function(S,O){return Number(_.get(O,0))})}(r0,H0),q0=H0.clone(),i0.forEach(function(m1,_){H0.set(_,0,m1.apply(null,x))});var M0=new r.Matrix;if(k0.each(function(m1,_,S){m1=m1.apply(null,x),M0.set(_,S,m1)}),M0=M0.invert(),d0=(H=F.multiply(M0,H0).negate()).subtract(d1,function(m1){return F.parse(Number(m1))}),d1=q0.add(H,function(m1){return F.parse(Number(m1))}),H0=d1,Q0<=s0&&1<u0){d===L&&(E=0);var n1=L<d?1:-1;return n=d%Math.floor(L)+1,E+=n1*n*t1,h.solveNonLinearSystem(f,--d,E)}}while(n1=u0,s0++,u0=d0.max(),Number(u0)!==Number(n1)&&Number(u0)>=Number.EPSILON);return l1?h.systemSolutions(H0,r0,!0,function(m1){return r.Utils.round(Number(m1),14)}):[]},systemSolutions:function(f,d,E,L){var x=r.Settings.SOLUTIONS_AS_OBJECT?{}:[];return f.each(function(H,u0){var q0=(E?F.expand(H):H).valueOf();L&&(q0=L.call(H,q0)),u0=d[u0],r.Settings.SOLUTIONS_AS_OBJECT?x[u0]=q0:x.push([u0,q0])}),x},solveSystemBySubstitution:function(f){var d=X0(f[0]),E=X0(f[1]);return f.length===2&&d.length===2&&r.Utils.arrayEqual(d,E)?h.solveCircle(f,d):[]},solveSystem:function(f,d){for(var E=0;E<f.length;E++)f[E]=h.toLHS(f[E]);var L,x=f.length,H=new r.Matrix,u0=new r.Matrix,q0=!1;if(d===void 0){if(!_1.allLinear(f))try{return h.solveNonLinearSystem(f)}catch(O){if(O instanceof r.exceptions.DivisionByZero)return h.solveSystemBySubstitution(f)}if((L=r.Utils.arrayGetVariables(f)).length===1){var d0,Q0=0;do var t1=f[Q0].clone();while(0<Q0&&(t1=t1.sub(L[0],d0[0])),d0=l(t1,L[0]),++Q0<f.length);return F1.SOLUTIONS_AS_OBJECT?(w0={})[L[0]]=d0:w0=d0.length===0?d0:[L[0],d0],w0}if(L.length<f.length){for(var l1=[],Q0=f.length,E=0;E<Q0-1;E++)l1.push(F.parse(f[E]));var r0={},w0=h.solveSystem(l1,L);Array.isArray(w0)?w0.forEach(function(O){r0[O[0]]=O[1]}):r0=w0;for(var I0=!0,E=Q0-1;E<Q0;E++)F.parse(f[E],r0).equals(0)||(I0=!1);if(I0)return w0}for(E=0;E<L.length;E++)A2.setVar(L[E],"delete");for(E=0;E<x;E++){for(var t1=f[E],i0=0;i0<L.length;i0++){var k0=L[i0],d1=[];t1.each(function(W){W.contains(k0)&&(d1=d1.concat(W.coeffs()))});var H0=r.Utils.arraySum(d1);H.set(E,i0,H0)}var s0=t1.clone();L.map(function(O){s0=s0.stripVar(O,!0)}),u0.set(E,0,s0.negate())}}else for(L=d,q0=!0,E=0;E<x;E++){for(u0.set(E,0,new A0(0)),t1=F.expand(f[E]).collectSymbols(),i0=0;i0<d.length;i0++){H.set(E,i0,new A0(0));for(var k0=d[i0],M0=0;M0<t1.length;M0++){for(var n1,m1=t1[M0],_=!1,S=0;S<d.length;S++)m1.contains(d[S])&&(_&&r.err("Multiple variables found for term "+m1),_=!0);m1.contains(k0)&&(n1=T0(N0(t1,M0),k0),H.set(E,i0,F.add(H.get(E,i0),n1[0])))}}for(M0=0;M0<t1.length;M0++)u0.set(E,0,F.add(u0.get(E,0),t1[M0]))}if(L.length!==f.length||H.determinant().equals(0))throw new r.exceptions.SolveError("System does not have a distinct solution");return w0=(H=H.invert()).multiply(u0),r.Utils.isArray(d)&&w0.each(function(O){return O.negate()}),h.systemSolutions(w0,L,q0)},quad:function(f,d,E){return f=F.subtract(F.pow(d.clone(),A0(2)),F.multiply(F.multiply(E.clone(),f.clone()),A0(4))),f=F.expand(f),f=F.pow(f,A0(.5)),E=F.parse(F.multiply(new A0(2),E.clone())),[F.parse($("(-({0})+({1}))/({2})",d,f,E)),F.parse($("(-({0})-({1}))/({2})",d,f,E))]},cubic:function(f,d,E,L){return L=L.text(),E=E.text(),d=d.text(),f=`(-(${E})^3/(27*(${L})^3)+(${E})*(${d})/(6*(${L})^2)-(${f.text()})/(2*(${L})))`,d=`((${d})/(3*(${L}))-(${E})^2/(9*(${L})^2))`,E=`((${f})+sqrt((${f})^2+(${d})^3))^(1/3)+((${f})-sqrt((${f})^2+(${d})^3))^(1/3)-(${`(${E})/(3*(${L}))`})`,L="1/2+sqrt(3)/2*i",[F.parse(E),F.parse(`(${E})(${L})`),F.parse(`(${E})(${L})^2`)]},quartic:function(f,d,E,L,x){var H,u0,q0,d0={};return r.Utils.arrayUnique(X0(x).concat(X0(L)).concat(X0(E)).concat(X0(d)).concat(X0(f))).map(function(Q0){d0[Q0]=1}),x=x.toString(),L=L.toString(),E=E.toString(),d=d.toString(),f=f.toString(),H=F.parse($("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",x,L,E)).toString(),u0=F.parse($("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",x,L,E,d)).toString(),q0=F.parse($("12*({0})*({4})-3*({1})*({3})+({2})^2",x,L,E,d,f)).toString(),f=F.parse($("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",x,L,E,d,f)).toString(),f=F.parse($("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",q0,f)).toString(),o1=F.parse($("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",x,H,f,q0)).toString(),[F.parse($("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",x,L,H,u0,o1)),F.parse($("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",x,L,H,u0,o1)),F.parse($("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",x,L,H,u0,o1)),F.parse($("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",x,L,H,u0,o1))]},divideAndConquer:function(L,d){var E=[],L=r.Algebra.Factor.factor(L);return L.group===z0&&L.each(function(x){x=A0.unwrapPARENS(x),E=E.concat(l(x,d))}),E},csolve:function(f,d){return r.Utils.block("IGNORE_E",function(){var E=[],L=r.Utils.decompose_fn(f,d,!0);if(L.x.group===o1)for(var x,H=F.parse(L.x.power),u0=Number(H),q0=F.pow(F.divide(L.b.negate(),L.a),H.invert()),q0=(L=A0.toPolarFormArray(q0))[0],d0=(L[1],q0.toString()),Q0=(H.toString(),0);Q0<u0;Q0++)x=$("({0})*e^(2*{1}*pi*{2}*{3})",d0,Q0,H,r.Settings.IMAGINARY),x=F.parse(x),E.push(x);return E},!0)},getPoints:function(f,d,E){d=d||.01,E=E||[];var L=e0(f),x=Math.round(0),q0=L(x),H=q0/Math.abs(q0),u0=r.Settings.ROOTS_PER_SIDE,q0=u0;return E.push(Math.floor(x/2)),E.push(Math.abs(x)),E.push(x),f.each(function(d0){d0.containsFunction(r.Settings.LOG)&&E.push(.1)}),f=c1(-r.Settings.SOLVE_RADIUS,x,d),x=c1(x,r.Settings.SOLVE_RADIUS,d),d=function(d0,Q0){for(var t1,l1,r0,w0=[],I0=0,i0=d0.length;I0<i0;I0++)t1=d0[I0],r0=(l1=L(t1))/Math.abs(l1),isNaN(l1)||!isFinite(l1)||w0.length>Q0||(r0!==H&&w0.push(t1),H=r0);E=E.concat(w0)},d(f,q0),d(x,u0),E},bisection:function(f,d){var E=f-1,L=f+1;if(Math.sign(d(E))!==Math.sign(d(L))){var x,H,u0=0;do if(x=Math.abs(L-E),u0++>r.Settings.MAX_BISECTION_ITER||isNaN(x))return;while(H=(E+L)/2,0<d(E)*d(H)?E=H:L=H,x>=F1.EPSILON);var q0=(E+L)/2,f=d(q0);if(!isNaN(f)&&Math.abs(f)<=r.Settings.BI_SECTION_EPSILON)return r.Utils.round(q0,13)}},Newton:function(f,d,E){var L=r.Settings.MAX_NEWTON_ITERATIONS,x=0,H=f;do{var q0=d(H);if(H===0&&q0===0){u0=0;break}if(L<++x)return;var u0=H-q0/E(H),q0=Math.abs(u0-H),H=u0}while(q0>F1.NEWTON_EPSILON);if(Math.abs(d(u0))<=F1.EPSILON)return u0},rewrite:function(f,d,E){var L,x;d=d||new A0(0),f.isComposite()&&f.isLinear()?(L=[],x=[],f.each(function(d0){((d0=d0.clone()).fname==="sqrt"&&d0.contains(E)?L:x).push(d0)},!0),L.length===1&&(d=F.expand(F.pow(F.subtract(d,r.Utils.arraySum(x)),new A0(2))),f=F.expand(F.pow(A0.unwrapSQRT(L[0]),new A0(2))))):f=A0.unwrapSQRT(F.expand(f));var H=0,u0=f.length;if(f.group===p0&&f.contains(E)&&f.isLinear()){f.distributeMultiplier();var q0=new A0(0);return f.each(function(d0){d0.contains(E)?(H++,q0=F.add(q0,d0.clone())):d=F.subtract(d,d0.clone())}),f=q0,H!==u0?h.rewrite(f,d,E):[f,d]}if(f.group===z0&&f.contains(E)&&f.isLinear())return f.multiplier.lessThan(0)&&(f.multiplier=f.multiplier.multiply(new r.Frac(-1)),d.multiplier=d.multiplier.multiply(new r.Frac(-1))),d.equals(0)?new A0(0):(q0=new A0(1),f.each(function(d0){d0.contains(E)?q0=F.multiply(q0,d0.clone()):d=F.divide(d,d0.clone())}),h.rewrite(f=q0,d,E));if(!f.isLinear()&&f.contains(E))return u0=F.parse(f.power.clone().invert()),f=F.pow(f,u0.clone()),d=F.pow(F.expand(d),u0.clone()),h.rewrite(f,d,E);if(f.group===q1||f.group===o1||f.group===$0)return[f,d]},sqrtSolve:function(f,d){var E=new A0(0),L=new A0(0);if(f.isComposite()&&(f.each(function(H){H.fname==="sqrt"&&H.contains(d)?E=F.add(E,H.clone()):L=F.add(L,H.clone())}),!E.equals(0))){var x=F.expand(F.multiply(F.parse(f.multiplier),F.subtract(F.pow(L,new A0(2)),F.pow(E,new A0(2)))));return l(x,d).filter(function(H){if(H.isImaginary())return H;var u0={};return u0[d]=H,X1(f,u0).equals(0)?H:void 0})}}},l=function(f,d,E,L,x){if(L=L||0,L++>F1.MAX_SOLVE_DEPTH)return E;if(f instanceof Z0){if(f.isZero())return[new A0(0)];if(f.LHS.equals(d)&&!f.RHS.contains(d))return[f.RHS];if(f.RHS.equals(d)&&!f.LHS.contains(d))return[f.LHS]}if(f instanceof r.Vector&&(f=f.elements),d=d||"x",b1(f))return h.solveSystem.apply(void 0,arguments);E=E||[];var H={},Q0={};if(Q0[d]=0,f1(f)&&X1(f.getDenom(),Q0).equals(0)===!0)return E;var u0=function(y0,G0){var b0,R0=f1(y0);y0===void 0||typeof y0=="number"&&isNaN(y0)||(b1(y0)?y0.forEach(function(i1){u0(i1)}):y0.valueOf()!=="null"&&(typeof r.Settings.PRE_ADD_SOLUTION=="function"&&(y0=r.Settings.PRE_ADD_SOLUTION(y0)),R0||(y0=F.parse(y0)),r.Settings.make_pi_conversions&&G0&&(R0=(b0=F.divide(y0.clone(),new A0(Math.PI))).multiplier,G0=Math.abs(R0.num),R0=Math.abs(R0.den),G0<10&&R0<10&&(y0=F.multiply(b0,new A0("pi")))),b0=y0.toString(),H[b0]||E.push(y0),H[b0]=!0))};if(f.group===o1&&f.contains(d)){try{var t1={};t1[d]=0,X1(x,t1,"numer"),u0(new A0(0))}catch{}return E}if(f.group===z0){var d1=f.getNum();if(d1.group!==z0)return l(d1,d,E,L,x);var q0=String(d);return d1.each(function(G0){G0.contains(q0)&&l(G0,d,E,L,f)}),E}f.group===q1&&f.fname==="sqrt"&&(f=F.pow(A0.unwrapSQRT(f),new A0(2)));var d0=(r.Utils.isSymbol(f)?f:h.toLHS(f,!1)).getNum(),Q0=r.Utils.variables(d0),t1=Q0.length;if((d0=r.Utils.isInt(d0.power)&&0<d0.power?F.parse(d0).toLinear():d0).group===o1||d0.group===z0&&d0.contains(d))return[new A0(0)];function l1(y0){var G0=new A0(0),b0=new A0(0);return y0.each(function(R0){R0.contains(d,!0)?G0=F.add(G0,R0.clone()):b0=F.subtract(b0,R0.clone())}),[G0,b0]}var r0,w0={},I0=function(y0){var G0=(y0=F.expand(y0,{expand_denominator:!0,expand_functions:!0})).clone();if(y0.symbols)for(var b0 in y0.symbols){var R0=y0.symbols[b0],i1=R0.getDenom();if(!i1.isConstant(!0)&&y0.isComposite()){var A1=new A0(0);return y0.each(function(T1){A1=F.add(A1,F.multiply(T1,i1.clone()))}),I0(F.multiply(F.parse(y0.multiplier),A1))}var a1=T0(R0,d),U1=a1[1].fname===r.Settings.SQRT,D1=A0.unwrapSQRT(a1[1]),b0=D1.power.clone();if(!f1(b0)&&!b0.equals(.5))if(b0.den.gt(1)){if(U1)return y0=F.subtract(y0,R0.clone()),y0=F.add(y0,F.multiply(a1[0].clone(),D1)),I0(y0);D1=w0[b0.den],w0[b0.den]=D1?D1++:1}else{if(b0.sign()===-1){var P1=F.parse(d+"^"+Math.abs(b0));return y0.each(function(T1,J1){T1.contains(d)&&(y0.symbols[J1]=F.multiply(T1,P1.clone()))}),w0={},I0(F.parse(y0))}if(R0.group===$0&&(R0=r.Utils.arrayMin(r.Utils.keys(R0.symbols)),R0<0)){var P1=F.parse(d+"^"+Math.abs(R0)),Y1=new A0(0);return G0.each(function(J1){Y1=F.add(Y1,F.multiply(J1.clone(),P1.clone()))},!0),Y1}}}return y0};if(h.inverseFunctionSolve=function(y0,G0,b0){var R0=T0(G0.args[0],d);if(R0[1].group===o1)return F.divide(F.symfunction(y0,[F.divide(b0,F.parse(G0.multiplier))]),R0[0])},(d0=I0(d0)).equals(0))return[d0];var i0,k0,d1=r.Utils.keys(w0);if(d1.length===1&&(r0=d1[0],d0.each(function(y0,G0){var b0,R0;!y0.contains(d)||(y0=(R0=(b0=T0(y0,d))[1]).power).den.gt(1)&&(R0.power=y0.multiply(new r.Frac(r0)),d0.symbols[G0]=F.multiply(R0,b0[0]))}),d0=F.parse(d0)),u0(h.sqrtSolve(d0,d)),t1===1)if(d0.isPoly(!0)){var H0=new r.Algebra.Classes.Factors;if(r.Algebra.Factor.factor(d0,H0),1<H0.getNumberSymbolics())for(var s0 in H0.factors)u0(l(H0.factors[s0],d));else{var M0,n1,m1=(M0=r.Utils.getCoeffs(d0,d)).length-1,t1=!1;Q0[0]===d&&(i(M0,function(G0){return G0.group!==r.groups.N})&&(Q0=r.Algebra.proots(d0),i(Q0,function(G0){return!r.Utils.isInt(G0)})&&(t1=!0,Q0.map(function(G0){u0(new A0(G0))}))),t1||((f=F.parse(f))instanceof r.Equation&&(f=f.toLHS()),m1===1?u0(F.divide(M0[0],M0[1].negate())):m1===2?u0(F.expand(h.quad.apply(void 0,M0))):m1===3?(E=[],n1=r.Algebra.Factor.factor(f),0<(E=[]).length?u0(E):u0(h.cubic.apply(void 0,M0))):_1.proots(d0).map(u0)))}}else try{for(var _,S,O=d0.hasTrig(),W=h.getPoints(d0,.1),X=h.getPoints(d0,.05),f0=h.getPoints(d0,.01),q=r.Utils.arrayUnique(W.concat(X).concat(f0)).sort(function(G0,b0){return G0-b0}),c0=e0(d0.clone()),O0=[],Y=0;Y<q.length;Y++)_=q[Y],(S=h.bisection(_,c0))!==void 0?u0(S,O):O0.push(_);var q=O0,J=N1.diff(d0.clone()),k=e0(J);for(Y=0;Y<q.length;Y++)_=q[Y],u0(h.Newton(_,c0,k),O);E.sort()}catch(y0){console.log(y0)}else if(!d0.hasFunc(d)&&d0.isComposite())try{if((n1=r.Algebra.Factor.factor(d0.clone())).group===z0)n1.each(function(y0){u0(l(y0,d))});else{switch(m1=(M0=r.Utils.getCoeffs(d0,d)).length-1){case 0:var S0,E0,U0,h0=(S0=l1(d0))[0],l0=S0[1];h0.group===r.groups.EX&&(U0=`${E0=r.Settings.LOG}((${l0})/(${h0.multiplier}))/${E0}(${h0.value})/${h0.power.multiplier}`,u0(F.parse(U0)));break;case 1:u0(F.divide(M0[0],M0[1].negate()));break;case 2:u0(h.quad.apply(void 0,M0));break;case 3:u0(h.cubic.apply(void 0,M0));break;case 4:u0(h.quartic.apply(void 0,M0));break;default:u0(h.csolve(d0,d)),E.length===0&&u0(h.divideAndConquer(d0,d))}E.length===0&&u0(l(n1,d,E,L))}}catch{}else try{var F0,L0=h.rewrite(d0,null,d),h0=L0[0],l0=L0[1];if(h0.group===q1)h0.fname==="abs"?u0([l0.clone(),l0.negate()]):h0.fname==="sin"?u0(h.inverseFunctionSolve("asin",h0,l0)):h0.fname==="cos"?u0(h.inverseFunctionSolve("acos",h0,l0)):h0.fname==="tan"?u0(h.inverseFunctionSolve("atan",h0,l0)):h0.fname===r.Settings.LOG?(s0=(F0=T0(h0.args[0],d))[1]).group===o1&&(d0=new Z0(s0,l0=F.divide(F.subtract(F.pow(1<h0.args.length?h0.args[1]:new A0("e"),F.divide(l0,F.parse(h0.multiplier))),F0[3]),F0[0])).toLHS(),u0(l(d0,d))):u0(F.subtract(h0,l0));else{var _0=new Z0(h0,l0).toLHS();if(_0.equals(d0))throw new Error("Stopping. No stop condition exists");u0(l(_0,d))}}catch{try{d0.group===z0?u0(0):d0.group===p0&&(h0=(S0=l1(d0))[0],l0=S0[1],h0.group===r.groups.EX&&h0.value===d&&(i0=h0.power.clone().invert(),u0(F.pow(l0,i0))))}catch{}}return r0&&(E=E.map(function(y0){return F.pow(y0,new A0(r0))})),f1(f)&&(k0={},E=E.filter(function(y0){try{k0[d]=y0;var G0=Number(X1(f,k0));return isNaN(G0),!0}catch{return!1}})),E};A2.register([{name:"solveEquations",parent:"nerdamer",numargs:-1,visible:!0,build:function(){return l}},{name:"solve",parent:"Solve",numargs:2,visible:!0,build:function(){return r.Solve.solve}},{name:"setEquation",parent:"Solve",visible:!0,build:function(){return Z}}]),A2.updateAPI()}(),A2=d3.exports,b3.exports,function(){var A=A2.getCore(),r=A.PARSER,F=A.Symbol,_1=A.Utils.format,N1=A.Utils.isVector,T0=A.Utils.isArray,X1=(A.Vector,A.groups.S),N0=(A.groups.EX,A.groups.CP),$=A.groups.CB,e0=A.groups.FN;A.Settings.Laplace_integration_depth=40,F.prototype.findFunction=function(A0){if(this.group===e0&&this.fname===A0)return this.clone();var f1;if(this.symbols){for(var X0 in this.symbols)if(f1=this.symbols[X0].findFunction(A0))break}return f1};var x1=A.Extra={version:"1.4.2",LaPlace:{transform:function(A0,f1,X0){A0=A0.clone(),f1=f1.toString();var o1=(A0=F.unwrapSQRT(A0,!0)).stripVar(f1),$0=A0.group;if((A0=r.divide(A0,o1.clone())).isConstant()||!A0.contains(f1,!0))p0=r.parse(_1("({0})/({1})",A0,X0));else if($0===X1&&A.Utils.isInt(A0.power))var z0=String(A0.power),p0=r.parse(_1("factorial({0})/({1})^({0}+1)",z0,X0));else if(A0.group===X1&&A0.power.equals(.5))p0=r.parse(_1("sqrt(pi)/(2*({0})^(3/2))",X0));else if(A0.isComposite())p0=new F(0),A0.each(function(c1){p0=r.add(p0,x1.LaPlace.transform(c1,f1,X0))},!0);else if(!A0.isE()||A0.power.group!==X1&&A0.power.group!==$)if(A0.group!==e0||["sin","cos","sinh","cosh"].indexOf(A0.fname)===-1||A0.args[0].group!==X1&&A0.args[0].group!==$){var q1,z0=A.Settings.integration_depth<A.Settings.Laplace_integration_depth;z0&&(q1=A.Settings.integration_depth,A.Settings.integration_depth=A.Settings.Laplace_integration_depth),A.Utils.block("PARSE2NUMBER",function(){var b1=f1,Z0=A0.sub(f1,b1),Z0=r.parse("e^(-"+X0+"*"+b1+")*"+Z0);if((p0=A.Calculus.integrate(Z0,b1)).hasIntegral())return r.symfunction("laplace",arguments);p0=p0.sub(f1,0),p0=(p0=r.expand(r.multiply(p0,new F(-1)))).sub(b1,f1)},!1),p0=A.Utils.block("PARSE2NUMBER",function(){return r.parse(p0)},!0),z0&&(A.Settings.integration_depth=q1)}else switch(F1=A0.args[0].stripVar(f1),A0.fname){case"sin":p0=r.parse(_1("({0})/(({1})^2+({0})^2)",F1,X0));break;case"cos":p0=r.parse(_1("({1})/(({1})^2+({0})^2)",F1,X0));break;case"sinh":p0=r.parse(_1("({0})/(({1})^2-({0})^2)",F1,X0));break;case"cosh":p0=r.parse(_1("({1})/(({1})^2-({0})^2)",F1,X0))}else{var F1=A0.power.stripVar(f1);p0=r.parse(_1("1/(({1})-({0}))",F1,X0))}return r.multiply(p0,o1)},inverse:function(A0,f1,X0){var o1=A0.clone();return A.Utils.block("POSITIVE_MULTIPLIERS",function(){if((A0=A0.group===$?A.Algebra.PartFrac.partfrac(r.expand(A0),f1):A0).group===X1||A0.group===$||A0.isComposite()){var $0,z0,p0,q1,F1,c1,b1,Z0,Z,i,h,l,f,d,E,L=function(){(c1=r.multiply(c1,$0)).multiplier=c1.multiplier.multiply(A0.multiplier),c1=r.divide(c1,q1.a)},x=A0.multiplier.clone();if(A0.toUnitMultiplier(),$0=A0.getNum(),(z0=A0.getDenom().toUnitMultiplier()).group===N0?(F1=z0.power.clone(),z0.toLinear()):F1=new A.Frac(1),p0=f1.toString(),q1=A.Utils.decompose_fn(z0,p0,!0),A.Utils.decompose_fn(r.expand($0.clone()),p0,!0),$0.multiplier=$0.multiplier.multiply(x),(z0.group===X1||z0.group===$)&&q1.x.value===p0&&q1.b.equals(0)&&A.Utils.isInt(q1.x.power))l=q1.x.power-1,f=A.Math2.factorial(l),c1=r.divide(r.pow(X0,new F(l)),new F(f)),L();else if(z0.group===N0&&F1.equals(1))q1.x.group===A.groups.PL&&A.Algebra.degree(z0).equals(2)?(Z=A.Algebra.sqComplete(z0,p0),i=A.Utils.getU(z0),d=A.Utils.decompose_fn(Z.a,p0,!0).b,h=x1.LaPlace.inverse(r.parse(`1/((${i})^2+(${Z.c}))`),i,X0),c1=r.multiply(h,r.parse(`(${x})*e^(-(${d})*(${X0}))`))):q1.x.isLinear()&&!$0.contains(p0)?(X0=r.divide(X0,q1.a.clone()),c1=r.parse(_1("(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))",X0,q1.a,q1.b,F1,f=(l=F1-1)===0||l===1?"1":`(${F1}-1)!`)),L()):q1.x.group===X1&&q1.x.power.equals(2)&&($0.contains(p0)?(d=new F(1),$0.group===$&&(b1=new F(1),$0.each(function(t1){t1.contains(p0)?b1=r.multiply(b1,t1):d=r.multiply(d,t1)}),$0=b1),Z=(Z0=A.Utils.decompose_fn($0,p0,!0)).a,i=Z0.b,h=Z.containsFunction("sin"),l=Z.containsFunction("cos"),f=i.containsFunction("cos"),L=i.containsFunction("sin"),Z0.x.value===p0&&Z0.x.isLinear()&&!(h&&f||l||L)?c1=r.parse(_1("(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})",X0,Z0.a,q1.a,q1.b)):h&&f&&(h=Z.findFunction("sin"),f=i.findFunction("cos"),h.args[0].equals(f.args[0])&&!h.args[0].contains(p0)&&(H=r.divide(i,f.toUnitMultiplier()).toString(),f=h.args[0].toString(),E=q1.b,h=r.divide(Z,h.toUnitMultiplier()),c1=r.parse(_1("(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))",X0,d,H,f,E,h))))):c1=r.parse(_1("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))",X0,$0,q1.a,q1.b)));else if(q1.x.power.num&&q1.x.power.num.equals(3)&&q1.x.power.den.equals(2)&&$0.contains("sqrt(pi)")&&!$0.contains(p0)&&$0.isLinear()){var H=r.divide($0.clone(),r.parse("sqrt(pi)"));c1=r.parse(_1("(2*({2})*sqrt({0}))/({1})",X0,q1.a,H,$0))}else if(F1.equals(2)&&q1.x.power.equals(2))if($0.contains(p0))if((Z0=A.Utils.decompose_fn(r.expand($0.clone()),p0,!0)).x.isComposite()){var u0=[],q0=$0.collectSymbols(function(t1){t1=F.unwrapPARENS(t1);var l1=A.Utils.decompose_fn(t1,p0,!0);return l1.symbol=t1,l1}).sort(function(t1,l1){return t1=t1.x.value!==p0?0:t1.x.power,(l1.x.value!==p0?0:l1.x.power)-t1});d=new F(-1);for(var d0=0;d0<q0.length;d0++){var Q0=q0[d0];Q0.x.value===p0?u0.push(Q0):d=r.multiply(d,Q0.symbol)}u0[0].x.power.equals(2)&&u0[1].x.power.equals(1)&&u0[1].b.equals(0)&&!u0[0].b.equals(0)&&(H=u0[0].a.negate(),c1=r.parse(_1("-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2",X0,d,H,u0[0].b,q1.a,q1.b)))}else Z0.x.isLinear()?(d=r.divide(Z0.a,new F(2)),c1=r.parse(_1("(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))",X0,d,q1.a,q1.b))):Z0.x.power.equals(2)&&(c1=Z0.b.equals(0)?(d=r.divide(Z0.a,new F(2)),r.parse(_1("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",X0,d,q1.a,q1.b))):(d=r.divide(Z0.a,new F(2)),E=Z0.b.negate(),r.parse(_1("-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",X0,d,q1.a,q1.b,E))));else d=r.divide($0,new F(2)),c1=r.parse(_1("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))",X0,d,q1.a,q1.b));else A0.isComposite()&&(F1.equals(2)&&q1.x.group===X1?c1=r.parse(`(${x})*(${X0})*e^(-(${q1.b})*(${X0}))`):(c1=new F(0),A0.each(function(t1){c1=r.add(c1,x1.LaPlace.inverse(t1,f1,X0))},!0)))}return c1=c1||r.symfunction("ilt",[o1,f1,X0])},!0)}},Statistics:{frequencyMap:function(A0){for(var f1={},X0=0,o1=A0.length;X0<o1;X0++){var $0=A0[X0].toString();f1[$0]||(f1[$0]=0),f1[$0]++}return f1},sort:function(A0){return A0.sort(function(f1,X0){return f1.isConstant()&&X0.isConstant()||r.error("Unable to sort! All values must be numeric"),f1.multiplier.subtract(X0.multiplier)})},count:function(A0){return new F(A0.length)},sum:function(A0,f1){for(var z0=new F(0),X0=0,o1=A0.length;X0<o1;X0++)var $0=A0[X0].clone(),z0=f1?r.add(r.pow(r.subtract($0,f1.clone()),new F(2)),z0):r.add($0,z0);return z0},mean:function(){var A0=[].slice.call(arguments);return N1(A0[0])?x1.Statistics.mean.apply(this,A0[0].elements):r.divide(x1.Statistics.sum(A0),x1.Statistics.count(A0))},median:function(){var A0=[].slice.call(arguments);if(N1(A0[0]))return x1.Statistics.median.apply(this,A0[0].elements);try{var f1,X0,o1=x1.Statistics.sort(A0),$0=A0.length;X0=A.Utils.even($0)?(f1=$0/2,x1.Statistics.mean(o1[f1-1],o1[f1])):o1[Math.floor($0/2)]}catch{X0=r.symfunction("median",A0)}return X0},mode:function(){var A0=[].slice.call(arguments);if(N1(A0[0]))return x1.Statistics.mode.apply(this,A0[0].elements);var f1=x1.Statistics.frequencyMap(A0);if(A.Utils.keys(f1).length===1)p0=A0[0];else{var X0,o1={};for(X0 in f1){var $0,z0=f1[X0];z0 in o1?($0=o1[z0],T0($0)?$0.push(X0):o1[z0]=[X0,o1[z0]]):o1[z0]=X0}var A0=o1[Math.max.apply(null,A.Utils.keys(o1))],p0=T0(A0)?r.symfunction("mode",A0.sort()):r.parse(A0)}return p0},gVariance:function(A0,f1){var X0=x1.Statistics.mean.apply(x1.Statistics,f1),X0=x1.Statistics.sum(f1,X0);return r.multiply(A0,X0)},variance:function(){var A0=[].slice.call(arguments);if(N1(A0[0]))return x1.Statistics.variance.apply(this,A0[0].elements);var f1=r.divide(new F(1),x1.Statistics.count(A0));return x1.Statistics.gVariance(f1,A0)},sampleVariance:function(){var A0=[].slice.call(arguments);if(N1(A0[0]))return x1.Statistics.sampleVariance.apply(this,A0[0].elements);var f1=r.divide(new F(1),r.subtract(x1.Statistics.count(A0),new F(1)));return x1.Statistics.gVariance(f1,A0)},standardDeviation:function(){var A0=[].slice.call(arguments);return N1(A0[0])?x1.Statistics.standardDeviation.apply(this,A0[0].elements):r.pow(x1.Statistics.variance.apply(x1.Statistics,A0),new F(.5))},sampleStandardDeviation:function(){var A0=[].slice.call(arguments);return N1(A0[0])?x1.Statistics.sampleStandardDeviation.apply(this,A0[0].elements):r.pow(x1.Statistics.sampleVariance.apply(x1.Statistics,A0),new F(.5))},zScore:function(A0,f1,X0){return r.divide(r.subtract(A0,f1),X0)}},Units:{table:{foot:"12 inch",meter:"100 cm",decimeter:"10 cm"}}};A2.register([{name:"laplace",visible:!0,numargs:3,build:function(){return x1.LaPlace.transform}},{name:"ilt",visible:!0,numargs:3,build:function(){return x1.LaPlace.inverse}},{name:"mean",visible:!0,numargs:-1,build:function(){return x1.Statistics.mean}},{name:"median",visible:!0,numargs:-1,build:function(){return x1.Statistics.median}},{name:"mode",visible:!0,numargs:-1,build:function(){return x1.Statistics.mode}},{name:"smpvar",visible:!0,numargs:-1,build:function(){return x1.Statistics.sampleVariance}},{name:"variance",visible:!0,numargs:-1,build:function(){return x1.Statistics.variance}},{name:"smpstdev",visible:!0,numargs:-1,build:function(){return x1.Statistics.sampleStandardDeviation}},{name:"stdev",visible:!0,numargs:-1,build:function(){return x1.Statistics.standardDeviation}},{name:"zscore",visible:!0,numargs:3,build:function(){return x1.Statistics.zScore}}]),A2.updateAPI()}(),W2.exports=A2})(U3);var e6=U3.exports;export{e6 as n};
